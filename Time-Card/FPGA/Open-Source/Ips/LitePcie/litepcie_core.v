// -----------------------------------------------------------------------------
// Auto-Generated by:        __   _ __      _  __
//                          / /  (_) /____ | |/_/
//                         / /__/ / __/ -_)>  <
//                        /____/_/\__/\__/_/|_|
//                     Build your hardware, easily!
//                   https://github.com/enjoy-digital/litex
//
// Filename   : litepcie_core.v
// Device     : xc7a
// LiteX sha1 : --------
// Date       : 2023-10-04 16:35:32
//------------------------------------------------------------------------------

`timescale 1ns / 1ps

//------------------------------------------------------------------------------
// Module
//------------------------------------------------------------------------------

module litepcie_core (
    output wire          clk,
    output wire   [63:0] dma0_reader_axi_tdata,
    output wire          dma0_reader_axi_tlast,
    input  wire          dma0_reader_axi_tready,
    output wire          dma0_reader_axi_tuser,
    output wire          dma0_reader_axi_tvalid,
    output wire          dma0_status_reader_enable,
    output wire          dma0_status_writer_enable,
    input  wire   [63:0] dma0_writer_axi_tdata,
    input  wire          dma0_writer_axi_tlast,
    output wire          dma0_writer_axi_tready,
    input  wire          dma0_writer_axi_tuser,
    input  wire          dma0_writer_axi_tvalid,
    output wire   [31:0] mmap_axi_lite_araddr,
    output wire    [2:0] mmap_axi_lite_arprot,
    input  wire          mmap_axi_lite_arready,
    output wire          mmap_axi_lite_arvalid,
    output wire   [31:0] mmap_axi_lite_awaddr,
    output wire    [2:0] mmap_axi_lite_awprot,
    input  wire          mmap_axi_lite_awready,
    output wire          mmap_axi_lite_awvalid,
    output wire          mmap_axi_lite_bready,
    input  wire    [1:0] mmap_axi_lite_bresp,
    input  wire          mmap_axi_lite_bvalid,
    input  wire   [31:0] mmap_axi_lite_rdata,
    output wire          mmap_axi_lite_rready,
    input  wire    [1:0] mmap_axi_lite_rresp,
    input  wire          mmap_axi_lite_rvalid,
    output wire   [31:0] mmap_axi_lite_wdata,
    input  wire          mmap_axi_lite_wready,
    output wire    [3:0] mmap_axi_lite_wstrb,
    output wire          mmap_axi_lite_wvalid,
    input  wire   [31:0] mmap_slave_axi_lite_araddr,
    input  wire    [2:0] mmap_slave_axi_lite_arprot,
    output wire          mmap_slave_axi_lite_arready,
    input  wire          mmap_slave_axi_lite_arvalid,
    input  wire   [31:0] mmap_slave_axi_lite_awaddr,
    input  wire    [2:0] mmap_slave_axi_lite_awprot,
    output wire          mmap_slave_axi_lite_awready,
    input  wire          mmap_slave_axi_lite_awvalid,
    input  wire          mmap_slave_axi_lite_bready,
    output wire    [1:0] mmap_slave_axi_lite_bresp,
    output wire          mmap_slave_axi_lite_bvalid,
    output wire   [31:0] mmap_slave_axi_lite_rdata,
    input  wire          mmap_slave_axi_lite_rready,
    output wire    [1:0] mmap_slave_axi_lite_rresp,
    output wire          mmap_slave_axi_lite_rvalid,
    input  wire   [31:0] mmap_slave_axi_lite_wdata,
    output wire          mmap_slave_axi_lite_wready,
    input  wire    [3:0] mmap_slave_axi_lite_wstrb,
    input  wire          mmap_slave_axi_lite_wvalid,
    input  wire   [31:0] msi_irqs,
    input  wire          pcie_clk_n,
    (* dont_touch = "true" *)
    input  wire          pcie_clk_p,
    input  wire          pcie_rst_n,
    input  wire          pcie_rx_n,
    input  wire          pcie_rx_p,
    output wire          pcie_tx_n,
    output wire          pcie_tx_p,
    input  wire          ptm_time_clk,
    input  wire   [63:0] ptm_time_ns,
    input  wire          ptm_time_rst,
    output wire          rst
);


//------------------------------------------------------------------------------
// Signals
//------------------------------------------------------------------------------

wire   [29:0] addr;
reg    [29:0] array_muxed0 = 30'd0;
reg    [31:0] array_muxed1 = 32'd0;
reg     [3:0] array_muxed2 = 4'd0;
reg           array_muxed3 = 1'd0;
reg           array_muxed4 = 1'd0;
reg           array_muxed5 = 1'd0;
reg     [2:0] array_muxed6 = 3'd0;
reg     [1:0] array_muxed7 = 2'd0;
reg    [31:0] axiliteinterface0_ar_payload_addr = 32'd0;
reg     [2:0] axiliteinterface0_ar_payload_prot = 3'd0;
wire          axiliteinterface0_ar_ready;
reg           axiliteinterface0_ar_valid = 1'd0;
reg    [31:0] axiliteinterface0_aw_payload_addr = 32'd0;
reg     [2:0] axiliteinterface0_aw_payload_prot = 3'd0;
wire          axiliteinterface0_aw_ready;
reg           axiliteinterface0_aw_valid = 1'd0;
wire    [1:0] axiliteinterface0_b_payload_resp;
reg           axiliteinterface0_b_ready = 1'd0;
wire          axiliteinterface0_b_valid;
wire   [31:0] axiliteinterface0_r_payload_data;
wire    [1:0] axiliteinterface0_r_payload_resp;
reg           axiliteinterface0_r_ready = 1'd0;
wire          axiliteinterface0_r_valid;
reg    [31:0] axiliteinterface0_w_payload_data = 32'd0;
reg     [3:0] axiliteinterface0_w_payload_strb = 4'd0;
wire          axiliteinterface0_w_ready;
reg           axiliteinterface0_w_valid = 1'd0;
wire   [31:0] axiliteinterface1_ar_payload_addr;
wire    [2:0] axiliteinterface1_ar_payload_prot;
reg           axiliteinterface1_ar_ready = 1'd0;
wire          axiliteinterface1_ar_valid;
wire   [31:0] axiliteinterface1_aw_payload_addr;
wire    [2:0] axiliteinterface1_aw_payload_prot;
reg           axiliteinterface1_aw_ready = 1'd0;
wire          axiliteinterface1_aw_valid;
reg     [1:0] axiliteinterface1_b_payload_resp = 2'd0;
wire          axiliteinterface1_b_ready;
reg           axiliteinterface1_b_valid = 1'd0;
reg    [31:0] axiliteinterface1_r_payload_data = 32'd0;
reg     [1:0] axiliteinterface1_r_payload_resp = 2'd0;
wire          axiliteinterface1_r_ready;
reg           axiliteinterface1_r_valid = 1'd0;
wire   [31:0] axiliteinterface1_w_payload_data;
wire    [3:0] axiliteinterface1_w_payload_strb;
reg           axiliteinterface1_w_ready = 1'd0;
wire          axiliteinterface1_w_valid;
wire          bufferizeendpoints0_pipe_valid_sink_first;
wire          bufferizeendpoints0_pipe_valid_sink_last;
wire   [63:0] bufferizeendpoints0_pipe_valid_sink_payload_data;
wire          bufferizeendpoints0_pipe_valid_sink_ready;
wire          bufferizeendpoints0_pipe_valid_sink_valid;
reg           bufferizeendpoints0_pipe_valid_source_first = 1'd0;
reg           bufferizeendpoints0_pipe_valid_source_last = 1'd0;
reg    [63:0] bufferizeendpoints0_pipe_valid_source_payload_data = 64'd0;
wire          bufferizeendpoints0_pipe_valid_source_ready;
reg           bufferizeendpoints0_pipe_valid_source_valid = 1'd0;
wire          bufferizeendpoints0_sink_sink_first;
wire          bufferizeendpoints0_sink_sink_last;
wire   [63:0] bufferizeendpoints0_sink_sink_payload_data;
wire          bufferizeendpoints0_sink_sink_ready;
wire          bufferizeendpoints0_sink_sink_valid;
wire          bufferizeendpoints0_source_source_first;
wire          bufferizeendpoints0_source_source_last;
wire   [63:0] bufferizeendpoints0_source_source_payload_data;
wire          bufferizeendpoints0_source_source_ready;
wire          bufferizeendpoints0_source_source_valid;
wire          bufferizeendpoints1_pipe_valid_sink_first;
wire          bufferizeendpoints1_pipe_valid_sink_last;
wire   [63:0] bufferizeendpoints1_pipe_valid_sink_payload_data;
wire          bufferizeendpoints1_pipe_valid_sink_ready;
wire          bufferizeendpoints1_pipe_valid_sink_valid;
reg           bufferizeendpoints1_pipe_valid_source_first = 1'd0;
reg           bufferizeendpoints1_pipe_valid_source_last = 1'd0;
reg    [63:0] bufferizeendpoints1_pipe_valid_source_payload_data = 64'd0;
wire          bufferizeendpoints1_pipe_valid_source_ready;
reg           bufferizeendpoints1_pipe_valid_source_valid = 1'd0;
wire          bufferizeendpoints1_sink_sink_first;
wire          bufferizeendpoints1_sink_sink_last;
wire   [63:0] bufferizeendpoints1_sink_sink_payload_data;
wire          bufferizeendpoints1_sink_sink_ready;
wire          bufferizeendpoints1_sink_sink_valid;
wire          bufferizeendpoints1_source_source_first;
wire          bufferizeendpoints1_source_source_last;
wire   [63:0] bufferizeendpoints1_source_source_payload_data;
wire          bufferizeendpoints1_source_source_ready;
wire          bufferizeendpoints1_source_source_valid;
wire          bus_error;
reg    [31:0] bus_errors = 32'd0;
reg           bus_errors_re = 1'd0;
wire   [31:0] bus_errors_status;
wire          bus_errors_we;
wire   [63:0] cases_slice_proxy0;
wire    [7:0] cases_slice_proxy1;
wire   [63:0] cases_slice_proxy2;
wire    [7:0] cases_slice_proxy3;
wire   [63:0] cases_slice_proxy4;
wire    [7:0] cases_slice_proxy5;
wire   [63:0] cases_slice_proxy6;
wire    [7:0] cases_slice_proxy7;
wire          clk125_clk;
wire          clk125_rst;
wire          clk250_clk;
wire          clk250_rst;
reg           cmd_done = 1'd0;
reg           cmd_done_wishbone2axilite_next_value0 = 1'd0;
reg           cmd_done_wishbone2axilite_next_value_ce0 = 1'd0;
reg    [19:0] count = 20'd1000000;
wire          cpu_rst;
wire   [13:0] csr_interconnect_adr;
wire   [31:0] csr_interconnect_dat_r;
wire   [31:0] csr_interconnect_dat_w;
wire          csr_interconnect_we;
wire   [31:0] csrbank0_bus_errors_r;
reg           csrbank0_bus_errors_re = 1'd0;
wire   [31:0] csrbank0_bus_errors_w;
reg           csrbank0_bus_errors_we = 1'd0;
wire    [1:0] csrbank0_reset0_r;
reg           csrbank0_reset0_re = 1'd0;
wire    [1:0] csrbank0_reset0_w;
reg           csrbank0_reset0_we = 1'd0;
wire   [31:0] csrbank0_scratch0_r;
reg           csrbank0_scratch0_re = 1'd0;
wire   [31:0] csrbank0_scratch0_w;
reg           csrbank0_scratch0_we = 1'd0;
wire          csrbank0_sel;
wire   [31:0] csrbank1_buffering_reader_fifo_control0_r;
reg           csrbank1_buffering_reader_fifo_control0_re = 1'd0;
wire   [31:0] csrbank1_buffering_reader_fifo_control0_w;
reg           csrbank1_buffering_reader_fifo_control0_we = 1'd0;
wire   [23:0] csrbank1_buffering_reader_fifo_status_r;
reg           csrbank1_buffering_reader_fifo_status_re = 1'd0;
wire   [23:0] csrbank1_buffering_reader_fifo_status_w;
reg           csrbank1_buffering_reader_fifo_status_we = 1'd0;
wire   [31:0] csrbank1_buffering_writer_fifo_control0_r;
reg           csrbank1_buffering_writer_fifo_control0_re = 1'd0;
wire   [31:0] csrbank1_buffering_writer_fifo_control0_w;
reg           csrbank1_buffering_writer_fifo_control0_we = 1'd0;
wire   [23:0] csrbank1_buffering_writer_fifo_status_r;
reg           csrbank1_buffering_writer_fifo_status_re = 1'd0;
wire   [23:0] csrbank1_buffering_writer_fifo_status_w;
reg           csrbank1_buffering_writer_fifo_status_we = 1'd0;
wire          csrbank1_loopback_enable0_r;
reg           csrbank1_loopback_enable0_re = 1'd0;
wire          csrbank1_loopback_enable0_w;
reg           csrbank1_loopback_enable0_we = 1'd0;
wire    [1:0] csrbank1_reader_enable0_r;
reg           csrbank1_reader_enable0_re = 1'd0;
wire    [1:0] csrbank1_reader_enable0_w;
reg           csrbank1_reader_enable0_we = 1'd0;
wire   [15:0] csrbank1_reader_monitor_underflows_r;
reg           csrbank1_reader_monitor_underflows_re = 1'd0;
wire   [15:0] csrbank1_reader_monitor_underflows_w;
reg           csrbank1_reader_monitor_underflows_we = 1'd0;
wire    [8:0] csrbank1_reader_table_level_r;
reg           csrbank1_reader_table_level_re = 1'd0;
wire    [8:0] csrbank1_reader_table_level_w;
reg           csrbank1_reader_table_level_we = 1'd0;
wire          csrbank1_reader_table_loop_prog_n0_r;
reg           csrbank1_reader_table_loop_prog_n0_re = 1'd0;
wire          csrbank1_reader_table_loop_prog_n0_w;
reg           csrbank1_reader_table_loop_prog_n0_we = 1'd0;
wire   [31:0] csrbank1_reader_table_loop_status_r;
reg           csrbank1_reader_table_loop_status_re = 1'd0;
wire   [31:0] csrbank1_reader_table_loop_status_w;
reg           csrbank1_reader_table_loop_status_we = 1'd0;
wire          csrbank1_reader_table_reset0_r;
reg           csrbank1_reader_table_reset0_re = 1'd0;
wire          csrbank1_reader_table_reset0_w;
reg           csrbank1_reader_table_reset0_we = 1'd0;
wire   [31:0] csrbank1_reader_table_value0_r;
reg           csrbank1_reader_table_value0_re = 1'd0;
wire   [31:0] csrbank1_reader_table_value0_w;
reg           csrbank1_reader_table_value0_we = 1'd0;
wire   [25:0] csrbank1_reader_table_value1_r;
reg           csrbank1_reader_table_value1_re = 1'd0;
wire   [25:0] csrbank1_reader_table_value1_w;
reg           csrbank1_reader_table_value1_we = 1'd0;
wire   [31:0] csrbank1_reader_table_we0_r;
reg           csrbank1_reader_table_we0_re = 1'd0;
wire   [31:0] csrbank1_reader_table_we0_w;
reg           csrbank1_reader_table_we0_we = 1'd0;
wire          csrbank1_sel;
wire          csrbank1_synchronizer_bypass0_r;
reg           csrbank1_synchronizer_bypass0_re = 1'd0;
wire          csrbank1_synchronizer_bypass0_w;
reg           csrbank1_synchronizer_bypass0_we = 1'd0;
wire    [1:0] csrbank1_synchronizer_enable0_r;
reg           csrbank1_synchronizer_enable0_re = 1'd0;
wire    [1:0] csrbank1_synchronizer_enable0_w;
reg           csrbank1_synchronizer_enable0_we = 1'd0;
wire    [1:0] csrbank1_writer_enable0_r;
reg           csrbank1_writer_enable0_re = 1'd0;
wire    [1:0] csrbank1_writer_enable0_w;
reg           csrbank1_writer_enable0_we = 1'd0;
wire   [15:0] csrbank1_writer_monitor_overflows_r;
reg           csrbank1_writer_monitor_overflows_re = 1'd0;
wire   [15:0] csrbank1_writer_monitor_overflows_w;
reg           csrbank1_writer_monitor_overflows_we = 1'd0;
wire    [8:0] csrbank1_writer_table_level_r;
reg           csrbank1_writer_table_level_re = 1'd0;
wire    [8:0] csrbank1_writer_table_level_w;
reg           csrbank1_writer_table_level_we = 1'd0;
wire          csrbank1_writer_table_loop_prog_n0_r;
reg           csrbank1_writer_table_loop_prog_n0_re = 1'd0;
wire          csrbank1_writer_table_loop_prog_n0_w;
reg           csrbank1_writer_table_loop_prog_n0_we = 1'd0;
wire   [31:0] csrbank1_writer_table_loop_status_r;
reg           csrbank1_writer_table_loop_status_re = 1'd0;
wire   [31:0] csrbank1_writer_table_loop_status_w;
reg           csrbank1_writer_table_loop_status_we = 1'd0;
wire          csrbank1_writer_table_reset0_r;
reg           csrbank1_writer_table_reset0_re = 1'd0;
wire          csrbank1_writer_table_reset0_w;
reg           csrbank1_writer_table_reset0_we = 1'd0;
wire   [31:0] csrbank1_writer_table_value0_r;
reg           csrbank1_writer_table_value0_re = 1'd0;
wire   [31:0] csrbank1_writer_table_value0_w;
reg           csrbank1_writer_table_value0_we = 1'd0;
wire   [25:0] csrbank1_writer_table_value1_r;
reg           csrbank1_writer_table_value1_re = 1'd0;
wire   [25:0] csrbank1_writer_table_value1_w;
reg           csrbank1_writer_table_value1_we = 1'd0;
wire   [31:0] csrbank1_writer_table_we0_r;
reg           csrbank1_writer_table_we0_re = 1'd0;
wire   [31:0] csrbank1_writer_table_we0_w;
reg           csrbank1_writer_table_we0_we = 1'd0;
reg           csrbank2_phy_bus_master_enable_r = 1'd0;
reg           csrbank2_phy_bus_master_enable_re = 1'd0;
wire          csrbank2_phy_bus_master_enable_w;
reg           csrbank2_phy_bus_master_enable_we = 1'd0;
reg     [9:0] csrbank2_phy_link_status_r = 10'd0;
reg           csrbank2_phy_link_status_re = 1'd0;
wire    [9:0] csrbank2_phy_link_status_w;
reg           csrbank2_phy_link_status_we = 1'd0;
reg    [15:0] csrbank2_phy_max_payload_size_r = 16'd0;
reg           csrbank2_phy_max_payload_size_re = 1'd0;
wire   [15:0] csrbank2_phy_max_payload_size_w;
reg           csrbank2_phy_max_payload_size_we = 1'd0;
reg    [15:0] csrbank2_phy_max_request_size_r = 16'd0;
reg           csrbank2_phy_max_request_size_re = 1'd0;
wire   [15:0] csrbank2_phy_max_request_size_w;
reg           csrbank2_phy_max_request_size_we = 1'd0;
reg           csrbank2_phy_msi_enable_r = 1'd0;
reg           csrbank2_phy_msi_enable_re = 1'd0;
wire          csrbank2_phy_msi_enable_w;
reg           csrbank2_phy_msi_enable_we = 1'd0;
reg           csrbank2_phy_msix_enable_r = 1'd0;
reg           csrbank2_phy_msix_enable_re = 1'd0;
wire          csrbank2_phy_msix_enable_w;
reg           csrbank2_phy_msix_enable_we = 1'd0;
wire          csrbank2_sel;
wire   [31:0] csrbank3_enable0_r;
reg           csrbank3_enable0_re = 1'd0;
wire   [31:0] csrbank3_enable0_w;
reg           csrbank3_enable0_we = 1'd0;
wire   [31:0] csrbank3_enable1_r;
reg           csrbank3_enable1_re = 1'd0;
wire   [31:0] csrbank3_enable1_w;
reg           csrbank3_enable1_we = 1'd0;
wire   [31:0] csrbank3_pba0_r;
reg           csrbank3_pba0_re = 1'd0;
wire   [31:0] csrbank3_pba0_w;
reg           csrbank3_pba0_we = 1'd0;
wire   [31:0] csrbank3_pba1_r;
reg           csrbank3_pba1_re = 1'd0;
wire   [31:0] csrbank3_pba1_w;
reg           csrbank3_pba1_we = 1'd0;
wire          csrbank3_sel;
wire          csrbank4_sel;
wire    [1:0] csrbank5_control0_r;
reg           csrbank5_control0_re = 1'd0;
wire    [1:0] csrbank5_control0_w;
reg           csrbank5_control0_we = 1'd0;
wire   [31:0] csrbank5_link_delay_r;
reg           csrbank5_link_delay_re = 1'd0;
wire   [31:0] csrbank5_link_delay_w;
reg           csrbank5_link_delay_we = 1'd0;
wire   [31:0] csrbank5_master_time0_r;
reg           csrbank5_master_time0_re = 1'd0;
wire   [31:0] csrbank5_master_time0_w;
reg           csrbank5_master_time0_we = 1'd0;
wire   [31:0] csrbank5_master_time1_r;
reg           csrbank5_master_time1_re = 1'd0;
wire   [31:0] csrbank5_master_time1_w;
reg           csrbank5_master_time1_we = 1'd0;
wire   [31:0] csrbank5_phy_rx_delay_r;
reg           csrbank5_phy_rx_delay_re = 1'd0;
wire   [31:0] csrbank5_phy_rx_delay_w;
reg           csrbank5_phy_rx_delay_we = 1'd0;
wire   [31:0] csrbank5_phy_tx_delay_r;
reg           csrbank5_phy_tx_delay_re = 1'd0;
wire   [31:0] csrbank5_phy_tx_delay_w;
reg           csrbank5_phy_tx_delay_we = 1'd0;
wire          csrbank5_sel;
wire    [1:0] csrbank5_status_r;
reg           csrbank5_status_re = 1'd0;
wire    [1:0] csrbank5_status_w;
reg           csrbank5_status_we = 1'd0;
wire   [31:0] csrbank5_t1_time0_r;
reg           csrbank5_t1_time0_re = 1'd0;
wire   [31:0] csrbank5_t1_time0_w;
reg           csrbank5_t1_time0_we = 1'd0;
wire   [31:0] csrbank5_t1_time1_r;
reg           csrbank5_t1_time1_re = 1'd0;
wire   [31:0] csrbank5_t1_time1_w;
reg           csrbank5_t1_time1_we = 1'd0;
wire   [31:0] csrbank5_t4_time0_r;
reg           csrbank5_t4_time0_re = 1'd0;
wire   [31:0] csrbank5_t4_time0_w;
reg           csrbank5_t4_time0_we = 1'd0;
wire   [31:0] csrbank5_t4_time1_r;
reg           csrbank5_t4_time1_re = 1'd0;
wire   [31:0] csrbank5_t4_time1_w;
reg           csrbank5_t4_time1_we = 1'd0;
reg    [31:0] data = 32'd0;
reg    [31:0] data_axilite2wishbone_next_value1 = 32'd0;
reg           data_axilite2wishbone_next_value_ce1 = 1'd0;
reg           data_done = 1'd0;
reg           data_done_wishbone2axilite_next_value1 = 1'd0;
reg           data_done_wishbone2axilite_next_value_ce1 = 1'd0;
wire          depacketizer_cmp_source_first;
wire          depacketizer_cmp_source_last;
wire   [31:0] depacketizer_cmp_source_payload_adr;
reg     [7:0] depacketizer_cmp_source_payload_channel = 8'd0;
wire   [15:0] depacketizer_cmp_source_payload_cmp_id;
wire   [63:0] depacketizer_cmp_source_payload_dat;
wire          depacketizer_cmp_source_payload_end;
wire          depacketizer_cmp_source_payload_err;
wire    [9:0] depacketizer_cmp_source_payload_len;
wire   [15:0] depacketizer_cmp_source_payload_req_id;
wire    [7:0] depacketizer_cmp_source_payload_tag;
reg     [7:0] depacketizer_cmp_source_payload_user_id = 8'd0;
wire          depacketizer_cmp_source_ready;
wire          depacketizer_cmp_source_valid;
wire          depacketizer_conf_source_first;
wire          depacketizer_conf_source_last;
wire    [7:0] depacketizer_conf_source_payload_bus_number;
wire   [63:0] depacketizer_conf_source_payload_dat;
wire    [4:0] depacketizer_conf_source_payload_device_no;
wire    [2:0] depacketizer_conf_source_payload_ext_reg;
wire    [2:0] depacketizer_conf_source_payload_func;
wire    [5:0] depacketizer_conf_source_payload_register_no;
wire   [15:0] depacketizer_conf_source_payload_req_id;
wire    [7:0] depacketizer_conf_source_payload_tag;
reg           depacketizer_conf_source_payload_we = 1'd0;
reg           depacketizer_conf_source_ready = 1'd0;
wire          depacketizer_conf_source_valid;
wire          depacketizer_dispatch_sink_first;
wire          depacketizer_dispatch_sink_last;
reg     [7:0] depacketizer_dispatch_sink_payload_be = 8'd0;
reg    [63:0] depacketizer_dispatch_sink_payload_dat = 64'd0;
wire    [1:0] depacketizer_dispatch_sink_payload_fmt;
wire    [4:0] depacketizer_dispatch_sink_payload_type;
reg           depacketizer_dispatch_sink_ready = 1'd0;
wire          depacketizer_dispatch_sink_valid;
reg           depacketizer_dispatcher_first = 1'd1;
reg           depacketizer_dispatcher_last = 1'd0;
wire          depacketizer_dispatcher_ongoing0;
reg           depacketizer_dispatcher_ongoing1 = 1'd0;
reg     [2:0] depacketizer_dispatcher_sel0 = 3'd0;
reg     [2:0] depacketizer_dispatcher_sel1 = 3'd0;
reg     [2:0] depacketizer_dispatcher_sel_ongoing = 3'd0;
reg           depacketizer_endpoint0_first = 1'd0;
reg           depacketizer_endpoint0_last = 1'd0;
reg     [7:0] depacketizer_endpoint0_payload_be = 8'd0;
reg    [63:0] depacketizer_endpoint0_payload_dat = 64'd0;
reg     [1:0] depacketizer_endpoint0_payload_fmt = 2'd0;
reg     [4:0] depacketizer_endpoint0_payload_type = 5'd0;
wire          depacketizer_endpoint0_ready;
reg           depacketizer_endpoint0_valid = 1'd0;
reg           depacketizer_endpoint1_first = 1'd0;
reg           depacketizer_endpoint1_last = 1'd0;
reg     [7:0] depacketizer_endpoint1_payload_be = 8'd0;
reg    [63:0] depacketizer_endpoint1_payload_dat = 64'd0;
reg     [1:0] depacketizer_endpoint1_payload_fmt = 2'd0;
reg     [4:0] depacketizer_endpoint1_payload_type = 5'd0;
wire          depacketizer_endpoint1_ready;
reg           depacketizer_endpoint1_valid = 1'd0;
reg           depacketizer_endpoint2_first = 1'd0;
reg           depacketizer_endpoint2_last = 1'd0;
reg     [7:0] depacketizer_endpoint2_payload_be = 8'd0;
reg    [63:0] depacketizer_endpoint2_payload_dat = 64'd0;
reg     [1:0] depacketizer_endpoint2_payload_fmt = 2'd0;
reg     [4:0] depacketizer_endpoint2_payload_type = 5'd0;
wire          depacketizer_endpoint2_ready;
reg           depacketizer_endpoint2_valid = 1'd0;
reg           depacketizer_endpoint3_first = 1'd0;
reg           depacketizer_endpoint3_last = 1'd0;
reg     [7:0] depacketizer_endpoint3_payload_be = 8'd0;
reg    [63:0] depacketizer_endpoint3_payload_dat = 64'd0;
reg     [1:0] depacketizer_endpoint3_payload_fmt = 2'd0;
reg     [4:0] depacketizer_endpoint3_payload_type = 5'd0;
wire          depacketizer_endpoint3_ready;
reg           depacketizer_endpoint3_valid = 1'd0;
reg           depacketizer_endpoint4_first = 1'd0;
reg           depacketizer_endpoint4_last = 1'd0;
reg     [7:0] depacketizer_endpoint4_payload_be = 8'd0;
reg    [63:0] depacketizer_endpoint4_payload_dat = 64'd0;
reg     [1:0] depacketizer_endpoint4_payload_fmt = 2'd0;
reg     [4:0] depacketizer_endpoint4_payload_type = 5'd0;
wire          depacketizer_endpoint4_ready;
reg           depacketizer_endpoint4_valid = 1'd0;
reg     [7:0] depacketizer_header_extracter_be = 8'd0;
reg           depacketizer_header_extracter_count = 1'd0;
reg           depacketizer_header_extracter_count_litepcietlpdepacketizer_next_value2 = 1'd0;
reg           depacketizer_header_extracter_count_litepcietlpdepacketizer_next_value_ce2 = 1'd0;
reg    [63:0] depacketizer_header_extracter_dat = 64'd0;
reg           depacketizer_header_extracter_first = 1'd0;
reg           depacketizer_header_extracter_first_litepcietlpdepacketizer_next_value0 = 1'd0;
reg           depacketizer_header_extracter_first_litepcietlpdepacketizer_next_value_ce0 = 1'd0;
reg           depacketizer_header_extracter_last = 1'd0;
reg           depacketizer_header_extracter_last_litepcietlpdepacketizer_next_value1 = 1'd0;
reg           depacketizer_header_extracter_last_litepcietlpdepacketizer_next_value_ce1 = 1'd0;
wire          depacketizer_header_extracter_sink_first;
wire          depacketizer_header_extracter_sink_last;
wire    [7:0] depacketizer_header_extracter_sink_payload_be;
wire   [63:0] depacketizer_header_extracter_sink_payload_dat;
reg           depacketizer_header_extracter_sink_ready = 1'd0;
wire          depacketizer_header_extracter_sink_valid;
reg           depacketizer_header_extracter_source_first = 1'd0;
reg           depacketizer_header_extracter_source_last = 1'd0;
reg     [7:0] depacketizer_header_extracter_source_payload_be = 8'd0;
reg    [63:0] depacketizer_header_extracter_source_payload_dat = 64'd0;
reg   [127:0] depacketizer_header_extracter_source_payload_header = 128'd0;
wire          depacketizer_header_extracter_source_ready;
reg           depacketizer_header_extracter_source_valid = 1'd0;
wire          depacketizer_ptm_source_first;
wire          depacketizer_ptm_source_last;
wire   [63:0] depacketizer_ptm_source_payload_dat;
wire    [9:0] depacketizer_ptm_source_payload_length;
wire   [63:0] depacketizer_ptm_source_payload_master_time;
wire    [7:0] depacketizer_ptm_source_payload_message_code;
wire   [15:0] depacketizer_ptm_source_payload_requester_id;
reg           depacketizer_ptm_source_ready = 1'd0;
wire          depacketizer_ptm_source_valid;
wire          depacketizer_req_source_first;
wire          depacketizer_req_source_last;
wire   [31:0] depacketizer_req_source_payload_adr;
reg     [7:0] depacketizer_req_source_payload_channel = 8'd0;
wire   [63:0] depacketizer_req_source_payload_dat;
wire    [9:0] depacketizer_req_source_payload_len;
wire   [15:0] depacketizer_req_source_payload_req_id;
wire    [7:0] depacketizer_req_source_payload_tag;
reg     [7:0] depacketizer_req_source_payload_user_id = 8'd0;
wire          depacketizer_req_source_payload_we;
wire          depacketizer_req_source_ready;
wire          depacketizer_req_source_valid;
wire          depacketizer_sink_sink_first;
wire          depacketizer_sink_sink_last;
wire    [7:0] depacketizer_sink_sink_payload_be;
wire   [63:0] depacketizer_sink_sink_payload_dat;
wire          depacketizer_sink_sink_ready;
wire          depacketizer_sink_sink_valid;
wire          depacketizer_tlp_cmp_first;
wire          depacketizer_tlp_cmp_last;
wire    [1:0] depacketizer_tlp_cmp_payload_attr;
wire          depacketizer_tlp_cmp_payload_bcm;
wire    [7:0] depacketizer_tlp_cmp_payload_be;
wire   [11:0] depacketizer_tlp_cmp_payload_byte_count;
wire   [15:0] depacketizer_tlp_cmp_payload_completer_id;
wire   [63:0] depacketizer_tlp_cmp_payload_dat;
wire          depacketizer_tlp_cmp_payload_ep;
reg     [1:0] depacketizer_tlp_cmp_payload_fmt = 2'd0;
wire    [9:0] depacketizer_tlp_cmp_payload_length;
wire    [6:0] depacketizer_tlp_cmp_payload_lower_address;
wire   [15:0] depacketizer_tlp_cmp_payload_requester_id;
wire    [2:0] depacketizer_tlp_cmp_payload_status;
wire    [7:0] depacketizer_tlp_cmp_payload_tag;
wire    [2:0] depacketizer_tlp_cmp_payload_tc;
wire          depacketizer_tlp_cmp_payload_td;
reg     [4:0] depacketizer_tlp_cmp_payload_type = 5'd0;
wire          depacketizer_tlp_cmp_ready;
wire          depacketizer_tlp_cmp_valid;
wire          depacketizer_tlp_conf_first;
wire          depacketizer_tlp_conf_last;
wire    [7:0] depacketizer_tlp_conf_payload_be;
wire    [7:0] depacketizer_tlp_conf_payload_bus_number;
wire   [63:0] depacketizer_tlp_conf_payload_dat;
wire    [4:0] depacketizer_tlp_conf_payload_device_no;
wire          depacketizer_tlp_conf_payload_ep;
wire    [2:0] depacketizer_tlp_conf_payload_ext_reg;
wire    [3:0] depacketizer_tlp_conf_payload_first_be;
reg     [1:0] depacketizer_tlp_conf_payload_fmt = 2'd0;
wire    [2:0] depacketizer_tlp_conf_payload_func;
wire    [5:0] depacketizer_tlp_conf_payload_register_no;
wire   [15:0] depacketizer_tlp_conf_payload_requester_id;
wire    [7:0] depacketizer_tlp_conf_payload_tag;
wire          depacketizer_tlp_conf_payload_td;
reg     [4:0] depacketizer_tlp_conf_payload_type = 5'd0;
wire          depacketizer_tlp_conf_ready;
wire          depacketizer_tlp_conf_valid;
wire          depacketizer_tlp_ptm_first;
wire          depacketizer_tlp_ptm_last;
wire    [1:0] depacketizer_tlp_ptm_payload_attr;
wire    [7:0] depacketizer_tlp_ptm_payload_be;
wire   [63:0] depacketizer_tlp_ptm_payload_dat;
wire          depacketizer_tlp_ptm_payload_ep;
reg     [1:0] depacketizer_tlp_ptm_payload_fmt = 2'd0;
wire    [9:0] depacketizer_tlp_ptm_payload_length;
wire          depacketizer_tlp_ptm_payload_ln;
wire   [63:0] depacketizer_tlp_ptm_payload_master_time;
wire    [7:0] depacketizer_tlp_ptm_payload_message_code;
wire   [15:0] depacketizer_tlp_ptm_payload_requester_id;
wire    [2:0] depacketizer_tlp_ptm_payload_tc;
wire          depacketizer_tlp_ptm_payload_td;
wire          depacketizer_tlp_ptm_payload_th;
reg     [4:0] depacketizer_tlp_ptm_payload_type = 5'd0;
wire          depacketizer_tlp_ptm_ready;
wire          depacketizer_tlp_ptm_valid;
wire          depacketizer_tlp_req_first;
wire          depacketizer_tlp_req_last;
wire   [63:0] depacketizer_tlp_req_payload_address;
wire    [1:0] depacketizer_tlp_req_payload_attr;
wire    [7:0] depacketizer_tlp_req_payload_be;
wire   [63:0] depacketizer_tlp_req_payload_dat;
wire          depacketizer_tlp_req_payload_ep;
wire    [3:0] depacketizer_tlp_req_payload_first_be;
reg     [1:0] depacketizer_tlp_req_payload_fmt = 2'd0;
wire    [3:0] depacketizer_tlp_req_payload_last_be;
wire    [9:0] depacketizer_tlp_req_payload_length;
wire   [15:0] depacketizer_tlp_req_payload_requester_id;
wire    [7:0] depacketizer_tlp_req_payload_tag;
wire    [2:0] depacketizer_tlp_req_payload_tc;
wire          depacketizer_tlp_req_payload_td;
reg     [4:0] depacketizer_tlp_req_payload_type = 5'd0;
wire          depacketizer_tlp_req_ready;
wire          depacketizer_tlp_req_valid;
wire          done;
reg           error = 1'd0;
wire          from140100636556256_clk;
wire          from140100636556256_rst;
wire          from140100636878112_clk;
wire          from140100636878112_rst;
wire          from140100637018048_clk;
wire          from140100637018048_rst;
wire          grant;
wire   [13:0] interface0_bank_bus_adr;
reg    [31:0] interface0_bank_bus_dat_r = 32'd0;
wire   [31:0] interface0_bank_bus_dat_w;
wire          interface0_bank_bus_we;
wire   [13:0] interface0_sram_bus_adr;
reg    [31:0] interface0_sram_bus_dat_r = 32'd0;
wire   [31:0] interface0_sram_bus_dat_w;
wire          interface0_sram_bus_we;
reg           interface0_wb_ack = 1'd0;
wire   [29:0] interface0_wb_adr;
wire    [1:0] interface0_wb_bte;
wire    [2:0] interface0_wb_cti;
wire          interface0_wb_cyc;
reg    [31:0] interface0_wb_dat_r = 32'd0;
wire   [31:0] interface0_wb_dat_w;
reg           interface0_wb_err = 1'd0;
wire    [3:0] interface0_wb_sel;
wire          interface0_wb_stb;
wire          interface0_wb_we;
wire   [13:0] interface1_bank_bus_adr;
reg    [31:0] interface1_bank_bus_dat_r = 32'd0;
wire   [31:0] interface1_bank_bus_dat_w;
wire          interface1_bank_bus_we;
wire   [13:0] interface1_sram_bus_adr;
reg    [31:0] interface1_sram_bus_dat_r = 32'd0;
wire   [31:0] interface1_sram_bus_dat_w;
wire          interface1_sram_bus_we;
wire          interface1_wb_ack;
reg    [29:0] interface1_wb_adr = 30'd0;
reg     [1:0] interface1_wb_bte = 2'd0;
reg     [2:0] interface1_wb_cti = 3'd0;
reg           interface1_wb_cyc = 1'd0;
wire   [31:0] interface1_wb_dat_r;
reg    [31:0] interface1_wb_dat_w = 32'd0;
wire          interface1_wb_err;
reg     [3:0] interface1_wb_sel = 4'd0;
reg           interface1_wb_stb = 1'd0;
reg           interface1_wb_we = 1'd0;
wire   [13:0] interface2_bank_bus_adr;
reg    [31:0] interface2_bank_bus_dat_r = 32'd0;
wire   [31:0] interface2_bank_bus_dat_w;
wire          interface2_bank_bus_we;
wire   [13:0] interface3_bank_bus_adr;
reg    [31:0] interface3_bank_bus_dat_r = 32'd0;
wire   [31:0] interface3_bank_bus_dat_w;
wire          interface3_bank_bus_we;
wire   [13:0] interface4_bank_bus_adr;
reg    [31:0] interface4_bank_bus_dat_r = 32'd0;
wire   [31:0] interface4_bank_bus_dat_w;
wire          interface4_bank_bus_we;
wire   [13:0] interface5_bank_bus_adr;
reg    [31:0] interface5_bank_bus_dat_r = 32'd0;
wire   [31:0] interface5_bank_bus_dat_w;
wire          interface5_bank_bus_we;
reg           last_ar_aw_n = 1'd0;
reg           last_ar_aw_n_axilite2wishbone_next_value0 = 1'd0;
reg           last_ar_aw_n_axilite2wishbone_next_value_ce0 = 1'd0;
reg    [13:0] litepciecore_adr = 14'd0;
reg     [2:0] litepciecore_axilite2wishbone_next_state = 3'd0;
reg     [2:0] litepciecore_axilite2wishbone_state = 3'd0;
reg     [1:0] litepciecore_clockdomainsrenamer0_next_state = 2'd0;
reg     [1:0] litepciecore_clockdomainsrenamer0_state = 2'd0;
reg     [1:0] litepciecore_clockdomainsrenamer1_next_state = 2'd0;
reg     [1:0] litepciecore_clockdomainsrenamer1_state = 2'd0;
reg     [1:0] litepciecore_clockdomainsrenamer2_next_state = 2'd0;
reg    [31:0] litepciecore_clockdomainsrenamer2_next_value0 = 32'd0;
reg    [31:0] litepciecore_clockdomainsrenamer2_next_value1 = 32'd0;
reg    [31:0] litepciecore_clockdomainsrenamer2_next_value2 = 32'd0;
reg    [31:0] litepciecore_clockdomainsrenamer2_next_value3 = 32'd0;
reg           litepciecore_clockdomainsrenamer2_next_value_ce0 = 1'd0;
reg           litepciecore_clockdomainsrenamer2_next_value_ce1 = 1'd0;
reg           litepciecore_clockdomainsrenamer2_next_value_ce2 = 1'd0;
reg           litepciecore_clockdomainsrenamer2_next_value_ce3 = 1'd0;
reg     [1:0] litepciecore_clockdomainsrenamer2_state = 2'd0;
wire   [31:0] litepciecore_dat_r;
reg    [31:0] litepciecore_dat_w = 32'd0;
reg           litepciecore_litepciedmareader_bufferizeendpoints_next_state = 1'd0;
reg           litepciecore_litepciedmareader_bufferizeendpoints_state = 1'd0;
reg           litepciecore_litepciedmareader_fsm_next_state = 1'd0;
reg           litepciecore_litepciedmareader_fsm_state = 1'd0;
reg           litepciecore_litepciedmawriter_fsm_next_state = 1'd0;
reg           litepciecore_litepciedmawriter_fsm_state = 1'd0;
reg           litepciecore_litepciedmawriter_resetinserter_next_state = 1'd0;
reg           litepciecore_litepciedmawriter_resetinserter_state = 1'd0;
reg     [1:0] litepciecore_litepcieendpoint_arbiter0_grant = 2'd0;
reg     [2:0] litepciecore_litepcieendpoint_arbiter0_request = 3'd0;
reg           litepciecore_litepcieendpoint_arbiter0_status0_first = 1'd1;
reg           litepciecore_litepcieendpoint_arbiter0_status0_last = 1'd0;
wire          litepciecore_litepcieendpoint_arbiter0_status0_ongoing0;
reg           litepciecore_litepcieendpoint_arbiter0_status0_ongoing1 = 1'd0;
reg           litepciecore_litepcieendpoint_arbiter0_status1_first = 1'd1;
reg           litepciecore_litepcieendpoint_arbiter0_status1_last = 1'd0;
wire          litepciecore_litepcieendpoint_arbiter0_status1_ongoing0;
reg           litepciecore_litepcieendpoint_arbiter0_status1_ongoing1 = 1'd0;
reg           litepciecore_litepcieendpoint_arbiter0_status2_first = 1'd1;
reg           litepciecore_litepcieendpoint_arbiter0_status2_last = 1'd0;
wire          litepciecore_litepcieendpoint_arbiter0_status2_ongoing0;
reg           litepciecore_litepcieendpoint_arbiter0_status2_ongoing1 = 1'd0;
reg           litepciecore_litepcieendpoint_arbiter1_grant = 1'd0;
reg     [1:0] litepciecore_litepcieendpoint_arbiter1_request = 2'd0;
reg           litepciecore_litepcieendpoint_arbiter1_status3_first = 1'd1;
reg           litepciecore_litepcieendpoint_arbiter1_status3_last = 1'd0;
wire          litepciecore_litepcieendpoint_arbiter1_status3_ongoing0;
reg           litepciecore_litepcieendpoint_arbiter1_status3_ongoing1 = 1'd0;
reg           litepciecore_litepcieendpoint_arbiter1_status4_first = 1'd1;
reg           litepciecore_litepcieendpoint_arbiter1_status4_last = 1'd0;
wire          litepciecore_litepcieendpoint_arbiter1_status4_ongoing0;
reg           litepciecore_litepcieendpoint_arbiter1_status4_ongoing1 = 1'd0;
wire          litepciecore_litepcieendpoint_cmp_reorder_first;
wire          litepciecore_litepcieendpoint_cmp_reorder_last;
wire   [31:0] litepciecore_litepcieendpoint_cmp_reorder_payload_adr;
wire    [7:0] litepciecore_litepcieendpoint_cmp_reorder_payload_channel;
wire   [15:0] litepciecore_litepcieendpoint_cmp_reorder_payload_cmp_id;
wire   [63:0] litepciecore_litepcieendpoint_cmp_reorder_payload_dat;
wire          litepciecore_litepcieendpoint_cmp_reorder_payload_end;
wire          litepciecore_litepcieendpoint_cmp_reorder_payload_err;
wire    [9:0] litepciecore_litepcieendpoint_cmp_reorder_payload_len;
wire   [15:0] litepciecore_litepcieendpoint_cmp_reorder_payload_req_id;
wire    [7:0] litepciecore_litepcieendpoint_cmp_reorder_payload_tag;
wire    [7:0] litepciecore_litepcieendpoint_cmp_reorder_payload_user_id;
reg           litepciecore_litepcieendpoint_cmp_reorder_ready = 1'd0;
reg           litepciecore_litepcieendpoint_cmp_reorder_valid = 1'd0;
reg           litepciecore_litepcieendpoint_dispatcher0_first = 1'd1;
reg           litepciecore_litepcieendpoint_dispatcher0_last = 1'd0;
wire          litepciecore_litepcieendpoint_dispatcher0_ongoing0;
reg           litepciecore_litepcieendpoint_dispatcher0_ongoing1 = 1'd0;
reg     [2:0] litepciecore_litepcieendpoint_dispatcher0_sel0 = 3'd0;
reg     [2:0] litepciecore_litepcieendpoint_dispatcher0_sel1 = 3'd0;
reg     [2:0] litepciecore_litepcieendpoint_dispatcher0_sel_ongoing = 3'd0;
reg           litepciecore_litepcieendpoint_dispatcher1_first = 1'd1;
reg           litepciecore_litepcieendpoint_dispatcher1_last = 1'd0;
wire          litepciecore_litepcieendpoint_dispatcher1_ongoing0;
reg           litepciecore_litepcieendpoint_dispatcher1_ongoing1 = 1'd0;
reg           litepciecore_litepcieendpoint_dispatcher1_sel0 = 1'd0;
reg           litepciecore_litepcieendpoint_dispatcher1_sel1 = 1'd0;
reg           litepciecore_litepcieendpoint_dispatcher1_sel_ongoing = 1'd0;
reg     [2:0] litepciecore_litepcieendpoint_fill_tag = 3'd0;
reg     [2:0] litepciecore_litepcieendpoint_fill_tag_litepciecrossbar_next_value = 3'd0;
reg           litepciecore_litepcieendpoint_fill_tag_litepciecrossbar_next_value_ce = 1'd0;
reg           litepciecore_litepcieendpoint_first = 1'd1;
reg     [1:0] litepciecore_litepcieendpoint_fsm0_next_state = 2'd0;
reg     [1:0] litepciecore_litepcieendpoint_fsm0_state = 2'd0;
reg     [1:0] litepciecore_litepcieendpoint_fsm1_next_state = 2'd0;
reg     [1:0] litepciecore_litepcieendpoint_fsm1_state = 2'd0;
reg           litepciecore_litepcieendpoint_grant = 1'd0;
reg           litepciecore_litepcieendpoint_last = 1'd0;
reg           litepciecore_litepcieendpoint_litepcietlpheaderinserter64b3dws_next_state = 1'd0;
reg           litepciecore_litepcieendpoint_litepcietlpheaderinserter64b3dws_state = 1'd0;
reg           litepciecore_litepcieendpoint_litepcietlpheaderinserter64b4dws_next_state = 1'd0;
reg           litepciecore_litepcieendpoint_litepcietlpheaderinserter64b4dws_state = 1'd0;
reg           litepciecore_litepcieendpoint_master_in_sink_first = 1'd0;
reg           litepciecore_litepcieendpoint_master_in_sink_last = 1'd0;
reg    [31:0] litepciecore_litepcieendpoint_master_in_sink_payload_adr = 32'd0;
reg     [7:0] litepciecore_litepcieendpoint_master_in_sink_payload_channel = 8'd0;
reg    [63:0] litepciecore_litepcieendpoint_master_in_sink_payload_dat = 64'd0;
reg     [9:0] litepciecore_litepcieendpoint_master_in_sink_payload_len = 10'd0;
reg    [15:0] litepciecore_litepcieendpoint_master_in_sink_payload_req_id = 16'd0;
reg     [7:0] litepciecore_litepcieendpoint_master_in_sink_payload_tag = 8'd0;
reg     [7:0] litepciecore_litepcieendpoint_master_in_sink_payload_user_id = 8'd0;
reg           litepciecore_litepcieendpoint_master_in_sink_payload_we = 1'd0;
reg           litepciecore_litepcieendpoint_master_in_sink_ready = 1'd0;
reg           litepciecore_litepcieendpoint_master_in_sink_valid = 1'd0;
reg           litepciecore_litepcieendpoint_master_in_source_first = 1'd0;
reg           litepciecore_litepcieendpoint_master_in_source_last = 1'd0;
reg    [31:0] litepciecore_litepcieendpoint_master_in_source_payload_adr = 32'd0;
reg     [7:0] litepciecore_litepcieendpoint_master_in_source_payload_channel = 8'd0;
reg    [15:0] litepciecore_litepcieendpoint_master_in_source_payload_cmp_id = 16'd0;
reg    [63:0] litepciecore_litepcieendpoint_master_in_source_payload_dat = 64'd0;
reg           litepciecore_litepcieendpoint_master_in_source_payload_end = 1'd0;
reg           litepciecore_litepcieendpoint_master_in_source_payload_err = 1'd0;
reg     [9:0] litepciecore_litepcieendpoint_master_in_source_payload_len = 10'd0;
reg    [15:0] litepciecore_litepcieendpoint_master_in_source_payload_req_id = 16'd0;
reg     [7:0] litepciecore_litepcieendpoint_master_in_source_payload_tag = 8'd0;
reg     [7:0] litepciecore_litepcieendpoint_master_in_source_payload_user_id = 8'd0;
reg           litepciecore_litepcieendpoint_master_in_source_ready = 1'd0;
reg           litepciecore_litepcieendpoint_master_in_source_valid = 1'd0;
wire          litepciecore_litepcieendpoint_master_out_sink_first;
wire          litepciecore_litepcieendpoint_master_out_sink_last;
wire   [31:0] litepciecore_litepcieendpoint_master_out_sink_payload_adr;
wire    [7:0] litepciecore_litepcieendpoint_master_out_sink_payload_channel;
wire   [63:0] litepciecore_litepcieendpoint_master_out_sink_payload_dat;
wire    [9:0] litepciecore_litepcieendpoint_master_out_sink_payload_len;
wire   [15:0] litepciecore_litepcieendpoint_master_out_sink_payload_req_id;
reg     [7:0] litepciecore_litepcieendpoint_master_out_sink_payload_tag = 8'd0;
wire    [7:0] litepciecore_litepcieendpoint_master_out_sink_payload_user_id;
wire          litepciecore_litepcieendpoint_master_out_sink_payload_we;
reg           litepciecore_litepcieendpoint_master_out_sink_ready = 1'd0;
reg           litepciecore_litepcieendpoint_master_out_sink_valid = 1'd0;
wire          litepciecore_litepcieendpoint_master_out_source_first;
wire          litepciecore_litepcieendpoint_master_out_source_last;
wire   [31:0] litepciecore_litepcieendpoint_master_out_source_payload_adr;
wire    [7:0] litepciecore_litepcieendpoint_master_out_source_payload_channel;
wire   [15:0] litepciecore_litepcieendpoint_master_out_source_payload_cmp_id;
wire   [63:0] litepciecore_litepcieendpoint_master_out_source_payload_dat;
wire          litepciecore_litepcieendpoint_master_out_source_payload_end;
wire          litepciecore_litepcieendpoint_master_out_source_payload_err;
wire    [9:0] litepciecore_litepcieendpoint_master_out_source_payload_len;
wire   [15:0] litepciecore_litepcieendpoint_master_out_source_payload_req_id;
wire    [7:0] litepciecore_litepcieendpoint_master_out_source_payload_tag;
wire    [7:0] litepciecore_litepcieendpoint_master_out_source_payload_user_id;
reg           litepciecore_litepcieendpoint_master_out_source_ready = 1'd0;
wire          litepciecore_litepcieendpoint_master_out_source_valid;
reg     [1:0] litepciecore_litepcieendpoint_next_state = 2'd0;
reg    [31:0] litepciecore_litepcieendpoint_next_value0 = 32'd0;
reg    [31:0] litepciecore_litepcieendpoint_next_value1 = 32'd0;
reg    [31:0] litepciecore_litepcieendpoint_next_value2 = 32'd0;
reg    [31:0] litepciecore_litepcieendpoint_next_value3 = 32'd0;
reg           litepciecore_litepcieendpoint_next_value_ce0 = 1'd0;
reg           litepciecore_litepcieendpoint_next_value_ce1 = 1'd0;
reg           litepciecore_litepcieendpoint_next_value_ce2 = 1'd0;
reg           litepciecore_litepcieendpoint_next_value_ce3 = 1'd0;
wire          litepciecore_litepcieendpoint_ongoing0;
reg           litepciecore_litepcieendpoint_ongoing1 = 1'd0;
reg     [2:0] litepciecore_litepcieendpoint_req_queue_consume = 3'd0;
wire          litepciecore_litepcieendpoint_req_queue_do_read;
wire          litepciecore_litepcieendpoint_req_queue_fifo_in_first;
wire          litepciecore_litepcieendpoint_req_queue_fifo_in_last;
wire    [7:0] litepciecore_litepcieendpoint_req_queue_fifo_in_payload_channel;
wire    [2:0] litepciecore_litepcieendpoint_req_queue_fifo_in_payload_tag;
wire    [7:0] litepciecore_litepcieendpoint_req_queue_fifo_in_payload_user_id;
wire          litepciecore_litepcieendpoint_req_queue_fifo_out_first;
wire          litepciecore_litepcieendpoint_req_queue_fifo_out_last;
wire    [7:0] litepciecore_litepcieendpoint_req_queue_fifo_out_payload_channel;
wire    [2:0] litepciecore_litepcieendpoint_req_queue_fifo_out_payload_tag;
wire    [7:0] litepciecore_litepcieendpoint_req_queue_fifo_out_payload_user_id;
reg     [3:0] litepciecore_litepcieendpoint_req_queue_level0 = 4'd0;
wire    [3:0] litepciecore_litepcieendpoint_req_queue_level1;
reg     [2:0] litepciecore_litepcieendpoint_req_queue_produce = 3'd0;
wire    [2:0] litepciecore_litepcieendpoint_req_queue_rdport_adr;
wire   [20:0] litepciecore_litepcieendpoint_req_queue_rdport_dat_r;
wire          litepciecore_litepcieendpoint_req_queue_rdport_re;
wire          litepciecore_litepcieendpoint_req_queue_re;
reg           litepciecore_litepcieendpoint_req_queue_readable = 1'd0;
reg           litepciecore_litepcieendpoint_req_queue_replace = 1'd0;
reg           litepciecore_litepcieendpoint_req_queue_sink_first = 1'd0;
reg           litepciecore_litepcieendpoint_req_queue_sink_last = 1'd0;
reg     [7:0] litepciecore_litepcieendpoint_req_queue_sink_payload_channel = 8'd0;
reg     [2:0] litepciecore_litepcieendpoint_req_queue_sink_payload_tag = 3'd0;
reg     [7:0] litepciecore_litepcieendpoint_req_queue_sink_payload_user_id = 8'd0;
wire          litepciecore_litepcieendpoint_req_queue_sink_ready;
reg           litepciecore_litepcieendpoint_req_queue_sink_valid = 1'd0;
wire          litepciecore_litepcieendpoint_req_queue_source_first;
wire          litepciecore_litepcieendpoint_req_queue_source_last;
wire    [7:0] litepciecore_litepcieendpoint_req_queue_source_payload_channel;
wire    [2:0] litepciecore_litepcieendpoint_req_queue_source_payload_tag;
wire    [7:0] litepciecore_litepcieendpoint_req_queue_source_payload_user_id;
reg           litepciecore_litepcieendpoint_req_queue_source_ready = 1'd0;
wire          litepciecore_litepcieendpoint_req_queue_source_valid;
wire   [20:0] litepciecore_litepcieendpoint_req_queue_syncfifo_din;
wire   [20:0] litepciecore_litepcieendpoint_req_queue_syncfifo_dout;
wire          litepciecore_litepcieendpoint_req_queue_syncfifo_re;
wire          litepciecore_litepcieendpoint_req_queue_syncfifo_readable;
wire          litepciecore_litepcieendpoint_req_queue_syncfifo_we;
wire          litepciecore_litepcieendpoint_req_queue_syncfifo_writable;
reg     [2:0] litepciecore_litepcieendpoint_req_queue_wrport_adr = 3'd0;
wire   [20:0] litepciecore_litepcieendpoint_req_queue_wrport_dat_r;
wire   [20:0] litepciecore_litepcieendpoint_req_queue_wrport_dat_w;
wire          litepciecore_litepcieendpoint_req_queue_wrport_we;
reg     [1:0] litepciecore_litepcieendpoint_request = 2'd0;
reg     [1:0] litepciecore_litepcieendpoint_sel0 = 2'd0;
reg     [1:0] litepciecore_litepcieendpoint_sel1 = 2'd0;
reg     [1:0] litepciecore_litepcieendpoint_sel_ongoing = 2'd0;
wire          litepciecore_litepcieendpoint_sink_first;
wire          litepciecore_litepcieendpoint_sink_last;
wire   [31:0] litepciecore_litepcieendpoint_sink_payload_adr;
wire    [7:0] litepciecore_litepcieendpoint_sink_payload_channel;
wire   [63:0] litepciecore_litepcieendpoint_sink_payload_dat;
wire    [9:0] litepciecore_litepcieendpoint_sink_payload_len;
wire   [15:0] litepciecore_litepcieendpoint_sink_payload_req_id;
wire    [7:0] litepciecore_litepcieendpoint_sink_payload_tag;
wire    [7:0] litepciecore_litepcieendpoint_sink_payload_user_id;
wire          litepciecore_litepcieendpoint_sink_payload_we;
reg           litepciecore_litepcieendpoint_sink_ready = 1'd0;
wire          litepciecore_litepcieendpoint_sink_valid;
reg           litepciecore_litepcieendpoint_source_first = 1'd0;
reg           litepciecore_litepcieendpoint_source_last = 1'd0;
reg    [31:0] litepciecore_litepcieendpoint_source_payload_adr = 32'd0;
reg     [7:0] litepciecore_litepcieendpoint_source_payload_channel = 8'd0;
reg    [15:0] litepciecore_litepcieendpoint_source_payload_cmp_id = 16'd0;
reg    [63:0] litepciecore_litepcieendpoint_source_payload_dat = 64'd0;
reg           litepciecore_litepcieendpoint_source_payload_end = 1'd0;
reg           litepciecore_litepcieendpoint_source_payload_err = 1'd0;
reg     [9:0] litepciecore_litepcieendpoint_source_payload_len = 10'd0;
reg    [15:0] litepciecore_litepcieendpoint_source_payload_req_id = 16'd0;
reg     [7:0] litepciecore_litepcieendpoint_source_payload_tag = 8'd0;
reg     [7:0] litepciecore_litepcieendpoint_source_payload_user_id = 8'd0;
reg           litepciecore_litepcieendpoint_source_ready = 1'd0;
reg           litepciecore_litepcieendpoint_source_valid = 1'd0;
reg     [1:0] litepciecore_litepcieendpoint_state = 2'd0;
reg           litepciecore_litepcieendpoint_status0_first = 1'd1;
reg           litepciecore_litepcieendpoint_status0_last = 1'd0;
wire          litepciecore_litepcieendpoint_status0_ongoing0;
reg           litepciecore_litepcieendpoint_status0_ongoing1 = 1'd0;
reg           litepciecore_litepcieendpoint_status1_first = 1'd1;
reg           litepciecore_litepcieendpoint_status1_last = 1'd0;
wire          litepciecore_litepcieendpoint_status1_ongoing0;
reg           litepciecore_litepcieendpoint_status1_ongoing1 = 1'd0;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo0_consume = 8'd0;
wire          litepciecore_litepcieendpoint_syncfifo0_do_read;
wire          litepciecore_litepcieendpoint_syncfifo0_fifo_in_first;
wire          litepciecore_litepcieendpoint_syncfifo0_fifo_in_last;
wire   [31:0] litepciecore_litepcieendpoint_syncfifo0_fifo_in_payload_adr;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo0_fifo_in_payload_channel;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo0_fifo_in_payload_cmp_id;
wire   [63:0] litepciecore_litepcieendpoint_syncfifo0_fifo_in_payload_dat;
wire          litepciecore_litepcieendpoint_syncfifo0_fifo_in_payload_end;
wire          litepciecore_litepcieendpoint_syncfifo0_fifo_in_payload_err;
wire    [9:0] litepciecore_litepcieendpoint_syncfifo0_fifo_in_payload_len;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo0_fifo_in_payload_req_id;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo0_fifo_in_payload_tag;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo0_fifo_in_payload_user_id;
wire          litepciecore_litepcieendpoint_syncfifo0_fifo_out_first;
wire          litepciecore_litepcieendpoint_syncfifo0_fifo_out_last;
wire   [31:0] litepciecore_litepcieendpoint_syncfifo0_fifo_out_payload_adr;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo0_fifo_out_payload_channel;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo0_fifo_out_payload_cmp_id;
wire   [63:0] litepciecore_litepcieendpoint_syncfifo0_fifo_out_payload_dat;
wire          litepciecore_litepcieendpoint_syncfifo0_fifo_out_payload_end;
wire          litepciecore_litepcieendpoint_syncfifo0_fifo_out_payload_err;
wire    [9:0] litepciecore_litepcieendpoint_syncfifo0_fifo_out_payload_len;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo0_fifo_out_payload_req_id;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo0_fifo_out_payload_tag;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo0_fifo_out_payload_user_id;
reg     [8:0] litepciecore_litepcieendpoint_syncfifo0_level0 = 9'd0;
wire    [8:0] litepciecore_litepcieendpoint_syncfifo0_level1;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo0_produce = 8'd0;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo0_rdport_adr;
wire  [165:0] litepciecore_litepcieendpoint_syncfifo0_rdport_dat_r;
wire          litepciecore_litepcieendpoint_syncfifo0_rdport_re;
wire          litepciecore_litepcieendpoint_syncfifo0_re;
reg           litepciecore_litepcieendpoint_syncfifo0_readable = 1'd0;
reg           litepciecore_litepcieendpoint_syncfifo0_replace = 1'd0;
reg           litepciecore_litepcieendpoint_syncfifo0_sink_first = 1'd0;
reg           litepciecore_litepcieendpoint_syncfifo0_sink_last = 1'd0;
reg    [31:0] litepciecore_litepcieendpoint_syncfifo0_sink_payload_adr = 32'd0;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo0_sink_payload_channel = 8'd0;
reg    [15:0] litepciecore_litepcieendpoint_syncfifo0_sink_payload_cmp_id = 16'd0;
reg    [63:0] litepciecore_litepcieendpoint_syncfifo0_sink_payload_dat = 64'd0;
reg           litepciecore_litepcieendpoint_syncfifo0_sink_payload_end = 1'd0;
reg           litepciecore_litepcieendpoint_syncfifo0_sink_payload_err = 1'd0;
reg     [9:0] litepciecore_litepcieendpoint_syncfifo0_sink_payload_len = 10'd0;
reg    [15:0] litepciecore_litepcieendpoint_syncfifo0_sink_payload_req_id = 16'd0;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo0_sink_payload_tag = 8'd0;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo0_sink_payload_user_id = 8'd0;
wire          litepciecore_litepcieendpoint_syncfifo0_sink_ready;
reg           litepciecore_litepcieendpoint_syncfifo0_sink_valid = 1'd0;
wire          litepciecore_litepcieendpoint_syncfifo0_source_first;
wire          litepciecore_litepcieendpoint_syncfifo0_source_last;
wire   [31:0] litepciecore_litepcieendpoint_syncfifo0_source_payload_adr;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo0_source_payload_channel;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo0_source_payload_cmp_id;
wire   [63:0] litepciecore_litepcieendpoint_syncfifo0_source_payload_dat;
wire          litepciecore_litepcieendpoint_syncfifo0_source_payload_end;
wire          litepciecore_litepcieendpoint_syncfifo0_source_payload_err;
wire    [9:0] litepciecore_litepcieendpoint_syncfifo0_source_payload_len;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo0_source_payload_req_id;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo0_source_payload_tag;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo0_source_payload_user_id;
reg           litepciecore_litepcieendpoint_syncfifo0_source_ready = 1'd0;
wire          litepciecore_litepcieendpoint_syncfifo0_source_valid;
wire  [165:0] litepciecore_litepcieendpoint_syncfifo0_syncfifo0_din;
wire  [165:0] litepciecore_litepcieendpoint_syncfifo0_syncfifo0_dout;
wire          litepciecore_litepcieendpoint_syncfifo0_syncfifo0_re;
wire          litepciecore_litepcieendpoint_syncfifo0_syncfifo0_readable;
wire          litepciecore_litepcieendpoint_syncfifo0_syncfifo0_we;
wire          litepciecore_litepcieendpoint_syncfifo0_syncfifo0_writable;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo0_wrport_adr = 8'd0;
wire  [165:0] litepciecore_litepcieendpoint_syncfifo0_wrport_dat_r;
wire  [165:0] litepciecore_litepcieendpoint_syncfifo0_wrport_dat_w;
wire          litepciecore_litepcieendpoint_syncfifo0_wrport_we;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo1_consume = 8'd0;
wire          litepciecore_litepcieendpoint_syncfifo1_do_read;
wire          litepciecore_litepcieendpoint_syncfifo1_fifo_in_first;
wire          litepciecore_litepcieendpoint_syncfifo1_fifo_in_last;
wire   [31:0] litepciecore_litepcieendpoint_syncfifo1_fifo_in_payload_adr;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo1_fifo_in_payload_channel;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo1_fifo_in_payload_cmp_id;
wire   [63:0] litepciecore_litepcieendpoint_syncfifo1_fifo_in_payload_dat;
wire          litepciecore_litepcieendpoint_syncfifo1_fifo_in_payload_end;
wire          litepciecore_litepcieendpoint_syncfifo1_fifo_in_payload_err;
wire    [9:0] litepciecore_litepcieendpoint_syncfifo1_fifo_in_payload_len;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo1_fifo_in_payload_req_id;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo1_fifo_in_payload_tag;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo1_fifo_in_payload_user_id;
wire          litepciecore_litepcieendpoint_syncfifo1_fifo_out_first;
wire          litepciecore_litepcieendpoint_syncfifo1_fifo_out_last;
wire   [31:0] litepciecore_litepcieendpoint_syncfifo1_fifo_out_payload_adr;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo1_fifo_out_payload_channel;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo1_fifo_out_payload_cmp_id;
wire   [63:0] litepciecore_litepcieendpoint_syncfifo1_fifo_out_payload_dat;
wire          litepciecore_litepcieendpoint_syncfifo1_fifo_out_payload_end;
wire          litepciecore_litepcieendpoint_syncfifo1_fifo_out_payload_err;
wire    [9:0] litepciecore_litepcieendpoint_syncfifo1_fifo_out_payload_len;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo1_fifo_out_payload_req_id;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo1_fifo_out_payload_tag;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo1_fifo_out_payload_user_id;
reg     [8:0] litepciecore_litepcieendpoint_syncfifo1_level0 = 9'd0;
wire    [8:0] litepciecore_litepcieendpoint_syncfifo1_level1;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo1_produce = 8'd0;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo1_rdport_adr;
wire  [165:0] litepciecore_litepcieendpoint_syncfifo1_rdport_dat_r;
wire          litepciecore_litepcieendpoint_syncfifo1_rdport_re;
wire          litepciecore_litepcieendpoint_syncfifo1_re;
reg           litepciecore_litepcieendpoint_syncfifo1_readable = 1'd0;
reg           litepciecore_litepcieendpoint_syncfifo1_replace = 1'd0;
reg           litepciecore_litepcieendpoint_syncfifo1_sink_first = 1'd0;
reg           litepciecore_litepcieendpoint_syncfifo1_sink_last = 1'd0;
reg    [31:0] litepciecore_litepcieendpoint_syncfifo1_sink_payload_adr = 32'd0;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo1_sink_payload_channel = 8'd0;
reg    [15:0] litepciecore_litepcieendpoint_syncfifo1_sink_payload_cmp_id = 16'd0;
reg    [63:0] litepciecore_litepcieendpoint_syncfifo1_sink_payload_dat = 64'd0;
reg           litepciecore_litepcieendpoint_syncfifo1_sink_payload_end = 1'd0;
reg           litepciecore_litepcieendpoint_syncfifo1_sink_payload_err = 1'd0;
reg     [9:0] litepciecore_litepcieendpoint_syncfifo1_sink_payload_len = 10'd0;
reg    [15:0] litepciecore_litepcieendpoint_syncfifo1_sink_payload_req_id = 16'd0;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo1_sink_payload_tag = 8'd0;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo1_sink_payload_user_id = 8'd0;
wire          litepciecore_litepcieendpoint_syncfifo1_sink_ready;
reg           litepciecore_litepcieendpoint_syncfifo1_sink_valid = 1'd0;
wire          litepciecore_litepcieendpoint_syncfifo1_source_first;
wire          litepciecore_litepcieendpoint_syncfifo1_source_last;
wire   [31:0] litepciecore_litepcieendpoint_syncfifo1_source_payload_adr;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo1_source_payload_channel;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo1_source_payload_cmp_id;
wire   [63:0] litepciecore_litepcieendpoint_syncfifo1_source_payload_dat;
wire          litepciecore_litepcieendpoint_syncfifo1_source_payload_end;
wire          litepciecore_litepcieendpoint_syncfifo1_source_payload_err;
wire    [9:0] litepciecore_litepcieendpoint_syncfifo1_source_payload_len;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo1_source_payload_req_id;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo1_source_payload_tag;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo1_source_payload_user_id;
reg           litepciecore_litepcieendpoint_syncfifo1_source_ready = 1'd0;
wire          litepciecore_litepcieendpoint_syncfifo1_source_valid;
wire  [165:0] litepciecore_litepcieendpoint_syncfifo1_syncfifo1_din;
wire  [165:0] litepciecore_litepcieendpoint_syncfifo1_syncfifo1_dout;
wire          litepciecore_litepcieendpoint_syncfifo1_syncfifo1_re;
wire          litepciecore_litepcieendpoint_syncfifo1_syncfifo1_readable;
wire          litepciecore_litepcieendpoint_syncfifo1_syncfifo1_we;
wire          litepciecore_litepcieendpoint_syncfifo1_syncfifo1_writable;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo1_wrport_adr = 8'd0;
wire  [165:0] litepciecore_litepcieendpoint_syncfifo1_wrport_dat_r;
wire  [165:0] litepciecore_litepcieendpoint_syncfifo1_wrport_dat_w;
wire          litepciecore_litepcieendpoint_syncfifo1_wrport_we;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo2_consume = 8'd0;
wire          litepciecore_litepcieendpoint_syncfifo2_do_read;
wire          litepciecore_litepcieendpoint_syncfifo2_fifo_in_first;
wire          litepciecore_litepcieendpoint_syncfifo2_fifo_in_last;
wire   [31:0] litepciecore_litepcieendpoint_syncfifo2_fifo_in_payload_adr;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo2_fifo_in_payload_channel;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo2_fifo_in_payload_cmp_id;
wire   [63:0] litepciecore_litepcieendpoint_syncfifo2_fifo_in_payload_dat;
wire          litepciecore_litepcieendpoint_syncfifo2_fifo_in_payload_end;
wire          litepciecore_litepcieendpoint_syncfifo2_fifo_in_payload_err;
wire    [9:0] litepciecore_litepcieendpoint_syncfifo2_fifo_in_payload_len;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo2_fifo_in_payload_req_id;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo2_fifo_in_payload_tag;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo2_fifo_in_payload_user_id;
wire          litepciecore_litepcieendpoint_syncfifo2_fifo_out_first;
wire          litepciecore_litepcieendpoint_syncfifo2_fifo_out_last;
wire   [31:0] litepciecore_litepcieendpoint_syncfifo2_fifo_out_payload_adr;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo2_fifo_out_payload_channel;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo2_fifo_out_payload_cmp_id;
wire   [63:0] litepciecore_litepcieendpoint_syncfifo2_fifo_out_payload_dat;
wire          litepciecore_litepcieendpoint_syncfifo2_fifo_out_payload_end;
wire          litepciecore_litepcieendpoint_syncfifo2_fifo_out_payload_err;
wire    [9:0] litepciecore_litepcieendpoint_syncfifo2_fifo_out_payload_len;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo2_fifo_out_payload_req_id;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo2_fifo_out_payload_tag;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo2_fifo_out_payload_user_id;
reg     [8:0] litepciecore_litepcieendpoint_syncfifo2_level0 = 9'd0;
wire    [8:0] litepciecore_litepcieendpoint_syncfifo2_level1;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo2_produce = 8'd0;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo2_rdport_adr;
wire  [165:0] litepciecore_litepcieendpoint_syncfifo2_rdport_dat_r;
wire          litepciecore_litepcieendpoint_syncfifo2_rdport_re;
wire          litepciecore_litepcieendpoint_syncfifo2_re;
reg           litepciecore_litepcieendpoint_syncfifo2_readable = 1'd0;
reg           litepciecore_litepcieendpoint_syncfifo2_replace = 1'd0;
reg           litepciecore_litepcieendpoint_syncfifo2_sink_first = 1'd0;
reg           litepciecore_litepcieendpoint_syncfifo2_sink_last = 1'd0;
reg    [31:0] litepciecore_litepcieendpoint_syncfifo2_sink_payload_adr = 32'd0;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo2_sink_payload_channel = 8'd0;
reg    [15:0] litepciecore_litepcieendpoint_syncfifo2_sink_payload_cmp_id = 16'd0;
reg    [63:0] litepciecore_litepcieendpoint_syncfifo2_sink_payload_dat = 64'd0;
reg           litepciecore_litepcieendpoint_syncfifo2_sink_payload_end = 1'd0;
reg           litepciecore_litepcieendpoint_syncfifo2_sink_payload_err = 1'd0;
reg     [9:0] litepciecore_litepcieendpoint_syncfifo2_sink_payload_len = 10'd0;
reg    [15:0] litepciecore_litepcieendpoint_syncfifo2_sink_payload_req_id = 16'd0;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo2_sink_payload_tag = 8'd0;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo2_sink_payload_user_id = 8'd0;
wire          litepciecore_litepcieendpoint_syncfifo2_sink_ready;
reg           litepciecore_litepcieendpoint_syncfifo2_sink_valid = 1'd0;
wire          litepciecore_litepcieendpoint_syncfifo2_source_first;
wire          litepciecore_litepcieendpoint_syncfifo2_source_last;
wire   [31:0] litepciecore_litepcieendpoint_syncfifo2_source_payload_adr;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo2_source_payload_channel;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo2_source_payload_cmp_id;
wire   [63:0] litepciecore_litepcieendpoint_syncfifo2_source_payload_dat;
wire          litepciecore_litepcieendpoint_syncfifo2_source_payload_end;
wire          litepciecore_litepcieendpoint_syncfifo2_source_payload_err;
wire    [9:0] litepciecore_litepcieendpoint_syncfifo2_source_payload_len;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo2_source_payload_req_id;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo2_source_payload_tag;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo2_source_payload_user_id;
reg           litepciecore_litepcieendpoint_syncfifo2_source_ready = 1'd0;
wire          litepciecore_litepcieendpoint_syncfifo2_source_valid;
wire  [165:0] litepciecore_litepcieendpoint_syncfifo2_syncfifo2_din;
wire  [165:0] litepciecore_litepcieendpoint_syncfifo2_syncfifo2_dout;
wire          litepciecore_litepcieendpoint_syncfifo2_syncfifo2_re;
wire          litepciecore_litepcieendpoint_syncfifo2_syncfifo2_readable;
wire          litepciecore_litepcieendpoint_syncfifo2_syncfifo2_we;
wire          litepciecore_litepcieendpoint_syncfifo2_syncfifo2_writable;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo2_wrport_adr = 8'd0;
wire  [165:0] litepciecore_litepcieendpoint_syncfifo2_wrport_dat_r;
wire  [165:0] litepciecore_litepcieendpoint_syncfifo2_wrport_dat_w;
wire          litepciecore_litepcieendpoint_syncfifo2_wrport_we;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo3_consume = 8'd0;
wire          litepciecore_litepcieendpoint_syncfifo3_do_read;
wire          litepciecore_litepcieendpoint_syncfifo3_fifo_in_first;
wire          litepciecore_litepcieendpoint_syncfifo3_fifo_in_last;
wire   [31:0] litepciecore_litepcieendpoint_syncfifo3_fifo_in_payload_adr;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo3_fifo_in_payload_channel;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo3_fifo_in_payload_cmp_id;
wire   [63:0] litepciecore_litepcieendpoint_syncfifo3_fifo_in_payload_dat;
wire          litepciecore_litepcieendpoint_syncfifo3_fifo_in_payload_end;
wire          litepciecore_litepcieendpoint_syncfifo3_fifo_in_payload_err;
wire    [9:0] litepciecore_litepcieendpoint_syncfifo3_fifo_in_payload_len;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo3_fifo_in_payload_req_id;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo3_fifo_in_payload_tag;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo3_fifo_in_payload_user_id;
wire          litepciecore_litepcieendpoint_syncfifo3_fifo_out_first;
wire          litepciecore_litepcieendpoint_syncfifo3_fifo_out_last;
wire   [31:0] litepciecore_litepcieendpoint_syncfifo3_fifo_out_payload_adr;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo3_fifo_out_payload_channel;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo3_fifo_out_payload_cmp_id;
wire   [63:0] litepciecore_litepcieendpoint_syncfifo3_fifo_out_payload_dat;
wire          litepciecore_litepcieendpoint_syncfifo3_fifo_out_payload_end;
wire          litepciecore_litepcieendpoint_syncfifo3_fifo_out_payload_err;
wire    [9:0] litepciecore_litepcieendpoint_syncfifo3_fifo_out_payload_len;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo3_fifo_out_payload_req_id;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo3_fifo_out_payload_tag;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo3_fifo_out_payload_user_id;
reg     [8:0] litepciecore_litepcieendpoint_syncfifo3_level0 = 9'd0;
wire    [8:0] litepciecore_litepcieendpoint_syncfifo3_level1;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo3_produce = 8'd0;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo3_rdport_adr;
wire  [165:0] litepciecore_litepcieendpoint_syncfifo3_rdport_dat_r;
wire          litepciecore_litepcieendpoint_syncfifo3_rdport_re;
wire          litepciecore_litepcieendpoint_syncfifo3_re;
reg           litepciecore_litepcieendpoint_syncfifo3_readable = 1'd0;
reg           litepciecore_litepcieendpoint_syncfifo3_replace = 1'd0;
reg           litepciecore_litepcieendpoint_syncfifo3_sink_first = 1'd0;
reg           litepciecore_litepcieendpoint_syncfifo3_sink_last = 1'd0;
reg    [31:0] litepciecore_litepcieendpoint_syncfifo3_sink_payload_adr = 32'd0;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo3_sink_payload_channel = 8'd0;
reg    [15:0] litepciecore_litepcieendpoint_syncfifo3_sink_payload_cmp_id = 16'd0;
reg    [63:0] litepciecore_litepcieendpoint_syncfifo3_sink_payload_dat = 64'd0;
reg           litepciecore_litepcieendpoint_syncfifo3_sink_payload_end = 1'd0;
reg           litepciecore_litepcieendpoint_syncfifo3_sink_payload_err = 1'd0;
reg     [9:0] litepciecore_litepcieendpoint_syncfifo3_sink_payload_len = 10'd0;
reg    [15:0] litepciecore_litepcieendpoint_syncfifo3_sink_payload_req_id = 16'd0;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo3_sink_payload_tag = 8'd0;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo3_sink_payload_user_id = 8'd0;
wire          litepciecore_litepcieendpoint_syncfifo3_sink_ready;
reg           litepciecore_litepcieendpoint_syncfifo3_sink_valid = 1'd0;
wire          litepciecore_litepcieendpoint_syncfifo3_source_first;
wire          litepciecore_litepcieendpoint_syncfifo3_source_last;
wire   [31:0] litepciecore_litepcieendpoint_syncfifo3_source_payload_adr;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo3_source_payload_channel;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo3_source_payload_cmp_id;
wire   [63:0] litepciecore_litepcieendpoint_syncfifo3_source_payload_dat;
wire          litepciecore_litepcieendpoint_syncfifo3_source_payload_end;
wire          litepciecore_litepcieendpoint_syncfifo3_source_payload_err;
wire    [9:0] litepciecore_litepcieendpoint_syncfifo3_source_payload_len;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo3_source_payload_req_id;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo3_source_payload_tag;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo3_source_payload_user_id;
reg           litepciecore_litepcieendpoint_syncfifo3_source_ready = 1'd0;
wire          litepciecore_litepcieendpoint_syncfifo3_source_valid;
wire  [165:0] litepciecore_litepcieendpoint_syncfifo3_syncfifo3_din;
wire  [165:0] litepciecore_litepcieendpoint_syncfifo3_syncfifo3_dout;
wire          litepciecore_litepcieendpoint_syncfifo3_syncfifo3_re;
wire          litepciecore_litepcieendpoint_syncfifo3_syncfifo3_readable;
wire          litepciecore_litepcieendpoint_syncfifo3_syncfifo3_we;
wire          litepciecore_litepcieendpoint_syncfifo3_syncfifo3_writable;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo3_wrport_adr = 8'd0;
wire  [165:0] litepciecore_litepcieendpoint_syncfifo3_wrport_dat_r;
wire  [165:0] litepciecore_litepcieendpoint_syncfifo3_wrport_dat_w;
wire          litepciecore_litepcieendpoint_syncfifo3_wrport_we;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo4_consume = 8'd0;
wire          litepciecore_litepcieendpoint_syncfifo4_do_read;
wire          litepciecore_litepcieendpoint_syncfifo4_fifo_in_first;
wire          litepciecore_litepcieendpoint_syncfifo4_fifo_in_last;
wire   [31:0] litepciecore_litepcieendpoint_syncfifo4_fifo_in_payload_adr;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo4_fifo_in_payload_channel;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo4_fifo_in_payload_cmp_id;
wire   [63:0] litepciecore_litepcieendpoint_syncfifo4_fifo_in_payload_dat;
wire          litepciecore_litepcieendpoint_syncfifo4_fifo_in_payload_end;
wire          litepciecore_litepcieendpoint_syncfifo4_fifo_in_payload_err;
wire    [9:0] litepciecore_litepcieendpoint_syncfifo4_fifo_in_payload_len;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo4_fifo_in_payload_req_id;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo4_fifo_in_payload_tag;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo4_fifo_in_payload_user_id;
wire          litepciecore_litepcieendpoint_syncfifo4_fifo_out_first;
wire          litepciecore_litepcieendpoint_syncfifo4_fifo_out_last;
wire   [31:0] litepciecore_litepcieendpoint_syncfifo4_fifo_out_payload_adr;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo4_fifo_out_payload_channel;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo4_fifo_out_payload_cmp_id;
wire   [63:0] litepciecore_litepcieendpoint_syncfifo4_fifo_out_payload_dat;
wire          litepciecore_litepcieendpoint_syncfifo4_fifo_out_payload_end;
wire          litepciecore_litepcieendpoint_syncfifo4_fifo_out_payload_err;
wire    [9:0] litepciecore_litepcieendpoint_syncfifo4_fifo_out_payload_len;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo4_fifo_out_payload_req_id;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo4_fifo_out_payload_tag;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo4_fifo_out_payload_user_id;
reg     [8:0] litepciecore_litepcieendpoint_syncfifo4_level0 = 9'd0;
wire    [8:0] litepciecore_litepcieendpoint_syncfifo4_level1;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo4_produce = 8'd0;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo4_rdport_adr;
wire  [165:0] litepciecore_litepcieendpoint_syncfifo4_rdport_dat_r;
wire          litepciecore_litepcieendpoint_syncfifo4_rdport_re;
wire          litepciecore_litepcieendpoint_syncfifo4_re;
reg           litepciecore_litepcieendpoint_syncfifo4_readable = 1'd0;
reg           litepciecore_litepcieendpoint_syncfifo4_replace = 1'd0;
reg           litepciecore_litepcieendpoint_syncfifo4_sink_first = 1'd0;
reg           litepciecore_litepcieendpoint_syncfifo4_sink_last = 1'd0;
reg    [31:0] litepciecore_litepcieendpoint_syncfifo4_sink_payload_adr = 32'd0;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo4_sink_payload_channel = 8'd0;
reg    [15:0] litepciecore_litepcieendpoint_syncfifo4_sink_payload_cmp_id = 16'd0;
reg    [63:0] litepciecore_litepcieendpoint_syncfifo4_sink_payload_dat = 64'd0;
reg           litepciecore_litepcieendpoint_syncfifo4_sink_payload_end = 1'd0;
reg           litepciecore_litepcieendpoint_syncfifo4_sink_payload_err = 1'd0;
reg     [9:0] litepciecore_litepcieendpoint_syncfifo4_sink_payload_len = 10'd0;
reg    [15:0] litepciecore_litepcieendpoint_syncfifo4_sink_payload_req_id = 16'd0;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo4_sink_payload_tag = 8'd0;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo4_sink_payload_user_id = 8'd0;
wire          litepciecore_litepcieendpoint_syncfifo4_sink_ready;
reg           litepciecore_litepcieendpoint_syncfifo4_sink_valid = 1'd0;
wire          litepciecore_litepcieendpoint_syncfifo4_source_first;
wire          litepciecore_litepcieendpoint_syncfifo4_source_last;
wire   [31:0] litepciecore_litepcieendpoint_syncfifo4_source_payload_adr;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo4_source_payload_channel;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo4_source_payload_cmp_id;
wire   [63:0] litepciecore_litepcieendpoint_syncfifo4_source_payload_dat;
wire          litepciecore_litepcieendpoint_syncfifo4_source_payload_end;
wire          litepciecore_litepcieendpoint_syncfifo4_source_payload_err;
wire    [9:0] litepciecore_litepcieendpoint_syncfifo4_source_payload_len;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo4_source_payload_req_id;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo4_source_payload_tag;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo4_source_payload_user_id;
reg           litepciecore_litepcieendpoint_syncfifo4_source_ready = 1'd0;
wire          litepciecore_litepcieendpoint_syncfifo4_source_valid;
wire  [165:0] litepciecore_litepcieendpoint_syncfifo4_syncfifo4_din;
wire  [165:0] litepciecore_litepcieendpoint_syncfifo4_syncfifo4_dout;
wire          litepciecore_litepcieendpoint_syncfifo4_syncfifo4_re;
wire          litepciecore_litepcieendpoint_syncfifo4_syncfifo4_readable;
wire          litepciecore_litepcieendpoint_syncfifo4_syncfifo4_we;
wire          litepciecore_litepcieendpoint_syncfifo4_syncfifo4_writable;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo4_wrport_adr = 8'd0;
wire  [165:0] litepciecore_litepcieendpoint_syncfifo4_wrport_dat_r;
wire  [165:0] litepciecore_litepcieendpoint_syncfifo4_wrport_dat_w;
wire          litepciecore_litepcieendpoint_syncfifo4_wrport_we;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo5_consume = 8'd0;
wire          litepciecore_litepcieendpoint_syncfifo5_do_read;
wire          litepciecore_litepcieendpoint_syncfifo5_fifo_in_first;
wire          litepciecore_litepcieendpoint_syncfifo5_fifo_in_last;
wire   [31:0] litepciecore_litepcieendpoint_syncfifo5_fifo_in_payload_adr;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo5_fifo_in_payload_channel;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo5_fifo_in_payload_cmp_id;
wire   [63:0] litepciecore_litepcieendpoint_syncfifo5_fifo_in_payload_dat;
wire          litepciecore_litepcieendpoint_syncfifo5_fifo_in_payload_end;
wire          litepciecore_litepcieendpoint_syncfifo5_fifo_in_payload_err;
wire    [9:0] litepciecore_litepcieendpoint_syncfifo5_fifo_in_payload_len;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo5_fifo_in_payload_req_id;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo5_fifo_in_payload_tag;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo5_fifo_in_payload_user_id;
wire          litepciecore_litepcieendpoint_syncfifo5_fifo_out_first;
wire          litepciecore_litepcieendpoint_syncfifo5_fifo_out_last;
wire   [31:0] litepciecore_litepcieendpoint_syncfifo5_fifo_out_payload_adr;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo5_fifo_out_payload_channel;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo5_fifo_out_payload_cmp_id;
wire   [63:0] litepciecore_litepcieendpoint_syncfifo5_fifo_out_payload_dat;
wire          litepciecore_litepcieendpoint_syncfifo5_fifo_out_payload_end;
wire          litepciecore_litepcieendpoint_syncfifo5_fifo_out_payload_err;
wire    [9:0] litepciecore_litepcieendpoint_syncfifo5_fifo_out_payload_len;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo5_fifo_out_payload_req_id;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo5_fifo_out_payload_tag;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo5_fifo_out_payload_user_id;
reg     [8:0] litepciecore_litepcieendpoint_syncfifo5_level0 = 9'd0;
wire    [8:0] litepciecore_litepcieendpoint_syncfifo5_level1;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo5_produce = 8'd0;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo5_rdport_adr;
wire  [165:0] litepciecore_litepcieendpoint_syncfifo5_rdport_dat_r;
wire          litepciecore_litepcieendpoint_syncfifo5_rdport_re;
wire          litepciecore_litepcieendpoint_syncfifo5_re;
reg           litepciecore_litepcieendpoint_syncfifo5_readable = 1'd0;
reg           litepciecore_litepcieendpoint_syncfifo5_replace = 1'd0;
reg           litepciecore_litepcieendpoint_syncfifo5_sink_first = 1'd0;
reg           litepciecore_litepcieendpoint_syncfifo5_sink_last = 1'd0;
reg    [31:0] litepciecore_litepcieendpoint_syncfifo5_sink_payload_adr = 32'd0;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo5_sink_payload_channel = 8'd0;
reg    [15:0] litepciecore_litepcieendpoint_syncfifo5_sink_payload_cmp_id = 16'd0;
reg    [63:0] litepciecore_litepcieendpoint_syncfifo5_sink_payload_dat = 64'd0;
reg           litepciecore_litepcieendpoint_syncfifo5_sink_payload_end = 1'd0;
reg           litepciecore_litepcieendpoint_syncfifo5_sink_payload_err = 1'd0;
reg     [9:0] litepciecore_litepcieendpoint_syncfifo5_sink_payload_len = 10'd0;
reg    [15:0] litepciecore_litepcieendpoint_syncfifo5_sink_payload_req_id = 16'd0;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo5_sink_payload_tag = 8'd0;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo5_sink_payload_user_id = 8'd0;
wire          litepciecore_litepcieendpoint_syncfifo5_sink_ready;
reg           litepciecore_litepcieendpoint_syncfifo5_sink_valid = 1'd0;
wire          litepciecore_litepcieendpoint_syncfifo5_source_first;
wire          litepciecore_litepcieendpoint_syncfifo5_source_last;
wire   [31:0] litepciecore_litepcieendpoint_syncfifo5_source_payload_adr;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo5_source_payload_channel;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo5_source_payload_cmp_id;
wire   [63:0] litepciecore_litepcieendpoint_syncfifo5_source_payload_dat;
wire          litepciecore_litepcieendpoint_syncfifo5_source_payload_end;
wire          litepciecore_litepcieendpoint_syncfifo5_source_payload_err;
wire    [9:0] litepciecore_litepcieendpoint_syncfifo5_source_payload_len;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo5_source_payload_req_id;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo5_source_payload_tag;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo5_source_payload_user_id;
reg           litepciecore_litepcieendpoint_syncfifo5_source_ready = 1'd0;
wire          litepciecore_litepcieendpoint_syncfifo5_source_valid;
wire  [165:0] litepciecore_litepcieendpoint_syncfifo5_syncfifo5_din;
wire  [165:0] litepciecore_litepcieendpoint_syncfifo5_syncfifo5_dout;
wire          litepciecore_litepcieendpoint_syncfifo5_syncfifo5_re;
wire          litepciecore_litepcieendpoint_syncfifo5_syncfifo5_readable;
wire          litepciecore_litepcieendpoint_syncfifo5_syncfifo5_we;
wire          litepciecore_litepcieendpoint_syncfifo5_syncfifo5_writable;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo5_wrport_adr = 8'd0;
wire  [165:0] litepciecore_litepcieendpoint_syncfifo5_wrport_dat_r;
wire  [165:0] litepciecore_litepcieendpoint_syncfifo5_wrport_dat_w;
wire          litepciecore_litepcieendpoint_syncfifo5_wrport_we;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo6_consume = 8'd0;
wire          litepciecore_litepcieendpoint_syncfifo6_do_read;
wire          litepciecore_litepcieendpoint_syncfifo6_fifo_in_first;
wire          litepciecore_litepcieendpoint_syncfifo6_fifo_in_last;
wire   [31:0] litepciecore_litepcieendpoint_syncfifo6_fifo_in_payload_adr;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo6_fifo_in_payload_channel;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo6_fifo_in_payload_cmp_id;
wire   [63:0] litepciecore_litepcieendpoint_syncfifo6_fifo_in_payload_dat;
wire          litepciecore_litepcieendpoint_syncfifo6_fifo_in_payload_end;
wire          litepciecore_litepcieendpoint_syncfifo6_fifo_in_payload_err;
wire    [9:0] litepciecore_litepcieendpoint_syncfifo6_fifo_in_payload_len;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo6_fifo_in_payload_req_id;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo6_fifo_in_payload_tag;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo6_fifo_in_payload_user_id;
wire          litepciecore_litepcieendpoint_syncfifo6_fifo_out_first;
wire          litepciecore_litepcieendpoint_syncfifo6_fifo_out_last;
wire   [31:0] litepciecore_litepcieendpoint_syncfifo6_fifo_out_payload_adr;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo6_fifo_out_payload_channel;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo6_fifo_out_payload_cmp_id;
wire   [63:0] litepciecore_litepcieendpoint_syncfifo6_fifo_out_payload_dat;
wire          litepciecore_litepcieendpoint_syncfifo6_fifo_out_payload_end;
wire          litepciecore_litepcieendpoint_syncfifo6_fifo_out_payload_err;
wire    [9:0] litepciecore_litepcieendpoint_syncfifo6_fifo_out_payload_len;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo6_fifo_out_payload_req_id;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo6_fifo_out_payload_tag;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo6_fifo_out_payload_user_id;
reg     [8:0] litepciecore_litepcieendpoint_syncfifo6_level0 = 9'd0;
wire    [8:0] litepciecore_litepcieendpoint_syncfifo6_level1;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo6_produce = 8'd0;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo6_rdport_adr;
wire  [165:0] litepciecore_litepcieendpoint_syncfifo6_rdport_dat_r;
wire          litepciecore_litepcieendpoint_syncfifo6_rdport_re;
wire          litepciecore_litepcieendpoint_syncfifo6_re;
reg           litepciecore_litepcieendpoint_syncfifo6_readable = 1'd0;
reg           litepciecore_litepcieendpoint_syncfifo6_replace = 1'd0;
reg           litepciecore_litepcieendpoint_syncfifo6_sink_first = 1'd0;
reg           litepciecore_litepcieendpoint_syncfifo6_sink_last = 1'd0;
reg    [31:0] litepciecore_litepcieendpoint_syncfifo6_sink_payload_adr = 32'd0;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo6_sink_payload_channel = 8'd0;
reg    [15:0] litepciecore_litepcieendpoint_syncfifo6_sink_payload_cmp_id = 16'd0;
reg    [63:0] litepciecore_litepcieendpoint_syncfifo6_sink_payload_dat = 64'd0;
reg           litepciecore_litepcieendpoint_syncfifo6_sink_payload_end = 1'd0;
reg           litepciecore_litepcieendpoint_syncfifo6_sink_payload_err = 1'd0;
reg     [9:0] litepciecore_litepcieendpoint_syncfifo6_sink_payload_len = 10'd0;
reg    [15:0] litepciecore_litepcieendpoint_syncfifo6_sink_payload_req_id = 16'd0;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo6_sink_payload_tag = 8'd0;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo6_sink_payload_user_id = 8'd0;
wire          litepciecore_litepcieendpoint_syncfifo6_sink_ready;
reg           litepciecore_litepcieendpoint_syncfifo6_sink_valid = 1'd0;
wire          litepciecore_litepcieendpoint_syncfifo6_source_first;
wire          litepciecore_litepcieendpoint_syncfifo6_source_last;
wire   [31:0] litepciecore_litepcieendpoint_syncfifo6_source_payload_adr;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo6_source_payload_channel;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo6_source_payload_cmp_id;
wire   [63:0] litepciecore_litepcieendpoint_syncfifo6_source_payload_dat;
wire          litepciecore_litepcieendpoint_syncfifo6_source_payload_end;
wire          litepciecore_litepcieendpoint_syncfifo6_source_payload_err;
wire    [9:0] litepciecore_litepcieendpoint_syncfifo6_source_payload_len;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo6_source_payload_req_id;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo6_source_payload_tag;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo6_source_payload_user_id;
reg           litepciecore_litepcieendpoint_syncfifo6_source_ready = 1'd0;
wire          litepciecore_litepcieendpoint_syncfifo6_source_valid;
wire  [165:0] litepciecore_litepcieendpoint_syncfifo6_syncfifo6_din;
wire  [165:0] litepciecore_litepcieendpoint_syncfifo6_syncfifo6_dout;
wire          litepciecore_litepcieendpoint_syncfifo6_syncfifo6_re;
wire          litepciecore_litepcieendpoint_syncfifo6_syncfifo6_readable;
wire          litepciecore_litepcieendpoint_syncfifo6_syncfifo6_we;
wire          litepciecore_litepcieendpoint_syncfifo6_syncfifo6_writable;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo6_wrport_adr = 8'd0;
wire  [165:0] litepciecore_litepcieendpoint_syncfifo6_wrport_dat_r;
wire  [165:0] litepciecore_litepcieendpoint_syncfifo6_wrport_dat_w;
wire          litepciecore_litepcieendpoint_syncfifo6_wrport_we;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo7_consume = 8'd0;
wire          litepciecore_litepcieendpoint_syncfifo7_do_read;
wire          litepciecore_litepcieendpoint_syncfifo7_fifo_in_first;
wire          litepciecore_litepcieendpoint_syncfifo7_fifo_in_last;
wire   [31:0] litepciecore_litepcieendpoint_syncfifo7_fifo_in_payload_adr;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo7_fifo_in_payload_channel;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo7_fifo_in_payload_cmp_id;
wire   [63:0] litepciecore_litepcieendpoint_syncfifo7_fifo_in_payload_dat;
wire          litepciecore_litepcieendpoint_syncfifo7_fifo_in_payload_end;
wire          litepciecore_litepcieendpoint_syncfifo7_fifo_in_payload_err;
wire    [9:0] litepciecore_litepcieendpoint_syncfifo7_fifo_in_payload_len;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo7_fifo_in_payload_req_id;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo7_fifo_in_payload_tag;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo7_fifo_in_payload_user_id;
wire          litepciecore_litepcieendpoint_syncfifo7_fifo_out_first;
wire          litepciecore_litepcieendpoint_syncfifo7_fifo_out_last;
wire   [31:0] litepciecore_litepcieendpoint_syncfifo7_fifo_out_payload_adr;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo7_fifo_out_payload_channel;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo7_fifo_out_payload_cmp_id;
wire   [63:0] litepciecore_litepcieendpoint_syncfifo7_fifo_out_payload_dat;
wire          litepciecore_litepcieendpoint_syncfifo7_fifo_out_payload_end;
wire          litepciecore_litepcieendpoint_syncfifo7_fifo_out_payload_err;
wire    [9:0] litepciecore_litepcieendpoint_syncfifo7_fifo_out_payload_len;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo7_fifo_out_payload_req_id;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo7_fifo_out_payload_tag;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo7_fifo_out_payload_user_id;
reg     [8:0] litepciecore_litepcieendpoint_syncfifo7_level0 = 9'd0;
wire    [8:0] litepciecore_litepcieendpoint_syncfifo7_level1;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo7_produce = 8'd0;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo7_rdport_adr;
wire  [165:0] litepciecore_litepcieendpoint_syncfifo7_rdport_dat_r;
wire          litepciecore_litepcieendpoint_syncfifo7_rdport_re;
wire          litepciecore_litepcieendpoint_syncfifo7_re;
reg           litepciecore_litepcieendpoint_syncfifo7_readable = 1'd0;
reg           litepciecore_litepcieendpoint_syncfifo7_replace = 1'd0;
reg           litepciecore_litepcieendpoint_syncfifo7_sink_first = 1'd0;
reg           litepciecore_litepcieendpoint_syncfifo7_sink_last = 1'd0;
reg    [31:0] litepciecore_litepcieendpoint_syncfifo7_sink_payload_adr = 32'd0;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo7_sink_payload_channel = 8'd0;
reg    [15:0] litepciecore_litepcieendpoint_syncfifo7_sink_payload_cmp_id = 16'd0;
reg    [63:0] litepciecore_litepcieendpoint_syncfifo7_sink_payload_dat = 64'd0;
reg           litepciecore_litepcieendpoint_syncfifo7_sink_payload_end = 1'd0;
reg           litepciecore_litepcieendpoint_syncfifo7_sink_payload_err = 1'd0;
reg     [9:0] litepciecore_litepcieendpoint_syncfifo7_sink_payload_len = 10'd0;
reg    [15:0] litepciecore_litepcieendpoint_syncfifo7_sink_payload_req_id = 16'd0;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo7_sink_payload_tag = 8'd0;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo7_sink_payload_user_id = 8'd0;
wire          litepciecore_litepcieendpoint_syncfifo7_sink_ready;
reg           litepciecore_litepcieendpoint_syncfifo7_sink_valid = 1'd0;
wire          litepciecore_litepcieendpoint_syncfifo7_source_first;
wire          litepciecore_litepcieendpoint_syncfifo7_source_last;
wire   [31:0] litepciecore_litepcieendpoint_syncfifo7_source_payload_adr;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo7_source_payload_channel;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo7_source_payload_cmp_id;
wire   [63:0] litepciecore_litepcieendpoint_syncfifo7_source_payload_dat;
wire          litepciecore_litepcieendpoint_syncfifo7_source_payload_end;
wire          litepciecore_litepcieendpoint_syncfifo7_source_payload_err;
wire    [9:0] litepciecore_litepcieendpoint_syncfifo7_source_payload_len;
wire   [15:0] litepciecore_litepcieendpoint_syncfifo7_source_payload_req_id;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo7_source_payload_tag;
wire    [7:0] litepciecore_litepcieendpoint_syncfifo7_source_payload_user_id;
reg           litepciecore_litepcieendpoint_syncfifo7_source_ready = 1'd0;
wire          litepciecore_litepcieendpoint_syncfifo7_source_valid;
wire  [165:0] litepciecore_litepcieendpoint_syncfifo7_syncfifo7_din;
wire  [165:0] litepciecore_litepcieendpoint_syncfifo7_syncfifo7_dout;
wire          litepciecore_litepcieendpoint_syncfifo7_syncfifo7_re;
wire          litepciecore_litepcieendpoint_syncfifo7_syncfifo7_readable;
wire          litepciecore_litepcieendpoint_syncfifo7_syncfifo7_we;
wire          litepciecore_litepcieendpoint_syncfifo7_syncfifo7_writable;
reg     [7:0] litepciecore_litepcieendpoint_syncfifo7_wrport_adr = 8'd0;
wire  [165:0] litepciecore_litepcieendpoint_syncfifo7_wrport_dat_r;
wire  [165:0] litepciecore_litepcieendpoint_syncfifo7_wrport_dat_w;
wire          litepciecore_litepcieendpoint_syncfifo7_wrport_we;
reg     [2:0] litepciecore_litepcieendpoint_tag_queue_consume = 3'd0;
wire          litepciecore_litepcieendpoint_tag_queue_do_read;
wire          litepciecore_litepcieendpoint_tag_queue_fifo_in_first;
wire          litepciecore_litepcieendpoint_tag_queue_fifo_in_last;
wire    [2:0] litepciecore_litepcieendpoint_tag_queue_fifo_in_payload_tag;
wire          litepciecore_litepcieendpoint_tag_queue_fifo_out_first;
wire          litepciecore_litepcieendpoint_tag_queue_fifo_out_last;
wire    [2:0] litepciecore_litepcieendpoint_tag_queue_fifo_out_payload_tag;
reg     [3:0] litepciecore_litepcieendpoint_tag_queue_level0 = 4'd0;
wire    [3:0] litepciecore_litepcieendpoint_tag_queue_level1;
reg     [2:0] litepciecore_litepcieendpoint_tag_queue_produce = 3'd0;
wire    [2:0] litepciecore_litepcieendpoint_tag_queue_rdport_adr;
wire    [4:0] litepciecore_litepcieendpoint_tag_queue_rdport_dat_r;
wire          litepciecore_litepcieendpoint_tag_queue_rdport_re;
wire          litepciecore_litepcieendpoint_tag_queue_re;
reg           litepciecore_litepcieendpoint_tag_queue_readable = 1'd0;
reg           litepciecore_litepcieendpoint_tag_queue_replace = 1'd0;
reg           litepciecore_litepcieendpoint_tag_queue_sink_first = 1'd0;
reg           litepciecore_litepcieendpoint_tag_queue_sink_last = 1'd0;
reg     [2:0] litepciecore_litepcieendpoint_tag_queue_sink_payload_tag = 3'd0;
wire          litepciecore_litepcieendpoint_tag_queue_sink_ready;
reg           litepciecore_litepcieendpoint_tag_queue_sink_valid = 1'd0;
wire          litepciecore_litepcieendpoint_tag_queue_source_first;
wire          litepciecore_litepcieendpoint_tag_queue_source_last;
wire    [2:0] litepciecore_litepcieendpoint_tag_queue_source_payload_tag;
reg           litepciecore_litepcieendpoint_tag_queue_source_ready = 1'd0;
wire          litepciecore_litepcieendpoint_tag_queue_source_valid;
wire    [4:0] litepciecore_litepcieendpoint_tag_queue_syncfifo_din;
wire    [4:0] litepciecore_litepcieendpoint_tag_queue_syncfifo_dout;
wire          litepciecore_litepcieendpoint_tag_queue_syncfifo_re;
wire          litepciecore_litepcieendpoint_tag_queue_syncfifo_readable;
wire          litepciecore_litepcieendpoint_tag_queue_syncfifo_we;
wire          litepciecore_litepcieendpoint_tag_queue_syncfifo_writable;
reg     [2:0] litepciecore_litepcieendpoint_tag_queue_wrport_adr = 3'd0;
wire    [4:0] litepciecore_litepcieendpoint_tag_queue_wrport_dat_r;
wire    [4:0] litepciecore_litepcieendpoint_tag_queue_wrport_dat_w;
wire          litepciecore_litepcieendpoint_tag_queue_wrport_we;
reg           litepciecore_litepciemsix_next_state = 1'd0;
reg           litepciecore_litepciemsix_state = 1'd0;
reg     [1:0] litepciecore_litepciewishbonemaster_next_state = 2'd0;
reg     [1:0] litepciecore_litepciewishbonemaster_state = 2'd0;
reg     [1:0] litepciecore_litepciewishboneslave_next_state = 2'd0;
reg     [1:0] litepciecore_litepciewishboneslave_state = 2'd0;
wire          litepciecore_mmcm_fb;
reg     [1:0] litepciecore_ptmcapabilities_next_state = 2'd0;
reg     [1:0] litepciecore_ptmcapabilities_state = 2'd0;
reg     [2:0] litepciecore_ptmrequester_next_state = 3'd0;
reg     [2:0] litepciecore_ptmrequester_state = 3'd0;
wire          litepciecore_reset0;
wire          litepciecore_reset1;
wire          litepciecore_reset2;
wire          litepciecore_reset3;
wire          litepciecore_reset4;
wire          litepciecore_reset5;
wire          litepciecore_reset6;
wire          litepciecore_reset7;
reg           litepciecore_we = 1'd0;
reg     [1:0] litepciecore_wishbone2axilite_next_state = 2'd0;
reg     [1:0] litepciecore_wishbone2axilite_state = 2'd0;
reg           litepciecore_wishbone2csr_next_state = 1'd0;
reg           litepciecore_wishbone2csr_state = 1'd0;
reg           litepciecore_wishbone_ack = 1'd0;
wire   [29:0] litepciecore_wishbone_adr;
wire    [1:0] litepciecore_wishbone_bte;
wire    [2:0] litepciecore_wishbone_cti;
wire          litepciecore_wishbone_cyc;
reg    [31:0] litepciecore_wishbone_dat_r = 32'd0;
wire   [31:0] litepciecore_wishbone_dat_w;
reg           litepciecore_wishbone_err = 1'd0;
wire    [3:0] litepciecore_wishbone_sel;
wire          litepciecore_wishbone_stb;
wire          litepciecore_wishbone_we;
wire   [23:0] litepciedma_buffering_csrfield_depth0;
wire   [23:0] litepciedma_buffering_csrfield_depth1;
reg    [23:0] litepciedma_buffering_csrfield_level0 = 24'd0;
reg    [23:0] litepciedma_buffering_csrfield_level1 = 24'd0;
wire          litepciedma_buffering_csrfield_level_mode0;
wire          litepciedma_buffering_csrfield_level_mode1;
wire    [3:0] litepciedma_buffering_csrfield_scratch0;
wire    [3:0] litepciedma_buffering_csrfield_scratch1;
wire          litepciedma_buffering_next_sink_first;
wire          litepciedma_buffering_next_sink_last;
wire   [63:0] litepciedma_buffering_next_sink_payload_data;
reg           litepciedma_buffering_next_sink_ready = 1'd0;
wire          litepciedma_buffering_next_sink_valid;
wire          litepciedma_buffering_next_source_first;
wire          litepciedma_buffering_next_source_last;
wire   [63:0] litepciedma_buffering_next_source_payload_data;
wire          litepciedma_buffering_next_source_ready;
wire          litepciedma_buffering_next_source_valid;
reg     [9:0] litepciedma_buffering_reader_fifo_consume = 10'd0;
reg           litepciedma_buffering_reader_fifo_control_re = 1'd0;
reg    [31:0] litepciedma_buffering_reader_fifo_control_storage = 32'd8192;
wire          litepciedma_buffering_reader_fifo_do_read;
wire          litepciedma_buffering_reader_fifo_fifo_in_first;
wire          litepciedma_buffering_reader_fifo_fifo_in_last;
wire   [63:0] litepciedma_buffering_reader_fifo_fifo_in_payload_data;
wire          litepciedma_buffering_reader_fifo_fifo_out_first;
wire          litepciedma_buffering_reader_fifo_fifo_out_last;
wire   [63:0] litepciedma_buffering_reader_fifo_fifo_out_payload_data;
reg    [10:0] litepciedma_buffering_reader_fifo_level0 = 11'd0;
wire   [10:0] litepciedma_buffering_reader_fifo_level1;
reg    [10:0] litepciedma_buffering_reader_fifo_level_min = 11'd0;
reg     [9:0] litepciedma_buffering_reader_fifo_produce = 10'd0;
wire    [9:0] litepciedma_buffering_reader_fifo_rdport_adr;
wire   [65:0] litepciedma_buffering_reader_fifo_rdport_dat_r;
wire          litepciedma_buffering_reader_fifo_rdport_re;
wire          litepciedma_buffering_reader_fifo_re;
reg           litepciedma_buffering_reader_fifo_readable = 1'd0;
reg           litepciedma_buffering_reader_fifo_replace = 1'd0;
wire          litepciedma_buffering_reader_fifo_sink_first;
wire          litepciedma_buffering_reader_fifo_sink_last;
wire   [63:0] litepciedma_buffering_reader_fifo_sink_payload_data;
wire          litepciedma_buffering_reader_fifo_sink_ready;
reg           litepciedma_buffering_reader_fifo_sink_valid = 1'd0;
wire          litepciedma_buffering_reader_fifo_source_first;
wire          litepciedma_buffering_reader_fifo_source_last;
wire   [63:0] litepciedma_buffering_reader_fifo_source_payload_data;
wire          litepciedma_buffering_reader_fifo_source_ready;
wire          litepciedma_buffering_reader_fifo_source_valid;
reg           litepciedma_buffering_reader_fifo_status_re = 1'd0;
reg    [23:0] litepciedma_buffering_reader_fifo_status_status = 24'd0;
wire          litepciedma_buffering_reader_fifo_status_we;
wire   [65:0] litepciedma_buffering_reader_fifo_syncfifo_din;
wire   [65:0] litepciedma_buffering_reader_fifo_syncfifo_dout;
wire          litepciedma_buffering_reader_fifo_syncfifo_re;
wire          litepciedma_buffering_reader_fifo_syncfifo_readable;
wire          litepciedma_buffering_reader_fifo_syncfifo_we;
wire          litepciedma_buffering_reader_fifo_syncfifo_writable;
reg     [9:0] litepciedma_buffering_reader_fifo_wrport_adr = 10'd0;
wire   [65:0] litepciedma_buffering_reader_fifo_wrport_dat_r;
wire   [65:0] litepciedma_buffering_reader_fifo_wrport_dat_w;
wire          litepciedma_buffering_reader_fifo_wrport_we;
wire          litepciedma_buffering_sink_sink_first;
wire          litepciedma_buffering_sink_sink_last;
wire   [63:0] litepciedma_buffering_sink_sink_payload_data;
reg           litepciedma_buffering_sink_sink_ready = 1'd0;
wire          litepciedma_buffering_sink_sink_valid;
wire          litepciedma_buffering_source_source_first;
wire          litepciedma_buffering_source_source_last;
wire   [63:0] litepciedma_buffering_source_source_payload_data;
wire          litepciedma_buffering_source_source_ready;
wire          litepciedma_buffering_source_source_valid;
reg     [9:0] litepciedma_buffering_writer_fifo_consume = 10'd0;
reg           litepciedma_buffering_writer_fifo_control_re = 1'd0;
reg    [31:0] litepciedma_buffering_writer_fifo_control_storage = 32'd8192;
wire          litepciedma_buffering_writer_fifo_do_read;
wire          litepciedma_buffering_writer_fifo_fifo_in_first;
wire          litepciedma_buffering_writer_fifo_fifo_in_last;
wire   [63:0] litepciedma_buffering_writer_fifo_fifo_in_payload_data;
wire          litepciedma_buffering_writer_fifo_fifo_out_first;
wire          litepciedma_buffering_writer_fifo_fifo_out_last;
wire   [63:0] litepciedma_buffering_writer_fifo_fifo_out_payload_data;
reg    [10:0] litepciedma_buffering_writer_fifo_level0 = 11'd0;
wire   [10:0] litepciedma_buffering_writer_fifo_level1;
reg    [10:0] litepciedma_buffering_writer_fifo_level_max = 11'd0;
reg     [9:0] litepciedma_buffering_writer_fifo_produce = 10'd0;
wire    [9:0] litepciedma_buffering_writer_fifo_rdport_adr;
wire   [65:0] litepciedma_buffering_writer_fifo_rdport_dat_r;
wire          litepciedma_buffering_writer_fifo_rdport_re;
wire          litepciedma_buffering_writer_fifo_re;
reg           litepciedma_buffering_writer_fifo_readable = 1'd0;
reg           litepciedma_buffering_writer_fifo_replace = 1'd0;
wire          litepciedma_buffering_writer_fifo_sink_first;
wire          litepciedma_buffering_writer_fifo_sink_last;
wire   [63:0] litepciedma_buffering_writer_fifo_sink_payload_data;
wire          litepciedma_buffering_writer_fifo_sink_ready;
reg           litepciedma_buffering_writer_fifo_sink_valid = 1'd0;
wire          litepciedma_buffering_writer_fifo_source_first;
wire          litepciedma_buffering_writer_fifo_source_last;
wire   [63:0] litepciedma_buffering_writer_fifo_source_payload_data;
wire          litepciedma_buffering_writer_fifo_source_ready;
wire          litepciedma_buffering_writer_fifo_source_valid;
reg           litepciedma_buffering_writer_fifo_status_re = 1'd0;
reg    [23:0] litepciedma_buffering_writer_fifo_status_status = 24'd0;
wire          litepciedma_buffering_writer_fifo_status_we;
wire   [65:0] litepciedma_buffering_writer_fifo_syncfifo_din;
wire   [65:0] litepciedma_buffering_writer_fifo_syncfifo_dout;
wire          litepciedma_buffering_writer_fifo_syncfifo_re;
wire          litepciedma_buffering_writer_fifo_syncfifo_readable;
wire          litepciedma_buffering_writer_fifo_syncfifo_we;
wire          litepciedma_buffering_writer_fifo_syncfifo_writable;
reg     [9:0] litepciedma_buffering_writer_fifo_wrport_adr = 10'd0;
wire   [65:0] litepciedma_buffering_writer_fifo_wrport_dat_r;
wire   [65:0] litepciedma_buffering_writer_fifo_wrport_dat_w;
wire          litepciedma_buffering_writer_fifo_wrport_we;
wire          litepciedma_litepciemasterinternalport0_sink_first;
wire          litepciedma_litepciemasterinternalport0_sink_last;
wire   [31:0] litepciedma_litepciemasterinternalport0_sink_payload_adr;
wire    [7:0] litepciedma_litepciemasterinternalport0_sink_payload_channel;
wire   [63:0] litepciedma_litepciemasterinternalport0_sink_payload_dat;
wire    [9:0] litepciedma_litepciemasterinternalport0_sink_payload_len;
wire   [15:0] litepciedma_litepciemasterinternalport0_sink_payload_req_id;
wire    [7:0] litepciedma_litepciemasterinternalport0_sink_payload_tag;
wire    [7:0] litepciedma_litepciemasterinternalport0_sink_payload_user_id;
wire          litepciedma_litepciemasterinternalport0_sink_payload_we;
wire          litepciedma_litepciemasterinternalport0_sink_ready;
reg           litepciedma_litepciemasterinternalport0_sink_valid = 1'd0;
reg           litepciedma_litepciemasterinternalport0_source_first = 1'd0;
reg           litepciedma_litepciemasterinternalport0_source_last = 1'd0;
reg    [31:0] litepciedma_litepciemasterinternalport0_source_payload_adr = 32'd0;
reg     [7:0] litepciedma_litepciemasterinternalport0_source_payload_channel = 8'd0;
reg    [15:0] litepciedma_litepciemasterinternalport0_source_payload_cmp_id = 16'd0;
reg    [63:0] litepciedma_litepciemasterinternalport0_source_payload_dat = 64'd0;
reg           litepciedma_litepciemasterinternalport0_source_payload_end = 1'd0;
reg           litepciedma_litepciemasterinternalport0_source_payload_err = 1'd0;
reg     [9:0] litepciedma_litepciemasterinternalport0_source_payload_len = 10'd0;
reg    [15:0] litepciedma_litepciemasterinternalport0_source_payload_req_id = 16'd0;
reg     [7:0] litepciedma_litepciemasterinternalport0_source_payload_tag = 8'd0;
reg     [7:0] litepciedma_litepciemasterinternalport0_source_payload_user_id = 8'd0;
reg           litepciedma_litepciemasterinternalport0_source_ready = 1'd0;
reg           litepciedma_litepciemasterinternalport0_source_valid = 1'd0;
wire          litepciedma_litepciemasterinternalport1_sink_first;
wire          litepciedma_litepciemasterinternalport1_sink_last;
wire   [31:0] litepciedma_litepciemasterinternalport1_sink_payload_adr;
wire    [7:0] litepciedma_litepciemasterinternalport1_sink_payload_channel;
wire   [63:0] litepciedma_litepciemasterinternalport1_sink_payload_dat;
wire    [9:0] litepciedma_litepciemasterinternalport1_sink_payload_len;
wire   [15:0] litepciedma_litepciemasterinternalport1_sink_payload_req_id;
reg     [7:0] litepciedma_litepciemasterinternalport1_sink_payload_tag = 8'd0;
wire    [7:0] litepciedma_litepciemasterinternalport1_sink_payload_user_id;
wire          litepciedma_litepciemasterinternalport1_sink_payload_we;
reg           litepciedma_litepciemasterinternalport1_sink_ready = 1'd0;
reg           litepciedma_litepciemasterinternalport1_sink_valid = 1'd0;
reg           litepciedma_litepciemasterinternalport1_source_first = 1'd0;
reg           litepciedma_litepciemasterinternalport1_source_last = 1'd0;
reg    [31:0] litepciedma_litepciemasterinternalport1_source_payload_adr = 32'd0;
reg     [7:0] litepciedma_litepciemasterinternalport1_source_payload_channel = 8'd0;
reg    [15:0] litepciedma_litepciemasterinternalport1_source_payload_cmp_id = 16'd0;
reg    [63:0] litepciedma_litepciemasterinternalport1_source_payload_dat = 64'd0;
reg           litepciedma_litepciemasterinternalport1_source_payload_end = 1'd0;
reg           litepciedma_litepciemasterinternalport1_source_payload_err = 1'd0;
reg     [9:0] litepciedma_litepciemasterinternalport1_source_payload_len = 10'd0;
reg    [15:0] litepciedma_litepciemasterinternalport1_source_payload_req_id = 16'd0;
reg     [7:0] litepciedma_litepciemasterinternalport1_source_payload_tag = 8'd0;
reg     [7:0] litepciedma_litepciemasterinternalport1_source_payload_user_id = 8'd0;
reg           litepciedma_litepciemasterinternalport1_source_ready = 1'd0;
reg           litepciedma_litepciemasterinternalport1_source_valid = 1'd0;
wire          litepciedma_loopback_next_sink_first;
wire          litepciedma_loopback_next_sink_last;
wire   [63:0] litepciedma_loopback_next_sink_payload_data;
reg           litepciedma_loopback_next_sink_ready = 1'd0;
wire          litepciedma_loopback_next_sink_valid;
reg           litepciedma_loopback_next_source_first = 1'd0;
reg           litepciedma_loopback_next_source_last = 1'd0;
reg    [63:0] litepciedma_loopback_next_source_payload_data = 64'd0;
wire          litepciedma_loopback_next_source_ready;
reg           litepciedma_loopback_next_source_valid = 1'd0;
reg           litepciedma_loopback_re = 1'd0;
wire          litepciedma_loopback_sink_first;
wire          litepciedma_loopback_sink_last;
wire   [63:0] litepciedma_loopback_sink_payload_data;
reg           litepciedma_loopback_sink_ready = 1'd0;
wire          litepciedma_loopback_sink_valid;
reg           litepciedma_loopback_source_first = 1'd0;
reg           litepciedma_loopback_source_last = 1'd0;
reg    [63:0] litepciedma_loopback_source_payload_data = 64'd0;
wire          litepciedma_loopback_source_ready;
reg           litepciedma_loopback_source_valid = 1'd0;
reg           litepciedma_loopback_storage = 1'd0;
wire          litepciedma_reader_data_conv_converter_sink_first;
wire          litepciedma_reader_data_conv_converter_sink_last;
wire   [63:0] litepciedma_reader_data_conv_converter_sink_payload_data;
wire          litepciedma_reader_data_conv_converter_sink_ready;
wire          litepciedma_reader_data_conv_converter_sink_valid;
wire          litepciedma_reader_data_conv_converter_source_first;
wire          litepciedma_reader_data_conv_converter_source_last;
wire   [63:0] litepciedma_reader_data_conv_converter_source_payload_data;
wire          litepciedma_reader_data_conv_converter_source_payload_valid_token_count;
wire          litepciedma_reader_data_conv_converter_source_ready;
wire          litepciedma_reader_data_conv_converter_source_valid;
wire          litepciedma_reader_data_conv_source_source_first;
wire          litepciedma_reader_data_conv_source_source_last;
wire   [63:0] litepciedma_reader_data_conv_source_source_payload_data;
wire          litepciedma_reader_data_conv_source_source_ready;
wire          litepciedma_reader_data_conv_source_source_valid;
reg    [10:0] litepciedma_reader_data_fifo_consume = 11'd0;
wire          litepciedma_reader_data_fifo_do_read;
wire          litepciedma_reader_data_fifo_fifo_in_first;
wire          litepciedma_reader_data_fifo_fifo_in_last;
wire   [63:0] litepciedma_reader_data_fifo_fifo_in_payload_data;
wire          litepciedma_reader_data_fifo_fifo_out_first;
wire          litepciedma_reader_data_fifo_fifo_out_last;
wire   [63:0] litepciedma_reader_data_fifo_fifo_out_payload_data;
reg    [11:0] litepciedma_reader_data_fifo_level0 = 12'd0;
wire   [11:0] litepciedma_reader_data_fifo_level1;
reg    [10:0] litepciedma_reader_data_fifo_produce = 11'd0;
wire   [10:0] litepciedma_reader_data_fifo_rdport_adr;
wire   [65:0] litepciedma_reader_data_fifo_rdport_dat_r;
wire          litepciedma_reader_data_fifo_rdport_re;
wire          litepciedma_reader_data_fifo_re;
reg           litepciedma_reader_data_fifo_readable = 1'd0;
reg           litepciedma_reader_data_fifo_replace = 1'd0;
reg           litepciedma_reader_data_fifo_reset = 1'd0;
reg           litepciedma_reader_data_fifo_sink_first = 1'd0;
reg           litepciedma_reader_data_fifo_sink_last = 1'd0;
reg    [63:0] litepciedma_reader_data_fifo_sink_payload_data = 64'd0;
wire          litepciedma_reader_data_fifo_sink_ready;
reg           litepciedma_reader_data_fifo_sink_valid = 1'd0;
wire          litepciedma_reader_data_fifo_source_first;
wire          litepciedma_reader_data_fifo_source_last;
wire   [63:0] litepciedma_reader_data_fifo_source_payload_data;
wire          litepciedma_reader_data_fifo_source_ready;
wire          litepciedma_reader_data_fifo_source_valid;
wire   [65:0] litepciedma_reader_data_fifo_syncfifo_din;
wire   [65:0] litepciedma_reader_data_fifo_syncfifo_dout;
wire          litepciedma_reader_data_fifo_syncfifo_re;
wire          litepciedma_reader_data_fifo_syncfifo_readable;
wire          litepciedma_reader_data_fifo_syncfifo_we;
wire          litepciedma_reader_data_fifo_syncfifo_writable;
reg    [10:0] litepciedma_reader_data_fifo_wrport_adr = 11'd0;
wire   [65:0] litepciedma_reader_data_fifo_wrport_dat_r;
wire   [65:0] litepciedma_reader_data_fifo_wrport_dat_w;
wire          litepciedma_reader_data_fifo_wrport_we;
reg           litepciedma_reader_enable_re = 1'd0;
reg     [1:0] litepciedma_reader_enable_storage = 2'd0;
reg           litepciedma_reader_irq = 1'd0;
reg           litepciedma_reader_is_ongoing = 1'd0;
reg     [7:0] litepciedma_reader_last_user_id = 8'd255;
reg    [15:0] litepciedma_reader_monitor_count = 16'd0;
reg    [15:0] litepciedma_reader_monitor_count_latched = 16'd0;
reg           litepciedma_reader_monitor_latch0 = 1'd0;
wire          litepciedma_reader_monitor_latch1;
wire          litepciedma_reader_monitor_latch_latch_r;
reg           litepciedma_reader_monitor_latch_latch_re = 1'd0;
reg           litepciedma_reader_monitor_latch_latch_w = 1'd0;
reg           litepciedma_reader_monitor_latch_latch_we = 1'd0;
reg           litepciedma_reader_monitor_re = 1'd0;
reg           litepciedma_reader_monitor_reset0 = 1'd0;
wire          litepciedma_reader_monitor_reset1;
wire          litepciedma_reader_monitor_reset_reset_r;
reg           litepciedma_reader_monitor_reset_reset_re = 1'd0;
reg           litepciedma_reader_monitor_reset_reset_w = 1'd0;
reg           litepciedma_reader_monitor_reset_reset_we = 1'd0;
wire   [15:0] litepciedma_reader_monitor_status;
wire          litepciedma_reader_monitor_we;
reg    [11:0] litepciedma_reader_pending_words = 12'd0;
reg    [11:0] litepciedma_reader_pending_words_dequeue = 12'd0;
reg    [11:0] litepciedma_reader_pending_words_queue = 12'd0;
wire          litepciedma_reader_source_source_first;
wire          litepciedma_reader_source_source_last;
wire   [63:0] litepciedma_reader_source_source_payload_data;
wire          litepciedma_reader_source_source_ready;
wire          litepciedma_reader_source_source_valid;
reg    [31:0] litepciedma_reader_splitter_desc_id = 32'd0;
reg    [31:0] litepciedma_reader_splitter_desc_id_bufferizeendpoints_next_value2 = 32'd0;
reg           litepciedma_reader_splitter_desc_id_bufferizeendpoints_next_value_ce2 = 1'd0;
reg    [31:0] litepciedma_reader_splitter_desc_length = 32'd0;
reg    [31:0] litepciedma_reader_splitter_desc_length_bufferizeendpoints_next_value1 = 32'd0;
reg           litepciedma_reader_splitter_desc_length_bufferizeendpoints_next_value_ce1 = 1'd0;
reg    [31:0] litepciedma_reader_splitter_desc_offset = 32'd0;
reg    [31:0] litepciedma_reader_splitter_desc_offset_bufferizeendpoints_next_value0 = 32'd0;
reg           litepciedma_reader_splitter_desc_offset_bufferizeendpoints_next_value_ce0 = 1'd0;
wire          litepciedma_reader_splitter_pipe_valid_sink_first;
wire          litepciedma_reader_splitter_pipe_valid_sink_last;
wire   [31:0] litepciedma_reader_splitter_pipe_valid_sink_payload_address;
wire          litepciedma_reader_splitter_pipe_valid_sink_payload_irq_disable;
wire          litepciedma_reader_splitter_pipe_valid_sink_payload_last_disable;
wire   [23:0] litepciedma_reader_splitter_pipe_valid_sink_payload_length;
wire    [7:0] litepciedma_reader_splitter_pipe_valid_sink_payload_user_id;
wire          litepciedma_reader_splitter_pipe_valid_sink_ready;
wire          litepciedma_reader_splitter_pipe_valid_sink_valid;
reg           litepciedma_reader_splitter_pipe_valid_source_first = 1'd0;
reg           litepciedma_reader_splitter_pipe_valid_source_last = 1'd0;
reg    [31:0] litepciedma_reader_splitter_pipe_valid_source_payload_address = 32'd0;
reg           litepciedma_reader_splitter_pipe_valid_source_payload_irq_disable = 1'd0;
reg           litepciedma_reader_splitter_pipe_valid_source_payload_last_disable = 1'd0;
reg    [23:0] litepciedma_reader_splitter_pipe_valid_source_payload_length = 24'd0;
reg     [7:0] litepciedma_reader_splitter_pipe_valid_source_payload_user_id = 8'd0;
wire          litepciedma_reader_splitter_pipe_valid_source_ready;
reg           litepciedma_reader_splitter_pipe_valid_source_valid = 1'd0;
reg           litepciedma_reader_splitter_reset = 1'd0;
wire          litepciedma_reader_splitter_sink_first;
wire          litepciedma_reader_splitter_sink_last;
wire   [31:0] litepciedma_reader_splitter_sink_payload_address;
wire          litepciedma_reader_splitter_sink_payload_irq_disable;
wire          litepciedma_reader_splitter_sink_payload_last_disable;
wire   [23:0] litepciedma_reader_splitter_sink_payload_length;
reg           litepciedma_reader_splitter_sink_ready = 1'd0;
wire          litepciedma_reader_splitter_sink_sink_first;
wire          litepciedma_reader_splitter_sink_sink_last;
wire   [31:0] litepciedma_reader_splitter_sink_sink_payload_address;
wire          litepciedma_reader_splitter_sink_sink_payload_irq_disable;
wire          litepciedma_reader_splitter_sink_sink_payload_last_disable;
wire   [23:0] litepciedma_reader_splitter_sink_sink_payload_length;
wire    [7:0] litepciedma_reader_splitter_sink_sink_payload_user_id;
wire          litepciedma_reader_splitter_sink_sink_ready;
wire          litepciedma_reader_splitter_sink_sink_valid;
wire          litepciedma_reader_splitter_sink_valid;
reg           litepciedma_reader_splitter_source_first = 1'd0;
reg           litepciedma_reader_splitter_source_last = 1'd0;
wire   [31:0] litepciedma_reader_splitter_source_payload_address;
wire          litepciedma_reader_splitter_source_payload_irq_disable;
wire          litepciedma_reader_splitter_source_payload_last_disable;
reg    [23:0] litepciedma_reader_splitter_source_payload_length = 24'd0;
wire    [7:0] litepciedma_reader_splitter_source_payload_user_id;
wire          litepciedma_reader_splitter_source_ready;
wire          litepciedma_reader_splitter_source_source_first;
wire          litepciedma_reader_splitter_source_source_last;
wire   [31:0] litepciedma_reader_splitter_source_source_payload_address;
wire          litepciedma_reader_splitter_source_source_payload_irq_disable;
wire          litepciedma_reader_splitter_source_source_payload_last_disable;
wire   [23:0] litepciedma_reader_splitter_source_source_payload_length;
wire    [7:0] litepciedma_reader_splitter_source_source_payload_user_id;
reg           litepciedma_reader_splitter_source_source_ready = 1'd0;
wire          litepciedma_reader_splitter_source_source_valid;
reg           litepciedma_reader_splitter_source_valid = 1'd0;
reg           litepciedma_reader_splitter_terminate = 1'd0;
wire   [31:0] litepciedma_reader_table_address_lsb;
wire   [31:0] litepciedma_reader_table_address_msb;
reg    [15:0] litepciedma_reader_table_count = 16'd0;
reg    [15:0] litepciedma_reader_table_index = 16'd0;
wire          litepciedma_reader_table_irq_disable;
wire          litepciedma_reader_table_last_disable;
wire   [23:0] litepciedma_reader_table_length;
reg           litepciedma_reader_table_level_re = 1'd0;
wire    [8:0] litepciedma_reader_table_level_status;
wire          litepciedma_reader_table_level_we;
reg           litepciedma_reader_table_loop_first = 1'd0;
reg           litepciedma_reader_table_loop_prog_n_re = 1'd0;
reg           litepciedma_reader_table_loop_prog_n_storage = 1'd0;
reg           litepciedma_reader_table_loop_status_re = 1'd0;
reg    [31:0] litepciedma_reader_table_loop_status_status = 32'd0;
wire          litepciedma_reader_table_loop_status_we;
reg           litepciedma_reader_table_reset_re = 1'd0;
reg           litepciedma_reader_table_reset_storage = 1'd0;
wire          litepciedma_reader_table_source_source_first;
wire          litepciedma_reader_table_source_source_last;
wire   [31:0] litepciedma_reader_table_source_source_payload_address;
wire          litepciedma_reader_table_source_source_payload_irq_disable;
wire          litepciedma_reader_table_source_source_payload_last_disable;
wire   [23:0] litepciedma_reader_table_source_source_payload_length;
wire          litepciedma_reader_table_source_source_ready;
wire          litepciedma_reader_table_source_source_valid;
reg     [7:0] litepciedma_reader_table_table_consume = 8'd0;
wire          litepciedma_reader_table_table_do_read;
wire          litepciedma_reader_table_table_fifo_in_first;
wire          litepciedma_reader_table_table_fifo_in_last;
wire   [31:0] litepciedma_reader_table_table_fifo_in_payload_address;
wire          litepciedma_reader_table_table_fifo_in_payload_irq_disable;
wire          litepciedma_reader_table_table_fifo_in_payload_last_disable;
wire   [23:0] litepciedma_reader_table_table_fifo_in_payload_length;
wire          litepciedma_reader_table_table_fifo_out_first;
wire          litepciedma_reader_table_table_fifo_out_last;
wire   [31:0] litepciedma_reader_table_table_fifo_out_payload_address;
wire          litepciedma_reader_table_table_fifo_out_payload_irq_disable;
wire          litepciedma_reader_table_table_fifo_out_payload_last_disable;
wire   [23:0] litepciedma_reader_table_table_fifo_out_payload_length;
reg     [8:0] litepciedma_reader_table_table_level = 9'd0;
reg     [7:0] litepciedma_reader_table_table_produce = 8'd0;
wire    [7:0] litepciedma_reader_table_table_rdport_adr;
wire   [59:0] litepciedma_reader_table_table_rdport_dat_r;
reg           litepciedma_reader_table_table_replace = 1'd0;
wire          litepciedma_reader_table_table_reset;
reg           litepciedma_reader_table_table_sink_first = 1'd0;
reg           litepciedma_reader_table_table_sink_last = 1'd0;
reg    [31:0] litepciedma_reader_table_table_sink_payload_address = 32'd0;
reg           litepciedma_reader_table_table_sink_payload_irq_disable = 1'd0;
reg           litepciedma_reader_table_table_sink_payload_last_disable = 1'd0;
reg    [23:0] litepciedma_reader_table_table_sink_payload_length = 24'd0;
wire          litepciedma_reader_table_table_sink_ready;
reg           litepciedma_reader_table_table_sink_valid = 1'd0;
wire          litepciedma_reader_table_table_source_first;
wire          litepciedma_reader_table_table_source_last;
wire   [31:0] litepciedma_reader_table_table_source_payload_address;
wire          litepciedma_reader_table_table_source_payload_irq_disable;
wire          litepciedma_reader_table_table_source_payload_last_disable;
wire   [23:0] litepciedma_reader_table_table_source_payload_length;
wire          litepciedma_reader_table_table_source_ready;
wire          litepciedma_reader_table_table_source_valid;
wire   [59:0] litepciedma_reader_table_table_syncfifo_din;
wire   [59:0] litepciedma_reader_table_table_syncfifo_dout;
wire          litepciedma_reader_table_table_syncfifo_re;
wire          litepciedma_reader_table_table_syncfifo_readable;
wire          litepciedma_reader_table_table_syncfifo_we;
wire          litepciedma_reader_table_table_syncfifo_writable;
reg     [7:0] litepciedma_reader_table_table_wrport_adr = 8'd0;
wire   [59:0] litepciedma_reader_table_table_wrport_dat_r;
wire   [59:0] litepciedma_reader_table_table_wrport_dat_w;
wire          litepciedma_reader_table_table_wrport_we;
reg           litepciedma_reader_table_value_re = 1'd0;
reg    [57:0] litepciedma_reader_table_value_storage = 58'd0;
reg           litepciedma_reader_table_we_re = 1'd0;
reg    [31:0] litepciedma_reader_table_we_storage = 32'd0;
wire          litepciedma_sink_sink_first;
wire          litepciedma_sink_sink_last;
wire   [63:0] litepciedma_sink_sink_payload_data;
wire          litepciedma_sink_sink_ready;
wire          litepciedma_sink_sink_valid;
wire          litepciedma_source_source_first;
wire          litepciedma_source_source_last;
wire   [63:0] litepciedma_source_source_payload_data;
wire          litepciedma_source_source_ready;
wire          litepciedma_source_source_valid;
reg           litepciedma_synchronizer_bypass_re = 1'd0;
reg           litepciedma_synchronizer_bypass_storage = 1'd0;
reg           litepciedma_synchronizer_enable_re = 1'd0;
reg     [1:0] litepciedma_synchronizer_enable_storage = 2'd0;
wire    [1:0] litepciedma_synchronizer_mode;
wire          litepciedma_synchronizer_next_sink_first;
wire          litepciedma_synchronizer_next_sink_last;
wire   [63:0] litepciedma_synchronizer_next_sink_payload_data;
reg           litepciedma_synchronizer_next_sink_ready = 1'd0;
wire          litepciedma_synchronizer_next_sink_valid;
reg           litepciedma_synchronizer_next_source_first = 1'd0;
reg           litepciedma_synchronizer_next_source_last = 1'd0;
reg    [63:0] litepciedma_synchronizer_next_source_payload_data = 64'd0;
wire          litepciedma_synchronizer_next_source_ready;
reg           litepciedma_synchronizer_next_source_valid = 1'd0;
reg           litepciedma_synchronizer_pps = 1'd0;
reg           litepciedma_synchronizer_ready = 1'd1;
wire          litepciedma_synchronizer_sink_first;
wire          litepciedma_synchronizer_sink_last;
wire   [63:0] litepciedma_synchronizer_sink_payload_data;
reg           litepciedma_synchronizer_sink_ready = 1'd0;
wire          litepciedma_synchronizer_sink_valid;
reg           litepciedma_synchronizer_source_first = 1'd0;
reg           litepciedma_synchronizer_source_last = 1'd0;
reg    [63:0] litepciedma_synchronizer_source_payload_data = 64'd0;
wire          litepciedma_synchronizer_source_ready;
reg           litepciedma_synchronizer_source_valid = 1'd0;
reg           litepciedma_synchronizer_synced = 1'd0;
wire          litepciedma_writer_data_conv_converter_sink_first;
wire          litepciedma_writer_data_conv_converter_sink_last;
wire   [63:0] litepciedma_writer_data_conv_converter_sink_payload_data;
wire          litepciedma_writer_data_conv_converter_sink_ready;
wire          litepciedma_writer_data_conv_converter_sink_valid;
wire          litepciedma_writer_data_conv_converter_source_first;
wire          litepciedma_writer_data_conv_converter_source_last;
wire   [63:0] litepciedma_writer_data_conv_converter_source_payload_data;
wire          litepciedma_writer_data_conv_converter_source_payload_valid_token_count;
wire          litepciedma_writer_data_conv_converter_source_ready;
wire          litepciedma_writer_data_conv_converter_source_valid;
wire          litepciedma_writer_data_conv_source_source_first;
wire          litepciedma_writer_data_conv_source_source_last;
wire   [63:0] litepciedma_writer_data_conv_source_source_payload_data;
reg           litepciedma_writer_data_conv_source_source_ready = 1'd0;
wire          litepciedma_writer_data_conv_source_source_valid;
reg     [7:0] litepciedma_writer_data_fifo_consume = 8'd0;
wire          litepciedma_writer_data_fifo_do_read;
wire          litepciedma_writer_data_fifo_fifo_in_first;
wire          litepciedma_writer_data_fifo_fifo_in_last;
wire   [63:0] litepciedma_writer_data_fifo_fifo_in_payload_data;
wire          litepciedma_writer_data_fifo_fifo_out_first;
wire          litepciedma_writer_data_fifo_fifo_out_last;
wire   [63:0] litepciedma_writer_data_fifo_fifo_out_payload_data;
reg     [8:0] litepciedma_writer_data_fifo_level0 = 9'd0;
wire    [8:0] litepciedma_writer_data_fifo_level1;
reg     [7:0] litepciedma_writer_data_fifo_produce = 8'd0;
wire    [7:0] litepciedma_writer_data_fifo_rdport_adr;
wire   [65:0] litepciedma_writer_data_fifo_rdport_dat_r;
wire          litepciedma_writer_data_fifo_rdport_re;
wire          litepciedma_writer_data_fifo_re;
reg           litepciedma_writer_data_fifo_readable = 1'd0;
reg           litepciedma_writer_data_fifo_replace = 1'd0;
reg           litepciedma_writer_data_fifo_reset = 1'd0;
reg           litepciedma_writer_data_fifo_sink_first = 1'd0;
reg           litepciedma_writer_data_fifo_sink_last = 1'd0;
reg    [63:0] litepciedma_writer_data_fifo_sink_payload_data = 64'd0;
wire          litepciedma_writer_data_fifo_sink_ready;
reg           litepciedma_writer_data_fifo_sink_valid = 1'd0;
wire          litepciedma_writer_data_fifo_source_first;
wire          litepciedma_writer_data_fifo_source_last;
wire   [63:0] litepciedma_writer_data_fifo_source_payload_data;
reg           litepciedma_writer_data_fifo_source_ready = 1'd0;
wire          litepciedma_writer_data_fifo_source_valid;
wire   [65:0] litepciedma_writer_data_fifo_syncfifo_din;
wire   [65:0] litepciedma_writer_data_fifo_syncfifo_dout;
wire          litepciedma_writer_data_fifo_syncfifo_re;
wire          litepciedma_writer_data_fifo_syncfifo_readable;
wire          litepciedma_writer_data_fifo_syncfifo_we;
wire          litepciedma_writer_data_fifo_syncfifo_writable;
reg     [7:0] litepciedma_writer_data_fifo_wrport_adr = 8'd0;
wire   [65:0] litepciedma_writer_data_fifo_wrport_dat_r;
wire   [65:0] litepciedma_writer_data_fifo_wrport_dat_w;
wire          litepciedma_writer_data_fifo_wrport_we;
reg           litepciedma_writer_enable_re = 1'd0;
reg     [1:0] litepciedma_writer_enable_storage = 2'd0;
reg           litepciedma_writer_irq = 1'd0;
reg           litepciedma_writer_is_ongoing = 1'd0;
reg    [15:0] litepciedma_writer_monitor_count = 16'd0;
reg    [15:0] litepciedma_writer_monitor_count_latched = 16'd0;
reg           litepciedma_writer_monitor_latch0 = 1'd0;
wire          litepciedma_writer_monitor_latch1;
wire          litepciedma_writer_monitor_latch_latch_r;
reg           litepciedma_writer_monitor_latch_latch_re = 1'd0;
reg           litepciedma_writer_monitor_latch_latch_w = 1'd0;
reg           litepciedma_writer_monitor_latch_latch_we = 1'd0;
reg           litepciedma_writer_monitor_re = 1'd0;
reg           litepciedma_writer_monitor_reset0 = 1'd0;
wire          litepciedma_writer_monitor_reset1;
wire          litepciedma_writer_monitor_reset_reset_r;
reg           litepciedma_writer_monitor_reset_reset_re = 1'd0;
reg           litepciedma_writer_monitor_reset_reset_w = 1'd0;
reg           litepciedma_writer_monitor_reset_reset_we = 1'd0;
wire   [15:0] litepciedma_writer_monitor_status;
wire          litepciedma_writer_monitor_we;
reg    [23:0] litepciedma_writer_req_count = 24'd0;
reg    [23:0] litepciedma_writer_req_count_bufferizeendpoints_fsm_next_value = 24'd0;
reg           litepciedma_writer_req_count_bufferizeendpoints_fsm_next_value_ce = 1'd0;
wire          litepciedma_writer_sink_sink_first;
wire          litepciedma_writer_sink_sink_last;
wire   [63:0] litepciedma_writer_sink_sink_payload_data;
wire          litepciedma_writer_sink_sink_ready;
wire          litepciedma_writer_sink_sink_valid;
reg    [31:0] litepciedma_writer_splitter_desc_id = 32'd0;
reg    [31:0] litepciedma_writer_splitter_desc_id_bufferizeendpoints_resetinserter_next_value2 = 32'd0;
reg           litepciedma_writer_splitter_desc_id_bufferizeendpoints_resetinserter_next_value_ce2 = 1'd0;
reg    [31:0] litepciedma_writer_splitter_desc_length = 32'd0;
reg    [31:0] litepciedma_writer_splitter_desc_length_bufferizeendpoints_resetinserter_next_value1 = 32'd0;
reg           litepciedma_writer_splitter_desc_length_bufferizeendpoints_resetinserter_next_value_ce1 = 1'd0;
reg    [31:0] litepciedma_writer_splitter_desc_offset = 32'd0;
reg    [31:0] litepciedma_writer_splitter_desc_offset_bufferizeendpoints_resetinserter_next_value0 = 32'd0;
reg           litepciedma_writer_splitter_desc_offset_bufferizeendpoints_resetinserter_next_value_ce0 = 1'd0;
reg           litepciedma_writer_splitter_reset = 1'd0;
wire          litepciedma_writer_splitter_sink_first;
wire          litepciedma_writer_splitter_sink_last;
wire   [31:0] litepciedma_writer_splitter_sink_payload_address;
wire          litepciedma_writer_splitter_sink_payload_irq_disable;
wire          litepciedma_writer_splitter_sink_payload_last_disable;
wire   [23:0] litepciedma_writer_splitter_sink_payload_length;
reg           litepciedma_writer_splitter_sink_ready = 1'd0;
wire          litepciedma_writer_splitter_sink_valid;
reg           litepciedma_writer_splitter_source_first = 1'd0;
reg           litepciedma_writer_splitter_source_last = 1'd0;
wire   [31:0] litepciedma_writer_splitter_source_payload_address;
wire          litepciedma_writer_splitter_source_payload_irq_disable;
wire          litepciedma_writer_splitter_source_payload_last_disable;
reg    [23:0] litepciedma_writer_splitter_source_payload_length = 24'd0;
wire    [7:0] litepciedma_writer_splitter_source_payload_user_id;
reg           litepciedma_writer_splitter_source_ready = 1'd0;
reg           litepciedma_writer_splitter_source_valid = 1'd0;
wire          litepciedma_writer_splitter_terminate;
wire   [31:0] litepciedma_writer_table_address_lsb;
wire   [31:0] litepciedma_writer_table_address_msb;
reg    [15:0] litepciedma_writer_table_count = 16'd0;
reg    [15:0] litepciedma_writer_table_index = 16'd0;
wire          litepciedma_writer_table_irq_disable;
wire          litepciedma_writer_table_last_disable;
wire   [23:0] litepciedma_writer_table_length;
reg           litepciedma_writer_table_level_re = 1'd0;
wire    [8:0] litepciedma_writer_table_level_status;
wire          litepciedma_writer_table_level_we;
reg           litepciedma_writer_table_loop_first = 1'd0;
reg           litepciedma_writer_table_loop_prog_n_re = 1'd0;
reg           litepciedma_writer_table_loop_prog_n_storage = 1'd0;
reg           litepciedma_writer_table_loop_status_re = 1'd0;
reg    [31:0] litepciedma_writer_table_loop_status_status = 32'd0;
wire          litepciedma_writer_table_loop_status_we;
reg           litepciedma_writer_table_reset_re = 1'd0;
reg           litepciedma_writer_table_reset_storage = 1'd0;
wire          litepciedma_writer_table_source_source_first;
wire          litepciedma_writer_table_source_source_last;
wire   [31:0] litepciedma_writer_table_source_source_payload_address;
wire          litepciedma_writer_table_source_source_payload_irq_disable;
wire          litepciedma_writer_table_source_source_payload_last_disable;
wire   [23:0] litepciedma_writer_table_source_source_payload_length;
wire          litepciedma_writer_table_source_source_ready;
wire          litepciedma_writer_table_source_source_valid;
reg     [7:0] litepciedma_writer_table_table_consume = 8'd0;
wire          litepciedma_writer_table_table_do_read;
wire          litepciedma_writer_table_table_fifo_in_first;
wire          litepciedma_writer_table_table_fifo_in_last;
wire   [31:0] litepciedma_writer_table_table_fifo_in_payload_address;
wire          litepciedma_writer_table_table_fifo_in_payload_irq_disable;
wire          litepciedma_writer_table_table_fifo_in_payload_last_disable;
wire   [23:0] litepciedma_writer_table_table_fifo_in_payload_length;
wire          litepciedma_writer_table_table_fifo_out_first;
wire          litepciedma_writer_table_table_fifo_out_last;
wire   [31:0] litepciedma_writer_table_table_fifo_out_payload_address;
wire          litepciedma_writer_table_table_fifo_out_payload_irq_disable;
wire          litepciedma_writer_table_table_fifo_out_payload_last_disable;
wire   [23:0] litepciedma_writer_table_table_fifo_out_payload_length;
reg     [8:0] litepciedma_writer_table_table_level = 9'd0;
reg     [7:0] litepciedma_writer_table_table_produce = 8'd0;
wire    [7:0] litepciedma_writer_table_table_rdport_adr;
wire   [59:0] litepciedma_writer_table_table_rdport_dat_r;
reg           litepciedma_writer_table_table_replace = 1'd0;
wire          litepciedma_writer_table_table_reset;
reg           litepciedma_writer_table_table_sink_first = 1'd0;
reg           litepciedma_writer_table_table_sink_last = 1'd0;
reg    [31:0] litepciedma_writer_table_table_sink_payload_address = 32'd0;
reg           litepciedma_writer_table_table_sink_payload_irq_disable = 1'd0;
reg           litepciedma_writer_table_table_sink_payload_last_disable = 1'd0;
reg    [23:0] litepciedma_writer_table_table_sink_payload_length = 24'd0;
wire          litepciedma_writer_table_table_sink_ready;
reg           litepciedma_writer_table_table_sink_valid = 1'd0;
wire          litepciedma_writer_table_table_source_first;
wire          litepciedma_writer_table_table_source_last;
wire   [31:0] litepciedma_writer_table_table_source_payload_address;
wire          litepciedma_writer_table_table_source_payload_irq_disable;
wire          litepciedma_writer_table_table_source_payload_last_disable;
wire   [23:0] litepciedma_writer_table_table_source_payload_length;
wire          litepciedma_writer_table_table_source_ready;
wire          litepciedma_writer_table_table_source_valid;
wire   [59:0] litepciedma_writer_table_table_syncfifo_din;
wire   [59:0] litepciedma_writer_table_table_syncfifo_dout;
wire          litepciedma_writer_table_table_syncfifo_re;
wire          litepciedma_writer_table_table_syncfifo_readable;
wire          litepciedma_writer_table_table_syncfifo_we;
wire          litepciedma_writer_table_table_syncfifo_writable;
reg     [7:0] litepciedma_writer_table_table_wrport_adr = 8'd0;
wire   [59:0] litepciedma_writer_table_table_wrport_dat_r;
wire   [59:0] litepciedma_writer_table_table_wrport_dat_w;
wire          litepciedma_writer_table_table_wrport_we;
reg           litepciedma_writer_table_value_re = 1'd0;
reg    [57:0] litepciedma_writer_table_value_storage = 58'd0;
reg           litepciedma_writer_table_we_re = 1'd0;
reg    [31:0] litepciedma_writer_table_we_storage = 32'd0;
reg           master_sink_first = 1'd0;
reg           master_sink_last = 1'd0;
reg    [31:0] master_sink_payload_adr = 32'd0;
reg     [7:0] master_sink_payload_channel = 8'd0;
reg    [63:0] master_sink_payload_dat = 64'd0;
reg     [9:0] master_sink_payload_len = 10'd0;
reg    [15:0] master_sink_payload_req_id = 16'd0;
reg     [7:0] master_sink_payload_tag = 8'd0;
reg     [7:0] master_sink_payload_user_id = 8'd0;
reg           master_sink_payload_we = 1'd0;
wire          master_sink_ready;
reg           master_sink_valid = 1'd0;
wire          master_source_first;
wire          master_source_last;
wire   [31:0] master_source_payload_adr;
wire    [7:0] master_source_payload_channel;
wire   [15:0] master_source_payload_cmp_id;
wire   [63:0] master_source_payload_dat;
wire          master_source_payload_end;
wire          master_source_payload_err;
wire    [9:0] master_source_payload_len;
wire   [15:0] master_source_payload_req_id;
wire    [7:0] master_source_payload_tag;
wire    [7:0] master_source_payload_user_id;
wire          master_source_ready;
wire          master_source_valid;
wire          packetizer_cmp_sink_first;
wire          packetizer_cmp_sink_last;
wire   [31:0] packetizer_cmp_sink_payload_adr;
wire    [7:0] packetizer_cmp_sink_payload_channel;
wire   [15:0] packetizer_cmp_sink_payload_cmp_id;
wire   [63:0] packetizer_cmp_sink_payload_dat;
wire          packetizer_cmp_sink_payload_end;
wire          packetizer_cmp_sink_payload_err;
wire    [9:0] packetizer_cmp_sink_payload_len;
wire   [15:0] packetizer_cmp_sink_payload_req_id;
wire    [7:0] packetizer_cmp_sink_payload_tag;
wire    [7:0] packetizer_cmp_sink_payload_user_id;
wire          packetizer_cmp_sink_ready;
wire          packetizer_cmp_sink_valid;
reg     [1:0] packetizer_grant = 2'd0;
reg     [7:0] packetizer_header_inserter_3dws_be = 8'd0;
reg           packetizer_header_inserter_3dws_count = 1'd0;
reg           packetizer_header_inserter_3dws_count_litepcietlpheaderinserter64b3dws_next_value = 1'd0;
reg           packetizer_header_inserter_3dws_count_litepcietlpheaderinserter64b3dws_next_value_ce = 1'd0;
reg    [63:0] packetizer_header_inserter_3dws_dat = 64'd0;
reg           packetizer_header_inserter_3dws_last = 1'd0;
reg           packetizer_header_inserter_3dws_sink_first = 1'd0;
reg           packetizer_header_inserter_3dws_sink_last = 1'd0;
reg     [7:0] packetizer_header_inserter_3dws_sink_payload_be = 8'd0;
reg    [63:0] packetizer_header_inserter_3dws_sink_payload_dat = 64'd0;
reg     [1:0] packetizer_header_inserter_3dws_sink_payload_fmt = 2'd0;
reg   [127:0] packetizer_header_inserter_3dws_sink_payload_header = 128'd0;
reg           packetizer_header_inserter_3dws_sink_ready = 1'd0;
reg           packetizer_header_inserter_3dws_sink_valid = 1'd0;
reg           packetizer_header_inserter_3dws_source_first = 1'd0;
reg           packetizer_header_inserter_3dws_source_last = 1'd0;
reg     [7:0] packetizer_header_inserter_3dws_source_payload_be = 8'd0;
reg    [63:0] packetizer_header_inserter_3dws_source_payload_dat = 64'd0;
reg           packetizer_header_inserter_3dws_source_ready = 1'd0;
reg           packetizer_header_inserter_3dws_source_valid = 1'd0;
reg           packetizer_header_inserter_4dws_count = 1'd0;
reg           packetizer_header_inserter_4dws_count_litepcietlpheaderinserter64b4dws_next_value = 1'd0;
reg           packetizer_header_inserter_4dws_count_litepcietlpheaderinserter64b4dws_next_value_ce = 1'd0;
reg           packetizer_header_inserter_4dws_sink_first = 1'd0;
reg           packetizer_header_inserter_4dws_sink_last = 1'd0;
reg     [7:0] packetizer_header_inserter_4dws_sink_payload_be = 8'd0;
reg    [63:0] packetizer_header_inserter_4dws_sink_payload_dat = 64'd0;
reg     [1:0] packetizer_header_inserter_4dws_sink_payload_fmt = 2'd0;
reg   [127:0] packetizer_header_inserter_4dws_sink_payload_header = 128'd0;
reg           packetizer_header_inserter_4dws_sink_ready = 1'd0;
reg           packetizer_header_inserter_4dws_sink_valid = 1'd0;
reg           packetizer_header_inserter_4dws_source_first = 1'd0;
reg           packetizer_header_inserter_4dws_source_last = 1'd0;
reg     [7:0] packetizer_header_inserter_4dws_source_payload_be = 8'd0;
reg    [63:0] packetizer_header_inserter_4dws_source_payload_dat = 64'd0;
reg           packetizer_header_inserter_4dws_source_ready = 1'd0;
reg           packetizer_header_inserter_4dws_source_valid = 1'd0;
reg           packetizer_header_sel = 1'd0;
reg           packetizer_ptm_sink_first = 1'd0;
reg           packetizer_ptm_sink_last = 1'd0;
reg    [63:0] packetizer_ptm_sink_payload_dat = 64'd0;
reg     [9:0] packetizer_ptm_sink_payload_length = 10'd0;
reg    [63:0] packetizer_ptm_sink_payload_master_time = 64'd0;
reg     [7:0] packetizer_ptm_sink_payload_message_code = 8'd0;
reg           packetizer_ptm_sink_payload_request = 1'd0;
reg    [15:0] packetizer_ptm_sink_payload_requester_id = 16'd0;
reg           packetizer_ptm_sink_payload_response = 1'd0;
wire          packetizer_ptm_sink_ready;
reg           packetizer_ptm_sink_valid = 1'd0;
wire          packetizer_req_sink_first;
wire          packetizer_req_sink_last;
wire   [31:0] packetizer_req_sink_payload_adr;
wire    [7:0] packetizer_req_sink_payload_channel;
wire   [63:0] packetizer_req_sink_payload_dat;
wire    [9:0] packetizer_req_sink_payload_len;
wire   [15:0] packetizer_req_sink_payload_req_id;
wire    [7:0] packetizer_req_sink_payload_tag;
wire    [7:0] packetizer_req_sink_payload_user_id;
wire          packetizer_req_sink_payload_we;
wire          packetizer_req_sink_ready;
wire          packetizer_req_sink_valid;
reg     [2:0] packetizer_request = 3'd0;
wire          packetizer_sink_sink_first;
wire          packetizer_sink_sink_last;
wire    [7:0] packetizer_sink_sink_payload_be;
wire   [63:0] packetizer_sink_sink_payload_dat;
wire    [1:0] packetizer_sink_sink_payload_fmt;
wire  [127:0] packetizer_sink_sink_payload_header;
reg           packetizer_sink_sink_ready = 1'd0;
wire          packetizer_sink_sink_valid;
wire          packetizer_source_first;
wire          packetizer_source_last;
reg     [7:0] packetizer_source_payload_be = 8'd0;
reg    [63:0] packetizer_source_payload_dat = 64'd0;
wire          packetizer_source_ready;
reg           packetizer_source_source_first = 1'd0;
reg           packetizer_source_source_last = 1'd0;
reg     [7:0] packetizer_source_source_payload_be = 8'd0;
reg    [63:0] packetizer_source_source_payload_dat = 64'd0;
wire          packetizer_source_source_ready;
reg           packetizer_source_source_valid = 1'd0;
wire          packetizer_source_valid;
reg           packetizer_status0_first = 1'd1;
reg           packetizer_status0_last = 1'd0;
wire          packetizer_status0_ongoing0;
reg           packetizer_status0_ongoing1 = 1'd0;
reg           packetizer_status1_first = 1'd1;
reg           packetizer_status1_last = 1'd0;
wire          packetizer_status1_ongoing0;
reg           packetizer_status1_ongoing1 = 1'd0;
reg           packetizer_status2_first = 1'd1;
reg           packetizer_status2_last = 1'd0;
wire          packetizer_status2_ongoing0;
reg           packetizer_status2_ongoing1 = 1'd0;
wire          packetizer_tlp_cmp_first;
wire          packetizer_tlp_cmp_last;
wire    [1:0] packetizer_tlp_cmp_payload_attr;
wire          packetizer_tlp_cmp_payload_bcm;
reg     [7:0] packetizer_tlp_cmp_payload_be = 8'd0;
wire   [11:0] packetizer_tlp_cmp_payload_byte_count;
wire   [15:0] packetizer_tlp_cmp_payload_completer_id;
wire   [63:0] packetizer_tlp_cmp_payload_dat;
wire          packetizer_tlp_cmp_payload_ep;
reg     [1:0] packetizer_tlp_cmp_payload_fmt = 2'd0;
wire    [9:0] packetizer_tlp_cmp_payload_length;
wire    [6:0] packetizer_tlp_cmp_payload_lower_address;
wire   [15:0] packetizer_tlp_cmp_payload_requester_id;
reg     [2:0] packetizer_tlp_cmp_payload_status = 3'd0;
wire    [7:0] packetizer_tlp_cmp_payload_tag;
wire    [2:0] packetizer_tlp_cmp_payload_tc;
wire          packetizer_tlp_cmp_payload_td;
reg     [4:0] packetizer_tlp_cmp_payload_type = 5'd0;
wire          packetizer_tlp_cmp_ready;
wire          packetizer_tlp_cmp_valid;
wire          packetizer_tlp_ptm_first;
wire          packetizer_tlp_ptm_last;
wire    [1:0] packetizer_tlp_ptm_payload_attr;
reg     [7:0] packetizer_tlp_ptm_payload_be = 8'd0;
reg    [63:0] packetizer_tlp_ptm_payload_dat = 64'd0;
wire          packetizer_tlp_ptm_payload_ep;
reg     [1:0] packetizer_tlp_ptm_payload_fmt = 2'd0;
wire    [9:0] packetizer_tlp_ptm_payload_length;
wire          packetizer_tlp_ptm_payload_ln;
wire   [63:0] packetizer_tlp_ptm_payload_master_time;
wire    [7:0] packetizer_tlp_ptm_payload_message_code;
wire   [15:0] packetizer_tlp_ptm_payload_requester_id;
wire    [2:0] packetizer_tlp_ptm_payload_tc;
wire          packetizer_tlp_ptm_payload_td;
wire          packetizer_tlp_ptm_payload_th;
reg     [4:0] packetizer_tlp_ptm_payload_type = 5'd0;
wire          packetizer_tlp_ptm_ready;
wire          packetizer_tlp_ptm_valid;
wire          packetizer_tlp_raw_cmp_first;
reg   [127:0] packetizer_tlp_raw_cmp_header = 128'd0;
wire          packetizer_tlp_raw_cmp_last;
wire    [7:0] packetizer_tlp_raw_cmp_payload_be;
wire   [63:0] packetizer_tlp_raw_cmp_payload_dat;
wire    [1:0] packetizer_tlp_raw_cmp_payload_fmt;
reg   [127:0] packetizer_tlp_raw_cmp_payload_header = 128'd0;
reg           packetizer_tlp_raw_cmp_ready = 1'd0;
wire          packetizer_tlp_raw_cmp_valid;
reg           packetizer_tlp_raw_first = 1'd0;
reg           packetizer_tlp_raw_last = 1'd0;
reg     [7:0] packetizer_tlp_raw_payload_be = 8'd0;
reg    [63:0] packetizer_tlp_raw_payload_dat = 64'd0;
reg     [1:0] packetizer_tlp_raw_payload_fmt = 2'd0;
reg   [127:0] packetizer_tlp_raw_payload_header = 128'd0;
wire          packetizer_tlp_raw_ptm_first;
reg   [127:0] packetizer_tlp_raw_ptm_header = 128'd0;
wire          packetizer_tlp_raw_ptm_last;
wire    [7:0] packetizer_tlp_raw_ptm_payload_be;
wire   [63:0] packetizer_tlp_raw_ptm_payload_dat;
wire    [1:0] packetizer_tlp_raw_ptm_payload_fmt;
reg   [127:0] packetizer_tlp_raw_ptm_payload_header = 128'd0;
reg           packetizer_tlp_raw_ptm_ready = 1'd0;
wire          packetizer_tlp_raw_ptm_valid;
wire          packetizer_tlp_raw_ready;
wire          packetizer_tlp_raw_req_first;
reg   [127:0] packetizer_tlp_raw_req_header = 128'd0;
wire          packetizer_tlp_raw_req_last;
wire    [7:0] packetizer_tlp_raw_req_payload_be;
wire   [63:0] packetizer_tlp_raw_req_payload_dat;
wire    [1:0] packetizer_tlp_raw_req_payload_fmt;
reg   [127:0] packetizer_tlp_raw_req_payload_header = 128'd0;
reg           packetizer_tlp_raw_req_ready = 1'd0;
wire          packetizer_tlp_raw_req_valid;
reg           packetizer_tlp_raw_valid = 1'd0;
wire          packetizer_tlp_req_first;
wire          packetizer_tlp_req_last;
wire   [63:0] packetizer_tlp_req_payload_address;
wire    [1:0] packetizer_tlp_req_payload_attr;
reg     [7:0] packetizer_tlp_req_payload_be = 8'd0;
wire   [63:0] packetizer_tlp_req_payload_dat;
wire          packetizer_tlp_req_payload_ep;
wire    [3:0] packetizer_tlp_req_payload_first_be;
reg     [1:0] packetizer_tlp_req_payload_fmt = 2'd0;
reg     [3:0] packetizer_tlp_req_payload_last_be = 4'd0;
wire    [9:0] packetizer_tlp_req_payload_length;
wire   [15:0] packetizer_tlp_req_payload_requester_id;
wire    [7:0] packetizer_tlp_req_payload_tag;
wire    [2:0] packetizer_tlp_req_payload_tc;
wire          packetizer_tlp_req_payload_td;
wire    [4:0] packetizer_tlp_req_payload_type;
wire          packetizer_tlp_req_ready;
wire          packetizer_tlp_req_valid;
wire          pcie_clk;
reg    [63:0] pcie_msi_clear = 64'd0;
wire   [63:0] pcie_msi_enable;
reg           pcie_msi_enable_re = 1'd0;
reg    [63:0] pcie_msi_enable_storage = 64'd0;
reg    [63:0] pcie_msi_irqs = 64'd0;
reg     [5:0] pcie_msi_msix_num = 6'd0;
reg           pcie_msi_msix_ready = 1'd0;
reg           pcie_msi_msix_valid = 1'd0;
reg           pcie_msi_pba_re = 1'd0;
wire   [63:0] pcie_msi_pba_status;
wire          pcie_msi_pba_we;
wire          pcie_msi_sink_first;
wire          pcie_msi_sink_last;
wire   [31:0] pcie_msi_sink_payload_adr;
wire    [7:0] pcie_msi_sink_payload_channel;
wire   [63:0] pcie_msi_sink_payload_dat;
wire    [9:0] pcie_msi_sink_payload_len;
wire   [15:0] pcie_msi_sink_payload_req_id;
wire    [7:0] pcie_msi_sink_payload_tag;
reg     [7:0] pcie_msi_sink_payload_user_id = 8'd0;
reg           pcie_msi_sink_payload_we = 1'd0;
reg           pcie_msi_sink_ready = 1'd0;
reg           pcie_msi_sink_valid = 1'd0;
reg           pcie_msi_source_first = 1'd0;
reg           pcie_msi_source_last = 1'd0;
reg    [31:0] pcie_msi_source_payload_adr = 32'd0;
reg     [7:0] pcie_msi_source_payload_channel = 8'd0;
reg    [15:0] pcie_msi_source_payload_cmp_id = 16'd0;
reg    [63:0] pcie_msi_source_payload_dat = 64'd0;
reg           pcie_msi_source_payload_end = 1'd0;
reg           pcie_msi_source_payload_err = 1'd0;
reg     [9:0] pcie_msi_source_payload_len = 10'd0;
reg    [15:0] pcie_msi_source_payload_req_id = 16'd0;
reg     [7:0] pcie_msi_source_payload_tag = 8'd0;
reg     [7:0] pcie_msi_source_payload_user_id = 8'd0;
reg           pcie_msi_source_ready = 1'd0;
reg           pcie_msi_source_valid = 1'd0;
reg     [5:0] pcie_msi_table_port_adr = 6'd0;
wire  [127:0] pcie_msi_table_port_dat_r;
reg           pcie_msi_table_port_re = 1'd0;
reg    [63:0] pcie_msi_vector = 64'd0;
wire  [105:0] pcie_ptm_sniffer_cdc_cdc_asyncfifo_din;
wire  [105:0] pcie_ptm_sniffer_cdc_cdc_asyncfifo_dout;
wire          pcie_ptm_sniffer_cdc_cdc_asyncfifo_re;
wire          pcie_ptm_sniffer_cdc_cdc_asyncfifo_readable;
wire          pcie_ptm_sniffer_cdc_cdc_asyncfifo_we;
wire          pcie_ptm_sniffer_cdc_cdc_asyncfifo_writable;
wire    [2:0] pcie_ptm_sniffer_cdc_cdc_consume_wdomain;
wire          pcie_ptm_sniffer_cdc_cdc_fifo_in_first;
wire          pcie_ptm_sniffer_cdc_cdc_fifo_in_last;
wire   [31:0] pcie_ptm_sniffer_cdc_cdc_fifo_in_payload_link_delay;
wire   [63:0] pcie_ptm_sniffer_cdc_cdc_fifo_in_payload_master_time;
wire    [7:0] pcie_ptm_sniffer_cdc_cdc_fifo_in_payload_message_code;
wire          pcie_ptm_sniffer_cdc_cdc_fifo_out_first;
wire          pcie_ptm_sniffer_cdc_cdc_fifo_out_last;
wire   [31:0] pcie_ptm_sniffer_cdc_cdc_fifo_out_payload_link_delay;
wire   [63:0] pcie_ptm_sniffer_cdc_cdc_fifo_out_payload_master_time;
wire    [7:0] pcie_ptm_sniffer_cdc_cdc_fifo_out_payload_message_code;
wire          pcie_ptm_sniffer_cdc_cdc_graycounter0_ce;
(* dont_touch = "true" *)
reg     [2:0] pcie_ptm_sniffer_cdc_cdc_graycounter0_q = 3'd0;
reg     [2:0] pcie_ptm_sniffer_cdc_cdc_graycounter0_q_binary = 3'd0;
wire    [2:0] pcie_ptm_sniffer_cdc_cdc_graycounter0_q_next;
reg     [2:0] pcie_ptm_sniffer_cdc_cdc_graycounter0_q_next_binary = 3'd0;
wire          pcie_ptm_sniffer_cdc_cdc_graycounter1_ce;
(* dont_touch = "true" *)
reg     [2:0] pcie_ptm_sniffer_cdc_cdc_graycounter1_q = 3'd0;
reg     [2:0] pcie_ptm_sniffer_cdc_cdc_graycounter1_q_binary = 3'd0;
wire    [2:0] pcie_ptm_sniffer_cdc_cdc_graycounter1_q_next;
reg     [2:0] pcie_ptm_sniffer_cdc_cdc_graycounter1_q_next_binary = 3'd0;
wire    [2:0] pcie_ptm_sniffer_cdc_cdc_produce_rdomain;
wire    [1:0] pcie_ptm_sniffer_cdc_cdc_rdport_adr;
wire  [105:0] pcie_ptm_sniffer_cdc_cdc_rdport_dat_r;
wire          pcie_ptm_sniffer_cdc_cdc_sink_first;
wire          pcie_ptm_sniffer_cdc_cdc_sink_last;
wire   [31:0] pcie_ptm_sniffer_cdc_cdc_sink_payload_link_delay;
wire   [63:0] pcie_ptm_sniffer_cdc_cdc_sink_payload_master_time;
wire    [7:0] pcie_ptm_sniffer_cdc_cdc_sink_payload_message_code;
wire          pcie_ptm_sniffer_cdc_cdc_sink_ready;
wire          pcie_ptm_sniffer_cdc_cdc_sink_valid;
wire          pcie_ptm_sniffer_cdc_cdc_source_first;
wire          pcie_ptm_sniffer_cdc_cdc_source_last;
wire   [31:0] pcie_ptm_sniffer_cdc_cdc_source_payload_link_delay;
wire   [63:0] pcie_ptm_sniffer_cdc_cdc_source_payload_master_time;
wire    [7:0] pcie_ptm_sniffer_cdc_cdc_source_payload_message_code;
wire          pcie_ptm_sniffer_cdc_cdc_source_ready;
wire          pcie_ptm_sniffer_cdc_cdc_source_valid;
wire    [1:0] pcie_ptm_sniffer_cdc_cdc_wrport_adr;
wire  [105:0] pcie_ptm_sniffer_cdc_cdc_wrport_dat_r;
wire  [105:0] pcie_ptm_sniffer_cdc_cdc_wrport_dat_w;
wire          pcie_ptm_sniffer_cdc_cdc_wrport_we;
reg           pcie_ptm_sniffer_cdc_sink_sink_first = 1'd0;
reg           pcie_ptm_sniffer_cdc_sink_sink_last = 1'd0;
wire   [31:0] pcie_ptm_sniffer_cdc_sink_sink_payload_link_delay;
reg    [63:0] pcie_ptm_sniffer_cdc_sink_sink_payload_master_time = 64'd0;
wire    [7:0] pcie_ptm_sniffer_cdc_sink_sink_payload_message_code;
wire          pcie_ptm_sniffer_cdc_sink_sink_ready;
wire          pcie_ptm_sniffer_cdc_sink_sink_valid;
wire          pcie_ptm_sniffer_cdc_source_source_first;
wire          pcie_ptm_sniffer_cdc_source_source_last;
wire   [31:0] pcie_ptm_sniffer_cdc_source_source_payload_link_delay;
wire   [63:0] pcie_ptm_sniffer_cdc_source_source_payload_master_time;
wire    [7:0] pcie_ptm_sniffer_cdc_source_source_payload_message_code;
wire          pcie_ptm_sniffer_cdc_source_source_ready;
wire          pcie_ptm_sniffer_cdc_source_source_valid;
wire          pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_first;
wire          pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_last;
reg     [7:0] pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_payload_be = 8'd0;
reg    [63:0] pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_payload_dat = 64'd0;
wire    [1:0] pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_payload_fmt;
wire    [4:0] pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_payload_type;
reg           pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_ready = 1'd0;
wire          pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_valid;
reg           pcie_ptm_sniffer_litepcietlpdepacketizer_dispatcher_first = 1'd1;
reg           pcie_ptm_sniffer_litepcietlpdepacketizer_dispatcher_last = 1'd0;
wire          pcie_ptm_sniffer_litepcietlpdepacketizer_dispatcher_ongoing0;
reg           pcie_ptm_sniffer_litepcietlpdepacketizer_dispatcher_ongoing1 = 1'd0;
reg           pcie_ptm_sniffer_litepcietlpdepacketizer_dispatcher_sel0 = 1'd0;
reg           pcie_ptm_sniffer_litepcietlpdepacketizer_dispatcher_sel1 = 1'd0;
reg           pcie_ptm_sniffer_litepcietlpdepacketizer_dispatcher_sel_ongoing = 1'd0;
reg           pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint0_first = 1'd0;
reg           pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint0_last = 1'd0;
reg     [7:0] pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint0_payload_be = 8'd0;
reg    [63:0] pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint0_payload_dat = 64'd0;
reg     [1:0] pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint0_payload_fmt = 2'd0;
reg     [4:0] pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint0_payload_type = 5'd0;
wire          pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint0_ready;
reg           pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint0_valid = 1'd0;
reg           pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint1_first = 1'd0;
reg           pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint1_last = 1'd0;
reg     [7:0] pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint1_payload_be = 8'd0;
reg    [63:0] pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint1_payload_dat = 64'd0;
reg     [1:0] pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint1_payload_fmt = 2'd0;
reg     [4:0] pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint1_payload_type = 5'd0;
wire          pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint1_ready;
reg           pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint1_valid = 1'd0;
reg     [7:0] pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_be = 8'd0;
reg           pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_count = 1'd0;
reg           pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_count_clockdomainsrenamer2_next_value2 = 1'd0;
reg           pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_count_clockdomainsrenamer2_next_value_ce2 = 1'd0;
reg    [63:0] pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_dat = 64'd0;
reg           pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_first = 1'd0;
reg           pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_first_clockdomainsrenamer2_next_value0 = 1'd0;
reg           pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_first_clockdomainsrenamer2_next_value_ce0 = 1'd0;
reg           pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_last = 1'd0;
reg           pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_last_clockdomainsrenamer2_next_value1 = 1'd0;
reg           pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_last_clockdomainsrenamer2_next_value_ce1 = 1'd0;
wire          pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_sink_first;
wire          pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_sink_last;
wire    [7:0] pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_sink_payload_be;
wire   [63:0] pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_sink_payload_dat;
reg           pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_sink_ready = 1'd0;
wire          pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_sink_valid;
reg           pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_first = 1'd0;
reg           pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_last = 1'd0;
reg     [7:0] pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_payload_be = 8'd0;
reg    [63:0] pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_payload_dat = 64'd0;
reg   [127:0] pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_payload_header = 128'd0;
wire          pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_ready;
reg           pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_valid = 1'd0;
wire          pcie_ptm_sniffer_litepcietlpdepacketizer_ptm_source_first;
wire          pcie_ptm_sniffer_litepcietlpdepacketizer_ptm_source_last;
wire   [63:0] pcie_ptm_sniffer_litepcietlpdepacketizer_ptm_source_payload_dat;
wire    [9:0] pcie_ptm_sniffer_litepcietlpdepacketizer_ptm_source_payload_length;
wire   [63:0] pcie_ptm_sniffer_litepcietlpdepacketizer_ptm_source_payload_master_time;
wire    [7:0] pcie_ptm_sniffer_litepcietlpdepacketizer_ptm_source_payload_message_code;
wire   [15:0] pcie_ptm_sniffer_litepcietlpdepacketizer_ptm_source_payload_requester_id;
wire          pcie_ptm_sniffer_litepcietlpdepacketizer_ptm_source_ready;
wire          pcie_ptm_sniffer_litepcietlpdepacketizer_ptm_source_valid;
wire          pcie_ptm_sniffer_litepcietlpdepacketizer_sink_sink_first;
wire          pcie_ptm_sniffer_litepcietlpdepacketizer_sink_sink_last;
wire    [7:0] pcie_ptm_sniffer_litepcietlpdepacketizer_sink_sink_payload_be;
wire   [63:0] pcie_ptm_sniffer_litepcietlpdepacketizer_sink_sink_payload_dat;
wire          pcie_ptm_sniffer_litepcietlpdepacketizer_sink_sink_ready;
wire          pcie_ptm_sniffer_litepcietlpdepacketizer_sink_sink_valid;
wire          pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_first;
wire          pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_last;
wire    [1:0] pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_payload_attr;
wire    [7:0] pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_payload_be;
wire   [63:0] pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_payload_dat;
wire          pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_payload_ep;
reg     [1:0] pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_payload_fmt = 2'd0;
wire    [9:0] pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_payload_length;
wire          pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_payload_ln;
wire   [63:0] pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_payload_master_time;
wire    [7:0] pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_payload_message_code;
wire   [15:0] pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_payload_requester_id;
wire    [2:0] pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_payload_tc;
wire          pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_payload_td;
wire          pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_payload_th;
reg     [4:0] pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_payload_type = 5'd0;
wire          pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_ready;
wire          pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_valid;
wire   [37:0] pcie_ptm_sniffer_rawdatapath_cdc_asyncfifo_din;
wire   [37:0] pcie_ptm_sniffer_rawdatapath_cdc_asyncfifo_dout;
wire          pcie_ptm_sniffer_rawdatapath_cdc_asyncfifo_re;
wire          pcie_ptm_sniffer_rawdatapath_cdc_asyncfifo_readable;
wire          pcie_ptm_sniffer_rawdatapath_cdc_asyncfifo_we;
wire          pcie_ptm_sniffer_rawdatapath_cdc_asyncfifo_writable;
wire    [3:0] pcie_ptm_sniffer_rawdatapath_cdc_consume_wdomain;
reg    [37:0] pcie_ptm_sniffer_rawdatapath_cdc_dout = 38'd0;
wire          pcie_ptm_sniffer_rawdatapath_cdc_fifo_in_first;
wire          pcie_ptm_sniffer_rawdatapath_cdc_fifo_in_last;
wire    [3:0] pcie_ptm_sniffer_rawdatapath_cdc_fifo_in_payload_ctrl;
wire   [31:0] pcie_ptm_sniffer_rawdatapath_cdc_fifo_in_payload_data;
wire          pcie_ptm_sniffer_rawdatapath_cdc_fifo_out_first;
wire          pcie_ptm_sniffer_rawdatapath_cdc_fifo_out_last;
wire    [3:0] pcie_ptm_sniffer_rawdatapath_cdc_fifo_out_payload_ctrl;
wire   [31:0] pcie_ptm_sniffer_rawdatapath_cdc_fifo_out_payload_data;
wire          pcie_ptm_sniffer_rawdatapath_cdc_graycounter0_ce;
(* dont_touch = "true" *)
reg     [3:0] pcie_ptm_sniffer_rawdatapath_cdc_graycounter0_q = 4'd0;
reg     [3:0] pcie_ptm_sniffer_rawdatapath_cdc_graycounter0_q_binary = 4'd0;
wire    [3:0] pcie_ptm_sniffer_rawdatapath_cdc_graycounter0_q_next;
reg     [3:0] pcie_ptm_sniffer_rawdatapath_cdc_graycounter0_q_next_binary = 4'd0;
wire          pcie_ptm_sniffer_rawdatapath_cdc_graycounter1_ce;
(* dont_touch = "true" *)
reg     [3:0] pcie_ptm_sniffer_rawdatapath_cdc_graycounter1_q = 4'd0;
reg     [3:0] pcie_ptm_sniffer_rawdatapath_cdc_graycounter1_q_binary = 4'd0;
wire    [3:0] pcie_ptm_sniffer_rawdatapath_cdc_graycounter1_q_next;
reg     [3:0] pcie_ptm_sniffer_rawdatapath_cdc_graycounter1_q_next_binary = 4'd0;
wire    [3:0] pcie_ptm_sniffer_rawdatapath_cdc_produce_rdomain;
wire    [2:0] pcie_ptm_sniffer_rawdatapath_cdc_rdport_adr;
wire   [37:0] pcie_ptm_sniffer_rawdatapath_cdc_rdport_dat_r;
wire          pcie_ptm_sniffer_rawdatapath_cdc_re;
reg           pcie_ptm_sniffer_rawdatapath_cdc_readable = 1'd0;
wire          pcie_ptm_sniffer_rawdatapath_cdc_sink_first;
wire          pcie_ptm_sniffer_rawdatapath_cdc_sink_last;
wire    [3:0] pcie_ptm_sniffer_rawdatapath_cdc_sink_payload_ctrl;
wire   [31:0] pcie_ptm_sniffer_rawdatapath_cdc_sink_payload_data;
wire          pcie_ptm_sniffer_rawdatapath_cdc_sink_ready;
wire          pcie_ptm_sniffer_rawdatapath_cdc_sink_valid;
wire          pcie_ptm_sniffer_rawdatapath_cdc_source_first;
wire          pcie_ptm_sniffer_rawdatapath_cdc_source_last;
wire    [3:0] pcie_ptm_sniffer_rawdatapath_cdc_source_payload_ctrl;
wire   [31:0] pcie_ptm_sniffer_rawdatapath_cdc_source_payload_data;
wire          pcie_ptm_sniffer_rawdatapath_cdc_source_ready;
wire          pcie_ptm_sniffer_rawdatapath_cdc_source_valid;
wire    [2:0] pcie_ptm_sniffer_rawdatapath_cdc_wrport_adr;
wire   [37:0] pcie_ptm_sniffer_rawdatapath_cdc_wrport_dat_r;
wire   [37:0] pcie_ptm_sniffer_rawdatapath_cdc_wrport_dat_w;
wire          pcie_ptm_sniffer_rawdatapath_cdc_wrport_we;
wire          pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_pipe_valid_sink_first;
wire          pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_pipe_valid_sink_last;
wire    [1:0] pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_pipe_valid_sink_payload_ctrl;
wire   [15:0] pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_pipe_valid_sink_payload_data;
wire          pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_pipe_valid_sink_ready;
wire          pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_pipe_valid_sink_valid;
reg           pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_pipe_valid_source_first = 1'd0;
reg           pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_pipe_valid_source_last = 1'd0;
reg     [1:0] pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_pipe_valid_source_payload_ctrl = 2'd0;
reg    [15:0] pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_pipe_valid_source_payload_data = 16'd0;
wire          pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_pipe_valid_source_ready;
reg           pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_pipe_valid_source_valid = 1'd0;
wire          pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_sink_sink_first;
wire          pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_sink_sink_last;
wire    [1:0] pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_sink_sink_payload_ctrl;
wire   [15:0] pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_sink_sink_payload_data;
wire          pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_sink_sink_ready;
wire          pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_sink_sink_valid;
wire          pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_source_source_first;
wire          pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_source_source_last;
wire    [1:0] pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_source_source_payload_ctrl;
wire   [15:0] pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_source_source_payload_data;
wire          pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_source_source_ready;
wire          pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_source_source_valid;
reg           pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_demux = 1'd0;
wire          pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_load_part;
wire          pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_sink_first;
wire          pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_sink_last;
wire   [17:0] pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_sink_payload_data;
wire          pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_sink_ready;
wire          pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_sink_valid;
reg           pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_source_first = 1'd0;
reg           pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_source_last = 1'd0;
reg    [35:0] pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_source_payload_data = 36'd0;
reg     [1:0] pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_source_payload_valid_token_count = 2'd0;
wire          pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_source_ready;
wire          pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_source_valid;
reg           pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_strobe_all = 1'd0;
wire          pcie_ptm_sniffer_rawdatapath_converter_strideconverter_sink_first;
wire          pcie_ptm_sniffer_rawdatapath_converter_strideconverter_sink_last;
wire    [1:0] pcie_ptm_sniffer_rawdatapath_converter_strideconverter_sink_payload_ctrl;
wire   [15:0] pcie_ptm_sniffer_rawdatapath_converter_strideconverter_sink_payload_data;
wire          pcie_ptm_sniffer_rawdatapath_converter_strideconverter_sink_ready;
wire          pcie_ptm_sniffer_rawdatapath_converter_strideconverter_sink_valid;
wire          pcie_ptm_sniffer_rawdatapath_converter_strideconverter_source_first;
wire          pcie_ptm_sniffer_rawdatapath_converter_strideconverter_source_last;
reg     [3:0] pcie_ptm_sniffer_rawdatapath_converter_strideconverter_source_payload_ctrl = 4'd0;
reg    [31:0] pcie_ptm_sniffer_rawdatapath_converter_strideconverter_source_payload_data = 32'd0;
wire          pcie_ptm_sniffer_rawdatapath_converter_strideconverter_source_ready;
wire          pcie_ptm_sniffer_rawdatapath_converter_strideconverter_source_source_first;
wire          pcie_ptm_sniffer_rawdatapath_converter_strideconverter_source_source_last;
wire   [35:0] pcie_ptm_sniffer_rawdatapath_converter_strideconverter_source_source_payload_data;
wire          pcie_ptm_sniffer_rawdatapath_converter_strideconverter_source_source_ready;
wire          pcie_ptm_sniffer_rawdatapath_converter_strideconverter_source_source_valid;
wire          pcie_ptm_sniffer_rawdatapath_converter_strideconverter_source_valid;
reg           pcie_ptm_sniffer_rawdatapath_sink_sink_first = 1'd0;
reg           pcie_ptm_sniffer_rawdatapath_sink_sink_last = 1'd0;
wire    [1:0] pcie_ptm_sniffer_rawdatapath_sink_sink_payload_ctrl;
wire   [15:0] pcie_ptm_sniffer_rawdatapath_sink_sink_payload_data;
wire          pcie_ptm_sniffer_rawdatapath_sink_sink_ready;
wire          pcie_ptm_sniffer_rawdatapath_sink_sink_valid;
wire          pcie_ptm_sniffer_rawdatapath_source_source_first;
wire          pcie_ptm_sniffer_rawdatapath_source_source_last;
wire    [3:0] pcie_ptm_sniffer_rawdatapath_source_source_payload_ctrl;
wire   [31:0] pcie_ptm_sniffer_rawdatapath_source_source_payload_data;
wire          pcie_ptm_sniffer_rawdatapath_source_source_ready;
wire          pcie_ptm_sniffer_rawdatapath_source_source_valid;
wire          pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_pipe_valid_sink_first;
wire          pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_pipe_valid_sink_last;
wire    [3:0] pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_pipe_valid_sink_payload_ctrl;
wire   [31:0] pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_pipe_valid_sink_payload_data;
wire          pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_pipe_valid_sink_ready;
wire          pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_pipe_valid_sink_valid;
reg           pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_pipe_valid_source_first = 1'd0;
reg           pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_pipe_valid_source_last = 1'd0;
reg     [3:0] pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_pipe_valid_source_payload_ctrl = 4'd0;
reg    [31:0] pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_pipe_valid_source_payload_data = 32'd0;
wire          pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_pipe_valid_source_ready;
reg           pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_pipe_valid_source_valid = 1'd0;
wire          pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_sink_sink_first;
wire          pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_sink_sink_last;
wire    [3:0] pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_sink_sink_payload_ctrl;
wire   [31:0] pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_sink_sink_payload_data;
wire          pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_sink_sink_ready;
wire          pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_sink_sink_valid;
wire          pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_source_source_first;
wire          pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_source_source_last;
wire    [3:0] pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_source_source_payload_ctrl;
wire   [31:0] pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_source_source_payload_data;
wire          pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_source_source_ready;
wire          pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_source_source_valid;
reg     [1:0] pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_alignment = 2'd0;
reg     [1:0] pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_alignment_d = 2'd0;
reg           pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_enable = 1'd1;
wire          pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_pipe_valid_sink_first;
wire          pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_pipe_valid_sink_last;
wire    [3:0] pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_pipe_valid_sink_payload_ctrl;
wire   [31:0] pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_pipe_valid_sink_payload_data;
wire          pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_pipe_valid_sink_ready;
wire          pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_pipe_valid_sink_valid;
reg           pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_pipe_valid_source_first = 1'd0;
reg           pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_pipe_valid_source_last = 1'd0;
reg     [3:0] pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_pipe_valid_source_payload_ctrl = 4'd0;
reg    [31:0] pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_pipe_valid_source_payload_data = 32'd0;
wire          pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_pipe_valid_source_ready;
reg           pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_pipe_valid_source_valid = 1'd0;
wire          pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_first;
wire          pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_last;
wire    [3:0] pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_payload_ctrl;
wire   [31:0] pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_payload_data;
wire          pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_ready;
wire          pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_sink_first;
wire          pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_sink_last;
wire    [3:0] pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_sink_payload_ctrl;
wire   [31:0] pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_sink_payload_data;
wire          pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_sink_ready;
wire          pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_sink_valid;
wire          pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_valid;
reg           pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_source_first = 1'd0;
reg           pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_source_last = 1'd0;
reg     [3:0] pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_source_payload_ctrl = 4'd0;
reg    [31:0] pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_source_payload_data = 32'd0;
wire          pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_source_ready;
wire          pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_source_source_first;
wire          pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_source_source_last;
wire    [3:0] pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_source_source_payload_ctrl;
wire   [31:0] pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_source_source_payload_data;
wire          pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_source_source_ready;
wire          pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_source_source_valid;
wire          pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_source_valid;
reg           pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_update = 1'd0;
reg           pcie_ptm_sniffer_rawdescrambler_enable = 1'd1;
wire          pcie_ptm_sniffer_rawdescrambler_scrambler_ce;
reg    [15:0] pcie_ptm_sniffer_rawdescrambler_scrambler_cur = 16'd65535;
wire          pcie_ptm_sniffer_rawdescrambler_scrambler_enable;
reg    [15:0] pcie_ptm_sniffer_rawdescrambler_scrambler_new = 16'd0;
reg           pcie_ptm_sniffer_rawdescrambler_scrambler_reset = 1'd0;
wire          pcie_ptm_sniffer_rawdescrambler_scrambler_sink_first;
wire          pcie_ptm_sniffer_rawdescrambler_scrambler_sink_last;
wire    [3:0] pcie_ptm_sniffer_rawdescrambler_scrambler_sink_payload_ctrl;
wire   [31:0] pcie_ptm_sniffer_rawdescrambler_scrambler_sink_payload_data;
wire          pcie_ptm_sniffer_rawdescrambler_scrambler_sink_ready;
wire          pcie_ptm_sniffer_rawdescrambler_scrambler_sink_valid;
wire          pcie_ptm_sniffer_rawdescrambler_scrambler_source_first;
wire          pcie_ptm_sniffer_rawdescrambler_scrambler_source_last;
wire    [3:0] pcie_ptm_sniffer_rawdescrambler_scrambler_source_payload_ctrl;
reg    [31:0] pcie_ptm_sniffer_rawdescrambler_scrambler_source_payload_data = 32'd0;
wire          pcie_ptm_sniffer_rawdescrambler_scrambler_source_ready;
wire          pcie_ptm_sniffer_rawdescrambler_scrambler_source_valid;
reg    [31:0] pcie_ptm_sniffer_rawdescrambler_scrambler_value = 32'd0;
wire          pcie_ptm_sniffer_rawdescrambler_sink_sink_first;
wire          pcie_ptm_sniffer_rawdescrambler_sink_sink_last;
wire    [3:0] pcie_ptm_sniffer_rawdescrambler_sink_sink_payload_ctrl;
wire   [31:0] pcie_ptm_sniffer_rawdescrambler_sink_sink_payload_data;
wire          pcie_ptm_sniffer_rawdescrambler_sink_sink_ready;
wire          pcie_ptm_sniffer_rawdescrambler_sink_sink_valid;
wire          pcie_ptm_sniffer_rawdescrambler_source_source_first;
wire          pcie_ptm_sniffer_rawdescrambler_source_source_last;
wire    [3:0] pcie_ptm_sniffer_rawdescrambler_source_source_payload_ctrl;
wire   [31:0] pcie_ptm_sniffer_rawdescrambler_source_source_payload_data;
wire          pcie_ptm_sniffer_rawdescrambler_source_source_ready;
wire          pcie_ptm_sniffer_rawdescrambler_source_source_valid;
wire          pcie_ptm_sniffer_source_source_first;
wire          pcie_ptm_sniffer_source_source_last;
wire   [31:0] pcie_ptm_sniffer_source_source_payload_link_delay;
wire   [63:0] pcie_ptm_sniffer_source_source_payload_master_time;
wire    [7:0] pcie_ptm_sniffer_source_source_payload_message_code;
wire          pcie_ptm_sniffer_source_source_ready;
wire          pcie_ptm_sniffer_source_source_valid;
reg     [1:0] pcie_ptm_sniffer_tlpaligner_alignment = 2'd0;
reg     [1:0] pcie_ptm_sniffer_tlpaligner_alignment_clockdomainsrenamer0_next_value0 = 2'd0;
reg           pcie_ptm_sniffer_tlpaligner_alignment_clockdomainsrenamer0_next_value_ce0 = 1'd0;
reg           pcie_ptm_sniffer_tlpaligner_first = 1'd0;
reg           pcie_ptm_sniffer_tlpaligner_first_clockdomainsrenamer0_next_value1 = 1'd0;
reg           pcie_ptm_sniffer_tlpaligner_first_clockdomainsrenamer0_next_value_ce1 = 1'd0;
reg     [3:0] pcie_ptm_sniffer_tlpaligner_sink_ctrl_d = 4'd0;
reg     [3:0] pcie_ptm_sniffer_tlpaligner_sink_ctrl_dd = 4'd0;
reg    [31:0] pcie_ptm_sniffer_tlpaligner_sink_data_d = 32'd0;
reg    [31:0] pcie_ptm_sniffer_tlpaligner_sink_data_dd = 32'd0;
wire          pcie_ptm_sniffer_tlpaligner_sink_first;
wire          pcie_ptm_sniffer_tlpaligner_sink_last;
wire    [3:0] pcie_ptm_sniffer_tlpaligner_sink_payload_ctrl;
wire   [31:0] pcie_ptm_sniffer_tlpaligner_sink_payload_data;
wire          pcie_ptm_sniffer_tlpaligner_sink_ready;
wire          pcie_ptm_sniffer_tlpaligner_sink_valid;
reg           pcie_ptm_sniffer_tlpaligner_source_first = 1'd0;
reg           pcie_ptm_sniffer_tlpaligner_source_last = 1'd0;
reg     [3:0] pcie_ptm_sniffer_tlpaligner_source_payload_ctrl = 4'd0;
reg    [31:0] pcie_ptm_sniffer_tlpaligner_source_payload_data = 32'd0;
wire          pcie_ptm_sniffer_tlpaligner_source_ready;
reg           pcie_ptm_sniffer_tlpaligner_source_valid = 1'd0;
wire          pcie_ptm_sniffer_tlpendiannessswap_sink_first;
wire          pcie_ptm_sniffer_tlpendiannessswap_sink_last;
wire    [3:0] pcie_ptm_sniffer_tlpendiannessswap_sink_payload_ctrl;
wire   [31:0] pcie_ptm_sniffer_tlpendiannessswap_sink_payload_data;
wire          pcie_ptm_sniffer_tlpendiannessswap_sink_ready;
wire          pcie_ptm_sniffer_tlpendiannessswap_sink_valid;
wire          pcie_ptm_sniffer_tlpendiannessswap_source_first;
wire          pcie_ptm_sniffer_tlpendiannessswap_source_last;
reg     [3:0] pcie_ptm_sniffer_tlpendiannessswap_source_payload_ctrl = 4'd0;
reg    [31:0] pcie_ptm_sniffer_tlpendiannessswap_source_payload_data = 32'd0;
wire          pcie_ptm_sniffer_tlpendiannessswap_source_ready;
wire          pcie_ptm_sniffer_tlpendiannessswap_source_valid;
reg           pcie_ptm_sniffer_tlpfilterformater_conv_converter_demux = 1'd0;
wire          pcie_ptm_sniffer_tlpfilterformater_conv_converter_load_part;
wire          pcie_ptm_sniffer_tlpfilterformater_conv_converter_sink_first;
wire          pcie_ptm_sniffer_tlpfilterformater_conv_converter_sink_last;
wire   [35:0] pcie_ptm_sniffer_tlpfilterformater_conv_converter_sink_payload_data;
wire          pcie_ptm_sniffer_tlpfilterformater_conv_converter_sink_ready;
wire          pcie_ptm_sniffer_tlpfilterformater_conv_converter_sink_valid;
reg           pcie_ptm_sniffer_tlpfilterformater_conv_converter_source_first = 1'd0;
reg           pcie_ptm_sniffer_tlpfilterformater_conv_converter_source_last = 1'd0;
reg    [71:0] pcie_ptm_sniffer_tlpfilterformater_conv_converter_source_payload_data = 72'd0;
reg     [1:0] pcie_ptm_sniffer_tlpfilterformater_conv_converter_source_payload_valid_token_count = 2'd0;
wire          pcie_ptm_sniffer_tlpfilterformater_conv_converter_source_ready;
wire          pcie_ptm_sniffer_tlpfilterformater_conv_converter_source_valid;
reg           pcie_ptm_sniffer_tlpfilterformater_conv_converter_strobe_all = 1'd0;
wire          pcie_ptm_sniffer_tlpfilterformater_conv_sink_first;
wire          pcie_ptm_sniffer_tlpfilterformater_conv_sink_last;
wire    [3:0] pcie_ptm_sniffer_tlpfilterformater_conv_sink_payload_be;
wire   [31:0] pcie_ptm_sniffer_tlpfilterformater_conv_sink_payload_dat;
wire          pcie_ptm_sniffer_tlpfilterformater_conv_sink_ready;
wire          pcie_ptm_sniffer_tlpfilterformater_conv_sink_valid;
wire          pcie_ptm_sniffer_tlpfilterformater_conv_source_first;
wire          pcie_ptm_sniffer_tlpfilterformater_conv_source_last;
reg     [7:0] pcie_ptm_sniffer_tlpfilterformater_conv_source_payload_be = 8'd0;
reg    [63:0] pcie_ptm_sniffer_tlpfilterformater_conv_source_payload_dat = 64'd0;
wire          pcie_ptm_sniffer_tlpfilterformater_conv_source_ready;
wire          pcie_ptm_sniffer_tlpfilterformater_conv_source_source_first;
wire          pcie_ptm_sniffer_tlpfilterformater_conv_source_source_last;
wire   [71:0] pcie_ptm_sniffer_tlpfilterformater_conv_source_source_payload_data;
wire          pcie_ptm_sniffer_tlpfilterformater_conv_source_source_ready;
wire          pcie_ptm_sniffer_tlpfilterformater_conv_source_source_valid;
wire          pcie_ptm_sniffer_tlpfilterformater_conv_source_valid;
reg    [31:0] pcie_ptm_sniffer_tlpfilterformater_count = 32'd0;
reg    [31:0] pcie_ptm_sniffer_tlpfilterformater_count_clockdomainsrenamer1_next_value = 32'd0;
reg           pcie_ptm_sniffer_tlpfilterformater_count_clockdomainsrenamer1_next_value_ce = 1'd0;
reg     [1:0] pcie_ptm_sniffer_tlpfilterformater_fifo_consume = 2'd0;
wire          pcie_ptm_sniffer_tlpfilterformater_fifo_do_read;
wire          pcie_ptm_sniffer_tlpfilterformater_fifo_fifo_in_first;
wire          pcie_ptm_sniffer_tlpfilterformater_fifo_fifo_in_last;
wire    [3:0] pcie_ptm_sniffer_tlpfilterformater_fifo_fifo_in_payload_be;
wire   [31:0] pcie_ptm_sniffer_tlpfilterformater_fifo_fifo_in_payload_dat;
wire          pcie_ptm_sniffer_tlpfilterformater_fifo_fifo_out_first;
wire          pcie_ptm_sniffer_tlpfilterformater_fifo_fifo_out_last;
wire    [3:0] pcie_ptm_sniffer_tlpfilterformater_fifo_fifo_out_payload_be;
wire   [31:0] pcie_ptm_sniffer_tlpfilterformater_fifo_fifo_out_payload_dat;
reg     [2:0] pcie_ptm_sniffer_tlpfilterformater_fifo_level0 = 3'd0;
wire    [2:0] pcie_ptm_sniffer_tlpfilterformater_fifo_level1;
reg     [1:0] pcie_ptm_sniffer_tlpfilterformater_fifo_produce = 2'd0;
wire    [1:0] pcie_ptm_sniffer_tlpfilterformater_fifo_rdport_adr;
wire   [37:0] pcie_ptm_sniffer_tlpfilterformater_fifo_rdport_dat_r;
wire          pcie_ptm_sniffer_tlpfilterformater_fifo_rdport_re;
wire          pcie_ptm_sniffer_tlpfilterformater_fifo_re;
reg           pcie_ptm_sniffer_tlpfilterformater_fifo_readable = 1'd0;
reg           pcie_ptm_sniffer_tlpfilterformater_fifo_replace = 1'd0;
reg           pcie_ptm_sniffer_tlpfilterformater_fifo_sink_first = 1'd0;
reg           pcie_ptm_sniffer_tlpfilterformater_fifo_sink_last = 1'd0;
wire    [3:0] pcie_ptm_sniffer_tlpfilterformater_fifo_sink_payload_be;
reg    [31:0] pcie_ptm_sniffer_tlpfilterformater_fifo_sink_payload_dat = 32'd0;
wire          pcie_ptm_sniffer_tlpfilterformater_fifo_sink_ready;
reg           pcie_ptm_sniffer_tlpfilterformater_fifo_sink_valid = 1'd0;
wire          pcie_ptm_sniffer_tlpfilterformater_fifo_source_first;
wire          pcie_ptm_sniffer_tlpfilterformater_fifo_source_last;
wire    [3:0] pcie_ptm_sniffer_tlpfilterformater_fifo_source_payload_be;
wire   [31:0] pcie_ptm_sniffer_tlpfilterformater_fifo_source_payload_dat;
wire          pcie_ptm_sniffer_tlpfilterformater_fifo_source_ready;
wire          pcie_ptm_sniffer_tlpfilterformater_fifo_source_valid;
wire   [37:0] pcie_ptm_sniffer_tlpfilterformater_fifo_syncfifo_din;
wire   [37:0] pcie_ptm_sniffer_tlpfilterformater_fifo_syncfifo_dout;
wire          pcie_ptm_sniffer_tlpfilterformater_fifo_syncfifo_re;
wire          pcie_ptm_sniffer_tlpfilterformater_fifo_syncfifo_readable;
wire          pcie_ptm_sniffer_tlpfilterformater_fifo_syncfifo_we;
wire          pcie_ptm_sniffer_tlpfilterformater_fifo_syncfifo_writable;
reg     [1:0] pcie_ptm_sniffer_tlpfilterformater_fifo_wrport_adr = 2'd0;
wire   [37:0] pcie_ptm_sniffer_tlpfilterformater_fifo_wrport_dat_r;
wire   [37:0] pcie_ptm_sniffer_tlpfilterformater_fifo_wrport_dat_w;
wire          pcie_ptm_sniffer_tlpfilterformater_fifo_wrport_we;
wire          pcie_ptm_sniffer_tlpfilterformater_sink_sink_first;
wire          pcie_ptm_sniffer_tlpfilterformater_sink_sink_last;
wire    [3:0] pcie_ptm_sniffer_tlpfilterformater_sink_sink_payload_ctrl;
wire   [31:0] pcie_ptm_sniffer_tlpfilterformater_sink_sink_payload_data;
wire          pcie_ptm_sniffer_tlpfilterformater_sink_sink_ready;
wire          pcie_ptm_sniffer_tlpfilterformater_sink_sink_valid;
wire          pcie_ptm_sniffer_tlpfilterformater_source_source_first;
wire          pcie_ptm_sniffer_tlpfilterformater_source_source_last;
wire    [7:0] pcie_ptm_sniffer_tlpfilterformater_source_source_payload_be;
wire   [63:0] pcie_ptm_sniffer_tlpfilterformater_source_source_payload_dat;
wire          pcie_ptm_sniffer_tlpfilterformater_source_source_ready;
wire          pcie_ptm_sniffer_tlpfilterformater_source_source_valid;
wire          pcie_rst;
reg           pcie_wishbone_master_sink_first = 1'd0;
reg           pcie_wishbone_master_sink_last = 1'd0;
reg    [31:0] pcie_wishbone_master_sink_payload_adr = 32'd0;
reg     [7:0] pcie_wishbone_master_sink_payload_channel = 8'd0;
reg    [15:0] pcie_wishbone_master_sink_payload_cmp_id = 16'd0;
reg    [63:0] pcie_wishbone_master_sink_payload_dat = 64'd0;
reg           pcie_wishbone_master_sink_payload_end = 1'd0;
reg           pcie_wishbone_master_sink_payload_err = 1'd0;
reg     [9:0] pcie_wishbone_master_sink_payload_len = 10'd0;
reg    [15:0] pcie_wishbone_master_sink_payload_req_id = 16'd0;
reg     [7:0] pcie_wishbone_master_sink_payload_tag = 8'd0;
reg     [7:0] pcie_wishbone_master_sink_payload_user_id = 8'd0;
reg           pcie_wishbone_master_sink_ready = 1'd0;
reg           pcie_wishbone_master_sink_valid = 1'd0;
reg           pcie_wishbone_master_source_first = 1'd0;
reg           pcie_wishbone_master_source_last = 1'd0;
reg    [31:0] pcie_wishbone_master_source_payload_adr = 32'd0;
reg     [7:0] pcie_wishbone_master_source_payload_channel = 8'd0;
reg    [63:0] pcie_wishbone_master_source_payload_dat = 64'd0;
reg     [9:0] pcie_wishbone_master_source_payload_len = 10'd0;
reg    [15:0] pcie_wishbone_master_source_payload_req_id = 16'd0;
reg     [7:0] pcie_wishbone_master_source_payload_tag = 8'd0;
reg     [7:0] pcie_wishbone_master_source_payload_user_id = 8'd0;
reg           pcie_wishbone_master_source_payload_we = 1'd0;
reg           pcie_wishbone_master_source_ready = 1'd0;
reg           pcie_wishbone_master_source_valid = 1'd0;
reg           pcie_wishbone_master_update_dat = 1'd0;
wire          pcie_wishbone_master_wishbone_ack;
reg    [29:0] pcie_wishbone_master_wishbone_adr = 30'd0;
reg     [1:0] pcie_wishbone_master_wishbone_bte = 2'd0;
reg     [2:0] pcie_wishbone_master_wishbone_cti = 3'd0;
reg           pcie_wishbone_master_wishbone_cyc = 1'd0;
wire   [31:0] pcie_wishbone_master_wishbone_dat_r;
reg    [31:0] pcie_wishbone_master_wishbone_dat_w = 32'd0;
wire          pcie_wishbone_master_wishbone_err;
reg     [3:0] pcie_wishbone_master_wishbone_sel = 4'd0;
reg           pcie_wishbone_master_wishbone_stb = 1'd0;
reg           pcie_wishbone_master_wishbone_we = 1'd0;
wire          pcie_wishbone_slave_sink_first;
wire          pcie_wishbone_slave_sink_last;
reg    [31:0] pcie_wishbone_slave_sink_payload_adr = 32'd0;
wire    [7:0] pcie_wishbone_slave_sink_payload_channel;
wire   [63:0] pcie_wishbone_slave_sink_payload_dat;
wire    [9:0] pcie_wishbone_slave_sink_payload_len;
wire   [15:0] pcie_wishbone_slave_sink_payload_req_id;
wire    [7:0] pcie_wishbone_slave_sink_payload_tag;
reg     [7:0] pcie_wishbone_slave_sink_payload_user_id = 8'd0;
reg           pcie_wishbone_slave_sink_payload_we = 1'd0;
reg           pcie_wishbone_slave_sink_ready = 1'd0;
reg           pcie_wishbone_slave_sink_valid = 1'd0;
reg           pcie_wishbone_slave_source_first = 1'd0;
reg           pcie_wishbone_slave_source_last = 1'd0;
reg    [31:0] pcie_wishbone_slave_source_payload_adr = 32'd0;
reg     [7:0] pcie_wishbone_slave_source_payload_channel = 8'd0;
reg    [15:0] pcie_wishbone_slave_source_payload_cmp_id = 16'd0;
reg    [63:0] pcie_wishbone_slave_source_payload_dat = 64'd0;
reg           pcie_wishbone_slave_source_payload_end = 1'd0;
reg           pcie_wishbone_slave_source_payload_err = 1'd0;
reg     [9:0] pcie_wishbone_slave_source_payload_len = 10'd0;
reg    [15:0] pcie_wishbone_slave_source_payload_req_id = 16'd0;
reg     [7:0] pcie_wishbone_slave_source_payload_tag = 8'd0;
reg     [7:0] pcie_wishbone_slave_source_payload_user_id = 8'd0;
reg           pcie_wishbone_slave_source_ready = 1'd0;
reg           pcie_wishbone_slave_source_valid = 1'd0;
reg           pcie_wishbone_slave_wishbone_ack = 1'd0;
wire   [29:0] pcie_wishbone_slave_wishbone_adr;
wire    [1:0] pcie_wishbone_slave_wishbone_bte;
wire    [2:0] pcie_wishbone_slave_wishbone_cti;
wire          pcie_wishbone_slave_wishbone_cyc;
reg    [31:0] pcie_wishbone_slave_wishbone_dat_r = 32'd0;
wire   [31:0] pcie_wishbone_slave_wishbone_dat_w;
reg           pcie_wishbone_slave_wishbone_err = 1'd0;
wire    [3:0] pcie_wishbone_slave_wishbone_sel;
wire          pcie_wishbone_slave_wishbone_stb;
wire          pcie_wishbone_slave_wishbone_we;
wire          pclk_clk;
reg           pclk_rst = 1'd0;
reg    [31:0] ptm_capabilities_dat = 32'd0;
reg    [31:0] ptm_capabilities_dat_ptmcapabilities_next_value = 32'd0;
reg           ptm_capabilities_dat_ptmcapabilities_next_value_ce = 1'd0;
wire    [1:0] ptm_capabilities_mem_ctrl_port_adr;
wire   [31:0] ptm_capabilities_mem_ctrl_port_dat_r;
reg     [1:0] ptm_capabilities_mem_rd_port_adr = 2'd0;
wire   [31:0] ptm_capabilities_mem_rd_port_dat_r;
reg     [1:0] ptm_capabilities_mem_wr_port_adr = 2'd0;
wire   [31:0] ptm_capabilities_mem_wr_port_dat_r;
reg    [31:0] ptm_capabilities_mem_wr_port_dat_w = 32'd0;
reg           ptm_capabilities_mem_wr_port_we = 1'd0;
wire    [7:0] ptm_capabilities_ptm_effective_granularity;
wire          ptm_capabilities_ptm_enable;
wire          ptm_capabilities_ptm_root_select;
wire    [9:0] ptm_capabilities_reg;
reg           ptm_capabilities_sink_first = 1'd0;
reg           ptm_capabilities_sink_last = 1'd0;
reg    [31:0] ptm_capabilities_sink_payload_adr = 32'd0;
reg     [7:0] ptm_capabilities_sink_payload_channel = 8'd0;
reg    [15:0] ptm_capabilities_sink_payload_cmp_id = 16'd0;
reg    [63:0] ptm_capabilities_sink_payload_dat = 64'd0;
reg           ptm_capabilities_sink_payload_end = 1'd0;
reg           ptm_capabilities_sink_payload_err = 1'd0;
reg     [9:0] ptm_capabilities_sink_payload_len = 10'd0;
reg    [15:0] ptm_capabilities_sink_payload_req_id = 16'd0;
reg     [7:0] ptm_capabilities_sink_payload_tag = 8'd0;
reg     [7:0] ptm_capabilities_sink_payload_user_id = 8'd0;
reg           ptm_capabilities_sink_ready = 1'd0;
reg           ptm_capabilities_sink_valid = 1'd0;
reg           ptm_capabilities_source_first = 1'd0;
reg           ptm_capabilities_source_last = 1'd0;
reg    [31:0] ptm_capabilities_source_payload_adr = 32'd0;
reg     [7:0] ptm_capabilities_source_payload_channel = 8'd0;
reg    [63:0] ptm_capabilities_source_payload_dat = 64'd0;
reg     [9:0] ptm_capabilities_source_payload_len = 10'd0;
reg    [15:0] ptm_capabilities_source_payload_req_id = 16'd0;
reg     [7:0] ptm_capabilities_source_payload_tag = 8'd0;
reg     [7:0] ptm_capabilities_source_payload_user_id = 8'd0;
reg           ptm_capabilities_source_payload_we = 1'd0;
reg           ptm_capabilities_source_ready = 1'd0;
reg           ptm_capabilities_source_valid = 1'd0;
reg           ptm_requester_busy0 = 1'd0;
wire          ptm_requester_busy1;
wire   [65:0] ptm_requester_cdc_asyncfifo_din;
wire   [65:0] ptm_requester_cdc_asyncfifo_dout;
wire          ptm_requester_cdc_asyncfifo_re;
wire          ptm_requester_cdc_asyncfifo_readable;
wire          ptm_requester_cdc_asyncfifo_we;
wire          ptm_requester_cdc_asyncfifo_writable;
wire    [2:0] ptm_requester_cdc_consume_wdomain;
wire          ptm_requester_cdc_fifo_in_first;
wire          ptm_requester_cdc_fifo_in_last;
wire   [63:0] ptm_requester_cdc_fifo_in_payload_time;
wire          ptm_requester_cdc_fifo_out_first;
wire          ptm_requester_cdc_fifo_out_last;
wire   [63:0] ptm_requester_cdc_fifo_out_payload_time;
wire          ptm_requester_cdc_graycounter0_ce;
(* dont_touch = "true" *)
reg     [2:0] ptm_requester_cdc_graycounter0_q = 3'd0;
reg     [2:0] ptm_requester_cdc_graycounter0_q_binary = 3'd0;
wire    [2:0] ptm_requester_cdc_graycounter0_q_next;
reg     [2:0] ptm_requester_cdc_graycounter0_q_next_binary = 3'd0;
wire          ptm_requester_cdc_graycounter1_ce;
(* dont_touch = "true" *)
reg     [2:0] ptm_requester_cdc_graycounter1_q = 3'd0;
reg     [2:0] ptm_requester_cdc_graycounter1_q_binary = 3'd0;
wire    [2:0] ptm_requester_cdc_graycounter1_q_next;
reg     [2:0] ptm_requester_cdc_graycounter1_q_next_binary = 3'd0;
wire    [2:0] ptm_requester_cdc_produce_rdomain;
wire    [1:0] ptm_requester_cdc_rdport_adr;
wire   [65:0] ptm_requester_cdc_rdport_dat_r;
wire          ptm_requester_cdc_sink_first;
wire          ptm_requester_cdc_sink_last;
wire   [63:0] ptm_requester_cdc_sink_payload_time;
wire          ptm_requester_cdc_sink_ready;
wire          ptm_requester_cdc_sink_valid;
wire          ptm_requester_cdc_source_first;
wire          ptm_requester_cdc_source_last;
wire   [63:0] ptm_requester_cdc_source_payload_time;
wire          ptm_requester_cdc_source_ready;
wire          ptm_requester_cdc_source_valid;
wire    [1:0] ptm_requester_cdc_wrport_adr;
wire   [65:0] ptm_requester_cdc_wrport_dat_r;
wire   [65:0] ptm_requester_cdc_wrport_dat_w;
wire          ptm_requester_cdc_wrport_we;
reg           ptm_requester_control_re = 1'd0;
reg     [1:0] ptm_requester_control_storage = 2'd1;
reg     [6:0] ptm_requester_count = 7'd125;
wire          ptm_requester_done;
wire          ptm_requester_enable0;
wire          ptm_requester_enable1;
reg           ptm_requester_invalidate = 1'd0;
reg    [31:0] ptm_requester_link_delay = 32'd0;
reg    [31:0] ptm_requester_link_delay_ptmrequester_next_value3 = 32'd0;
reg           ptm_requester_link_delay_ptmrequester_next_value_ce3 = 1'd0;
reg           ptm_requester_link_delay_re = 1'd0;
wire   [31:0] ptm_requester_link_delay_status;
wire          ptm_requester_link_delay_we;
reg    [63:0] ptm_requester_master_time = 64'd0;
reg    [63:0] ptm_requester_master_time_ptmrequester_next_value2 = 64'd0;
reg           ptm_requester_master_time_ptmrequester_next_value_ce2 = 1'd0;
reg           ptm_requester_master_time_re = 1'd0;
wire   [63:0] ptm_requester_master_time_status;
wire          ptm_requester_master_time_we;
reg           ptm_requester_phy_rx_delay_re = 1'd0;
reg    [31:0] ptm_requester_phy_rx_delay_status = 32'd100;
wire          ptm_requester_phy_rx_delay_we;
reg           ptm_requester_phy_tx_delay_re = 1'd0;
reg    [31:0] ptm_requester_phy_tx_delay_status = 32'd40;
wire          ptm_requester_phy_tx_delay_we;
wire          ptm_requester_reset;
reg           ptm_requester_sink_sink_first = 1'd0;
reg           ptm_requester_sink_sink_last = 1'd0;
wire   [63:0] ptm_requester_sink_sink_payload_time;
wire          ptm_requester_sink_sink_ready;
wire          ptm_requester_sink_sink_valid;
wire          ptm_requester_source_source_first;
wire          ptm_requester_source_source_last;
wire   [63:0] ptm_requester_source_source_payload_time;
wire          ptm_requester_source_source_ready;
wire          ptm_requester_source_source_valid;
reg           ptm_requester_status_re = 1'd0;
reg     [1:0] ptm_requester_status_status = 2'd0;
wire          ptm_requester_status_we;
reg    [63:0] ptm_requester_t1 = 64'd0;
reg    [63:0] ptm_requester_t1_ptmrequester_next_value0 = 64'd0;
reg           ptm_requester_t1_ptmrequester_next_value_ce0 = 1'd0;
reg           ptm_requester_t1_time_re = 1'd0;
wire   [63:0] ptm_requester_t1_time_status;
wire          ptm_requester_t1_time_we;
reg    [63:0] ptm_requester_t4 = 64'd0;
reg    [63:0] ptm_requester_t4_ptmrequester_next_value4 = 64'd0;
reg           ptm_requester_t4_ptmrequester_next_value_ce4 = 1'd0;
reg           ptm_requester_t4_time_re = 1'd0;
wire   [63:0] ptm_requester_t4_time_status;
wire          ptm_requester_t4_time_we;
wire   [63:0] ptm_requester_time0;
reg    [63:0] ptm_requester_time1 = 64'd0;
wire          ptm_requester_time_clk;
wire          ptm_requester_time_rst;
wire          ptm_requester_trigger0;
reg           ptm_requester_trigger1 = 1'd0;
reg           ptm_requester_update = 1'd0;
reg           ptm_requester_update_ptmrequester_next_value1 = 1'd0;
reg           ptm_requester_update_ptmrequester_next_value_ce1 = 1'd0;
reg           ptm_requester_valid0 = 1'd0;
wire          ptm_requester_valid1;
reg           ptm_requester_wait = 1'd0;
wire   [31:0] r_addr;
wire          request;
reg           reset_re = 1'd0;
reg     [1:0] reset_storage = 2'd0;
wire   [31:0] rhs_slice_proxy0;
wire   [31:0] rhs_slice_proxy1;
wire    [3:0] rhs_slice_proxy10;
wire    [3:0] rhs_slice_proxy11;
wire    [3:0] rhs_slice_proxy12;
wire    [3:0] rhs_slice_proxy13;
wire    [3:0] rhs_slice_proxy14;
wire    [3:0] rhs_slice_proxy15;
wire   [31:0] rhs_slice_proxy16;
wire   [31:0] rhs_slice_proxy17;
wire   [31:0] rhs_slice_proxy18;
wire   [31:0] rhs_slice_proxy19;
wire   [31:0] rhs_slice_proxy2;
wire   [31:0] rhs_slice_proxy20;
wire   [31:0] rhs_slice_proxy21;
wire   [31:0] rhs_slice_proxy22;
wire   [31:0] rhs_slice_proxy23;
wire   [31:0] rhs_slice_proxy24;
wire   [31:0] rhs_slice_proxy25;
wire   [31:0] rhs_slice_proxy26;
wire   [31:0] rhs_slice_proxy27;
wire   [31:0] rhs_slice_proxy28;
wire   [31:0] rhs_slice_proxy29;
wire   [31:0] rhs_slice_proxy3;
wire   [31:0] rhs_slice_proxy30;
wire   [31:0] rhs_slice_proxy31;
wire   [31:0] rhs_slice_proxy32;
wire   [31:0] rhs_slice_proxy33;
wire   [31:0] rhs_slice_proxy34;
wire   [31:0] rhs_slice_proxy35;
wire   [31:0] rhs_slice_proxy36;
wire   [31:0] rhs_slice_proxy37;
wire   [31:0] rhs_slice_proxy38;
wire   [31:0] rhs_slice_proxy39;
wire   [31:0] rhs_slice_proxy4;
wire   [31:0] rhs_slice_proxy40;
wire   [31:0] rhs_slice_proxy41;
wire   [31:0] rhs_slice_proxy42;
wire   [31:0] rhs_slice_proxy43;
wire   [31:0] rhs_slice_proxy44;
wire   [31:0] rhs_slice_proxy45;
wire   [31:0] rhs_slice_proxy46;
wire   [31:0] rhs_slice_proxy47;
wire   [31:0] rhs_slice_proxy48;
wire   [31:0] rhs_slice_proxy49;
wire   [31:0] rhs_slice_proxy5;
wire   [31:0] rhs_slice_proxy50;
wire   [31:0] rhs_slice_proxy51;
wire   [31:0] rhs_slice_proxy52;
wire   [31:0] rhs_slice_proxy53;
wire   [31:0] rhs_slice_proxy54;
wire   [31:0] rhs_slice_proxy55;
wire   [31:0] rhs_slice_proxy56;
wire   [31:0] rhs_slice_proxy57;
wire   [31:0] rhs_slice_proxy58;
wire   [31:0] rhs_slice_proxy59;
wire   [31:0] rhs_slice_proxy6;
wire   [31:0] rhs_slice_proxy60;
wire   [31:0] rhs_slice_proxy61;
wire   [31:0] rhs_slice_proxy62;
wire   [31:0] rhs_slice_proxy63;
wire   [31:0] rhs_slice_proxy64;
wire   [31:0] rhs_slice_proxy65;
wire   [31:0] rhs_slice_proxy66;
wire   [31:0] rhs_slice_proxy67;
wire   [31:0] rhs_slice_proxy68;
wire   [31:0] rhs_slice_proxy69;
wire   [31:0] rhs_slice_proxy7;
wire   [31:0] rhs_slice_proxy70;
wire   [31:0] rhs_slice_proxy71;
wire    [3:0] rhs_slice_proxy72;
wire    [3:0] rhs_slice_proxy73;
wire    [3:0] rhs_slice_proxy74;
wire    [3:0] rhs_slice_proxy75;
wire    [3:0] rhs_slice_proxy76;
wire    [3:0] rhs_slice_proxy77;
wire    [3:0] rhs_slice_proxy78;
wire    [3:0] rhs_slice_proxy79;
wire    [3:0] rhs_slice_proxy8;
wire   [31:0] rhs_slice_proxy80;
wire   [31:0] rhs_slice_proxy81;
wire   [31:0] rhs_slice_proxy82;
wire   [31:0] rhs_slice_proxy83;
wire   [31:0] rhs_slice_proxy84;
wire   [31:0] rhs_slice_proxy85;
wire   [31:0] rhs_slice_proxy86;
wire   [31:0] rhs_slice_proxy87;
wire   [31:0] rhs_slice_proxy88;
wire   [31:0] rhs_slice_proxy89;
wire    [3:0] rhs_slice_proxy9;
wire   [31:0] rhs_slice_proxy90;
wire   [31:0] rhs_slice_proxy91;
wire    [3:0] rhs_slice_proxy92;
wire    [3:0] rhs_slice_proxy93;
wire    [3:0] rhs_slice_proxy94;
wire    [3:0] rhs_slice_proxy95;
wire    [3:0] rhs_slice_proxy96;
wire    [3:0] rhs_slice_proxy97;
wire    [3:0] rhs_slice_proxy98;
wire    [3:0] rhs_slice_proxy99;
reg     [1:0] rx_ctl = 2'd0;
reg    [15:0] rx_data = 16'd0;
wire          s7pciephy0;
wire          s7pciephy1;
wire          s7pciephy10;
wire          s7pciephy11;
wire          s7pciephy12;
wire          s7pciephy13;
wire          s7pciephy14;
wire          s7pciephy15;
wire          s7pciephy16;
wire          s7pciephy17;
wire          s7pciephy18;
wire          s7pciephy19;
wire          s7pciephy2;
wire          s7pciephy20;
wire          s7pciephy21;
wire          s7pciephy22;
wire          s7pciephy23;
wire          s7pciephy24;
wire          s7pciephy25;
wire          s7pciephy26;
wire          s7pciephy27;
wire          s7pciephy28;
wire          s7pciephy29;
wire          s7pciephy3;
wire          s7pciephy30;
wire          s7pciephy31;
wire          s7pciephy32;
wire          s7pciephy33;
wire          s7pciephy34;
wire          s7pciephy35;
wire          s7pciephy36;
wire          s7pciephy37;
wire          s7pciephy38;
wire          s7pciephy39;
wire          s7pciephy4;
wire          s7pciephy40;
wire          s7pciephy41;
wire          s7pciephy42;
wire          s7pciephy43;
wire          s7pciephy44;
wire          s7pciephy45;
wire          s7pciephy46;
wire          s7pciephy47;
wire          s7pciephy48;
wire          s7pciephy49;
wire          s7pciephy5;
wire          s7pciephy50;
wire          s7pciephy51;
wire          s7pciephy52;
wire          s7pciephy53;
wire          s7pciephy54;
wire          s7pciephy55;
wire          s7pciephy56;
wire          s7pciephy57;
wire          s7pciephy58;
wire          s7pciephy59;
wire          s7pciephy6;
wire          s7pciephy60;
wire          s7pciephy61;
wire          s7pciephy62;
wire          s7pciephy63;
wire          s7pciephy64;
wire          s7pciephy65;
wire          s7pciephy66;
wire          s7pciephy67;
wire          s7pciephy68;
wire          s7pciephy69;
wire          s7pciephy7;
wire          s7pciephy70;
wire          s7pciephy71;
wire          s7pciephy72;
wire          s7pciephy73;
wire          s7pciephy8;
wire          s7pciephy9;
reg           s7pciephy_bus_master_enable_re = 1'd0;
wire          s7pciephy_bus_master_enable_status;
wire          s7pciephy_bus_master_enable_we;
wire    [7:0] s7pciephy_bus_number;
wire          s7pciephy_clkin;
wire          s7pciephy_clkout0;
wire          s7pciephy_clkout1;
wire          s7pciephy_clkout2;
wire          s7pciephy_clkout3;
wire          s7pciephy_clkout_buf0;
wire          s7pciephy_clkout_buf1;
wire          s7pciephy_clkout_buf2;
wire          s7pciephy_clkout_buf3;
wire   [15:0] s7pciephy_command;
wire    [5:0] s7pciephy_csrfield_ltssm;
wire          s7pciephy_csrfield_rate;
wire          s7pciephy_csrfield_status;
wire    [1:0] s7pciephy_csrfield_width;
wire   [15:0] s7pciephy_dcommand;
wire    [4:0] s7pciephy_device_number;
wire    [2:0] s7pciephy_function_number;
reg    [15:0] s7pciephy_id = 16'd0;
reg           s7pciephy_link_status_re = 1'd0;
reg     [9:0] s7pciephy_link_status_status = 10'd0;
wire          s7pciephy_link_status_we;
wire          s7pciephy_locked;
wire          s7pciephy_m_axis_rx_tlast;
wire   [31:0] s7pciephy_m_axis_rx_tuser;
reg    [15:0] s7pciephy_max_payload_size = 16'd0;
reg           s7pciephy_max_payload_size_re = 1'd0;
wire   [15:0] s7pciephy_max_payload_size_status;
wire          s7pciephy_max_payload_size_we;
reg    [15:0] s7pciephy_max_request_size = 16'd0;
reg           s7pciephy_max_request_size_re = 1'd0;
wire   [15:0] s7pciephy_max_request_size_status;
wire          s7pciephy_max_request_size_we;
wire          s7pciephy_msi_cdc_cd_rst;
wire    [9:0] s7pciephy_msi_cdc_cdc_asyncfifo_din;
wire    [9:0] s7pciephy_msi_cdc_cdc_asyncfifo_dout;
wire          s7pciephy_msi_cdc_cdc_asyncfifo_re;
wire          s7pciephy_msi_cdc_cdc_asyncfifo_readable;
wire          s7pciephy_msi_cdc_cdc_asyncfifo_we;
wire          s7pciephy_msi_cdc_cdc_asyncfifo_writable;
wire    [2:0] s7pciephy_msi_cdc_cdc_consume_wdomain;
wire          s7pciephy_msi_cdc_cdc_fifo_in_first;
wire          s7pciephy_msi_cdc_cdc_fifo_in_last;
wire    [7:0] s7pciephy_msi_cdc_cdc_fifo_in_payload_dat;
wire          s7pciephy_msi_cdc_cdc_fifo_out_first;
wire          s7pciephy_msi_cdc_cdc_fifo_out_last;
wire    [7:0] s7pciephy_msi_cdc_cdc_fifo_out_payload_dat;
wire          s7pciephy_msi_cdc_cdc_graycounter0_ce;
(* dont_touch = "true" *)
reg     [2:0] s7pciephy_msi_cdc_cdc_graycounter0_q = 3'd0;
reg     [2:0] s7pciephy_msi_cdc_cdc_graycounter0_q_binary = 3'd0;
wire    [2:0] s7pciephy_msi_cdc_cdc_graycounter0_q_next;
reg     [2:0] s7pciephy_msi_cdc_cdc_graycounter0_q_next_binary = 3'd0;
wire          s7pciephy_msi_cdc_cdc_graycounter1_ce;
(* dont_touch = "true" *)
reg     [2:0] s7pciephy_msi_cdc_cdc_graycounter1_q = 3'd0;
reg     [2:0] s7pciephy_msi_cdc_cdc_graycounter1_q_binary = 3'd0;
wire    [2:0] s7pciephy_msi_cdc_cdc_graycounter1_q_next;
reg     [2:0] s7pciephy_msi_cdc_cdc_graycounter1_q_next_binary = 3'd0;
wire    [2:0] s7pciephy_msi_cdc_cdc_produce_rdomain;
wire    [1:0] s7pciephy_msi_cdc_cdc_rdport_adr;
wire    [9:0] s7pciephy_msi_cdc_cdc_rdport_dat_r;
wire          s7pciephy_msi_cdc_cdc_sink_first;
wire          s7pciephy_msi_cdc_cdc_sink_last;
wire    [7:0] s7pciephy_msi_cdc_cdc_sink_payload_dat;
wire          s7pciephy_msi_cdc_cdc_sink_ready;
wire          s7pciephy_msi_cdc_cdc_sink_valid;
wire          s7pciephy_msi_cdc_cdc_source_first;
wire          s7pciephy_msi_cdc_cdc_source_last;
wire    [7:0] s7pciephy_msi_cdc_cdc_source_payload_dat;
wire          s7pciephy_msi_cdc_cdc_source_ready;
wire          s7pciephy_msi_cdc_cdc_source_valid;
wire    [1:0] s7pciephy_msi_cdc_cdc_wrport_adr;
wire    [9:0] s7pciephy_msi_cdc_cdc_wrport_dat_r;
wire    [9:0] s7pciephy_msi_cdc_cdc_wrport_dat_w;
wire          s7pciephy_msi_cdc_cdc_wrport_we;
wire          s7pciephy_msi_cdc_sink_sink_first;
wire          s7pciephy_msi_cdc_sink_sink_last;
wire    [7:0] s7pciephy_msi_cdc_sink_sink_payload_dat;
wire          s7pciephy_msi_cdc_sink_sink_ready;
wire          s7pciephy_msi_cdc_sink_sink_valid;
wire          s7pciephy_msi_cdc_source_source_first;
wire          s7pciephy_msi_cdc_source_source_last;
wire    [7:0] s7pciephy_msi_cdc_source_source_payload_dat;
wire          s7pciephy_msi_cdc_source_source_ready;
wire          s7pciephy_msi_cdc_source_source_valid;
reg           s7pciephy_msi_enable_re = 1'd0;
wire          s7pciephy_msi_enable_status;
wire          s7pciephy_msi_enable_we;
reg           s7pciephy_msi_first = 1'd0;
reg           s7pciephy_msi_last = 1'd0;
reg     [7:0] s7pciephy_msi_payload_dat = 8'd0;
wire          s7pciephy_msi_ready;
reg           s7pciephy_msi_valid = 1'd0;
reg           s7pciephy_msix_enable_re = 1'd0;
wire          s7pciephy_msix_enable_status;
wire          s7pciephy_msix_enable_we;
wire          s7pciephy_pcie_refclk;
wire          s7pciephy_pcie_rst_n;
reg           s7pciephy_pclk_sel = 1'd0;
wire          s7pciephy_pipe_pclk_sel;
wire          s7pciephy_pipe_pclk_sel_r;
wire          s7pciephy_pipe_txoutclk;
wire          s7pciephy_pipe_txoutclk_bufg;
reg           s7pciephy_power_down = 1'd0;
reg           s7pciephy_reset = 1'd0;
wire          s7pciephy_rx_datapath_cdc_cd_rst;
wire   [73:0] s7pciephy_rx_datapath_cdc_cdc_asyncfifo_din;
wire   [73:0] s7pciephy_rx_datapath_cdc_cdc_asyncfifo_dout;
wire          s7pciephy_rx_datapath_cdc_cdc_asyncfifo_re;
wire          s7pciephy_rx_datapath_cdc_cdc_asyncfifo_readable;
wire          s7pciephy_rx_datapath_cdc_cdc_asyncfifo_we;
wire          s7pciephy_rx_datapath_cdc_cdc_asyncfifo_writable;
wire    [4:0] s7pciephy_rx_datapath_cdc_cdc_consume_wdomain;
wire          s7pciephy_rx_datapath_cdc_cdc_fifo_in_first;
wire          s7pciephy_rx_datapath_cdc_cdc_fifo_in_last;
wire    [7:0] s7pciephy_rx_datapath_cdc_cdc_fifo_in_payload_be;
wire   [63:0] s7pciephy_rx_datapath_cdc_cdc_fifo_in_payload_dat;
wire          s7pciephy_rx_datapath_cdc_cdc_fifo_out_first;
wire          s7pciephy_rx_datapath_cdc_cdc_fifo_out_last;
wire    [7:0] s7pciephy_rx_datapath_cdc_cdc_fifo_out_payload_be;
wire   [63:0] s7pciephy_rx_datapath_cdc_cdc_fifo_out_payload_dat;
wire          s7pciephy_rx_datapath_cdc_cdc_graycounter0_ce;
(* dont_touch = "true" *)
reg     [4:0] s7pciephy_rx_datapath_cdc_cdc_graycounter0_q = 5'd0;
reg     [4:0] s7pciephy_rx_datapath_cdc_cdc_graycounter0_q_binary = 5'd0;
wire    [4:0] s7pciephy_rx_datapath_cdc_cdc_graycounter0_q_next;
reg     [4:0] s7pciephy_rx_datapath_cdc_cdc_graycounter0_q_next_binary = 5'd0;
wire          s7pciephy_rx_datapath_cdc_cdc_graycounter1_ce;
(* dont_touch = "true" *)
reg     [4:0] s7pciephy_rx_datapath_cdc_cdc_graycounter1_q = 5'd0;
reg     [4:0] s7pciephy_rx_datapath_cdc_cdc_graycounter1_q_binary = 5'd0;
wire    [4:0] s7pciephy_rx_datapath_cdc_cdc_graycounter1_q_next;
reg     [4:0] s7pciephy_rx_datapath_cdc_cdc_graycounter1_q_next_binary = 5'd0;
wire    [4:0] s7pciephy_rx_datapath_cdc_cdc_produce_rdomain;
wire    [3:0] s7pciephy_rx_datapath_cdc_cdc_rdport_adr;
wire   [73:0] s7pciephy_rx_datapath_cdc_cdc_rdport_dat_r;
wire          s7pciephy_rx_datapath_cdc_cdc_sink_first;
wire          s7pciephy_rx_datapath_cdc_cdc_sink_last;
wire    [7:0] s7pciephy_rx_datapath_cdc_cdc_sink_payload_be;
wire   [63:0] s7pciephy_rx_datapath_cdc_cdc_sink_payload_dat;
wire          s7pciephy_rx_datapath_cdc_cdc_sink_ready;
wire          s7pciephy_rx_datapath_cdc_cdc_sink_valid;
wire          s7pciephy_rx_datapath_cdc_cdc_source_first;
wire          s7pciephy_rx_datapath_cdc_cdc_source_last;
wire    [7:0] s7pciephy_rx_datapath_cdc_cdc_source_payload_be;
wire   [63:0] s7pciephy_rx_datapath_cdc_cdc_source_payload_dat;
wire          s7pciephy_rx_datapath_cdc_cdc_source_ready;
wire          s7pciephy_rx_datapath_cdc_cdc_source_valid;
wire    [3:0] s7pciephy_rx_datapath_cdc_cdc_wrport_adr;
wire   [73:0] s7pciephy_rx_datapath_cdc_cdc_wrport_dat_r;
wire   [73:0] s7pciephy_rx_datapath_cdc_cdc_wrport_dat_w;
wire          s7pciephy_rx_datapath_cdc_cdc_wrport_we;
wire          s7pciephy_rx_datapath_cdc_sink_sink_first;
wire          s7pciephy_rx_datapath_cdc_sink_sink_last;
wire    [7:0] s7pciephy_rx_datapath_cdc_sink_sink_payload_be;
wire   [63:0] s7pciephy_rx_datapath_cdc_sink_sink_payload_dat;
wire          s7pciephy_rx_datapath_cdc_sink_sink_ready;
wire          s7pciephy_rx_datapath_cdc_sink_sink_valid;
wire          s7pciephy_rx_datapath_cdc_source_source_first;
wire          s7pciephy_rx_datapath_cdc_source_source_last;
wire    [7:0] s7pciephy_rx_datapath_cdc_source_source_payload_be;
wire   [63:0] s7pciephy_rx_datapath_cdc_source_source_payload_dat;
wire          s7pciephy_rx_datapath_cdc_source_source_ready;
wire          s7pciephy_rx_datapath_cdc_source_source_valid;
wire          s7pciephy_rx_datapath_converter_converter_sink_first;
wire          s7pciephy_rx_datapath_converter_converter_sink_last;
wire   [71:0] s7pciephy_rx_datapath_converter_converter_sink_payload_data;
wire          s7pciephy_rx_datapath_converter_converter_sink_ready;
wire          s7pciephy_rx_datapath_converter_converter_sink_valid;
wire          s7pciephy_rx_datapath_converter_converter_source_first;
wire          s7pciephy_rx_datapath_converter_converter_source_last;
wire   [71:0] s7pciephy_rx_datapath_converter_converter_source_payload_data;
wire          s7pciephy_rx_datapath_converter_converter_source_payload_valid_token_count;
wire          s7pciephy_rx_datapath_converter_converter_source_ready;
wire          s7pciephy_rx_datapath_converter_converter_source_valid;
wire          s7pciephy_rx_datapath_converter_sink_first;
wire          s7pciephy_rx_datapath_converter_sink_last;
wire    [7:0] s7pciephy_rx_datapath_converter_sink_payload_be;
wire   [63:0] s7pciephy_rx_datapath_converter_sink_payload_dat;
wire          s7pciephy_rx_datapath_converter_sink_ready;
wire          s7pciephy_rx_datapath_converter_sink_valid;
wire          s7pciephy_rx_datapath_converter_source_first;
wire          s7pciephy_rx_datapath_converter_source_last;
wire    [7:0] s7pciephy_rx_datapath_converter_source_payload_be;
wire   [63:0] s7pciephy_rx_datapath_converter_source_payload_dat;
wire          s7pciephy_rx_datapath_converter_source_ready;
wire          s7pciephy_rx_datapath_converter_source_source_first;
wire          s7pciephy_rx_datapath_converter_source_source_last;
wire   [71:0] s7pciephy_rx_datapath_converter_source_source_payload_data;
wire          s7pciephy_rx_datapath_converter_source_source_ready;
wire          s7pciephy_rx_datapath_converter_source_source_valid;
wire          s7pciephy_rx_datapath_converter_source_valid;
reg           s7pciephy_rx_datapath_pipe_ready_sink_d_first = 1'd0;
reg           s7pciephy_rx_datapath_pipe_ready_sink_d_last = 1'd0;
reg     [7:0] s7pciephy_rx_datapath_pipe_ready_sink_d_payload_be = 8'd0;
reg    [63:0] s7pciephy_rx_datapath_pipe_ready_sink_d_payload_dat = 64'd0;
reg           s7pciephy_rx_datapath_pipe_ready_sink_d_ready = 1'd0;
reg           s7pciephy_rx_datapath_pipe_ready_sink_d_valid = 1'd0;
wire          s7pciephy_rx_datapath_pipe_ready_sink_first;
wire          s7pciephy_rx_datapath_pipe_ready_sink_last;
wire    [7:0] s7pciephy_rx_datapath_pipe_ready_sink_payload_be;
wire   [63:0] s7pciephy_rx_datapath_pipe_ready_sink_payload_dat;
wire          s7pciephy_rx_datapath_pipe_ready_sink_ready;
wire          s7pciephy_rx_datapath_pipe_ready_sink_valid;
reg           s7pciephy_rx_datapath_pipe_ready_source_first = 1'd0;
reg           s7pciephy_rx_datapath_pipe_ready_source_last = 1'd0;
reg     [7:0] s7pciephy_rx_datapath_pipe_ready_source_payload_be = 8'd0;
reg    [63:0] s7pciephy_rx_datapath_pipe_ready_source_payload_dat = 64'd0;
wire          s7pciephy_rx_datapath_pipe_ready_source_ready;
reg           s7pciephy_rx_datapath_pipe_ready_source_valid = 1'd0;
reg           s7pciephy_rx_datapath_pipe_ready_valid = 1'd0;
wire          s7pciephy_rx_datapath_pipe_valid_sink_first;
wire          s7pciephy_rx_datapath_pipe_valid_sink_last;
wire    [7:0] s7pciephy_rx_datapath_pipe_valid_sink_payload_be;
wire   [63:0] s7pciephy_rx_datapath_pipe_valid_sink_payload_dat;
wire          s7pciephy_rx_datapath_pipe_valid_sink_ready;
wire          s7pciephy_rx_datapath_pipe_valid_sink_valid;
reg           s7pciephy_rx_datapath_pipe_valid_source_first = 1'd0;
reg           s7pciephy_rx_datapath_pipe_valid_source_last = 1'd0;
reg     [7:0] s7pciephy_rx_datapath_pipe_valid_source_payload_be = 8'd0;
reg    [63:0] s7pciephy_rx_datapath_pipe_valid_source_payload_dat = 64'd0;
wire          s7pciephy_rx_datapath_pipe_valid_source_ready;
reg           s7pciephy_rx_datapath_pipe_valid_source_valid = 1'd0;
wire          s7pciephy_rx_datapath_sink_sink_first;
wire          s7pciephy_rx_datapath_sink_sink_last;
wire    [7:0] s7pciephy_rx_datapath_sink_sink_payload_be;
wire   [63:0] s7pciephy_rx_datapath_sink_sink_payload_dat;
wire          s7pciephy_rx_datapath_sink_sink_ready;
wire          s7pciephy_rx_datapath_sink_sink_valid;
wire          s7pciephy_rx_datapath_source_source_first;
wire          s7pciephy_rx_datapath_source_source_last;
wire    [7:0] s7pciephy_rx_datapath_source_source_payload_be;
wire   [63:0] s7pciephy_rx_datapath_source_source_payload_dat;
wire          s7pciephy_rx_datapath_source_source_ready;
wire          s7pciephy_rx_datapath_source_source_valid;
wire          s7pciephy_sink_first;
wire          s7pciephy_sink_last;
wire    [7:0] s7pciephy_sink_payload_be;
wire   [63:0] s7pciephy_sink_payload_dat;
wire          s7pciephy_sink_ready;
wire          s7pciephy_sink_valid;
wire          s7pciephy_source_first;
wire          s7pciephy_source_last;
wire    [7:0] s7pciephy_source_payload_be;
wire   [63:0] s7pciephy_source_payload_dat;
wire          s7pciephy_source_ready;
wire          s7pciephy_source_valid;
wire          s7pciephy_tx_datapath_cdc_cd_rst;
wire   [73:0] s7pciephy_tx_datapath_cdc_cdc_asyncfifo_din;
wire   [73:0] s7pciephy_tx_datapath_cdc_cdc_asyncfifo_dout;
wire          s7pciephy_tx_datapath_cdc_cdc_asyncfifo_re;
wire          s7pciephy_tx_datapath_cdc_cdc_asyncfifo_readable;
wire          s7pciephy_tx_datapath_cdc_cdc_asyncfifo_we;
wire          s7pciephy_tx_datapath_cdc_cdc_asyncfifo_writable;
wire    [4:0] s7pciephy_tx_datapath_cdc_cdc_consume_wdomain;
wire          s7pciephy_tx_datapath_cdc_cdc_fifo_in_first;
wire          s7pciephy_tx_datapath_cdc_cdc_fifo_in_last;
wire    [7:0] s7pciephy_tx_datapath_cdc_cdc_fifo_in_payload_be;
wire   [63:0] s7pciephy_tx_datapath_cdc_cdc_fifo_in_payload_dat;
wire          s7pciephy_tx_datapath_cdc_cdc_fifo_out_first;
wire          s7pciephy_tx_datapath_cdc_cdc_fifo_out_last;
wire    [7:0] s7pciephy_tx_datapath_cdc_cdc_fifo_out_payload_be;
wire   [63:0] s7pciephy_tx_datapath_cdc_cdc_fifo_out_payload_dat;
wire          s7pciephy_tx_datapath_cdc_cdc_graycounter0_ce;
(* dont_touch = "true" *)
reg     [4:0] s7pciephy_tx_datapath_cdc_cdc_graycounter0_q = 5'd0;
reg     [4:0] s7pciephy_tx_datapath_cdc_cdc_graycounter0_q_binary = 5'd0;
wire    [4:0] s7pciephy_tx_datapath_cdc_cdc_graycounter0_q_next;
reg     [4:0] s7pciephy_tx_datapath_cdc_cdc_graycounter0_q_next_binary = 5'd0;
wire          s7pciephy_tx_datapath_cdc_cdc_graycounter1_ce;
(* dont_touch = "true" *)
reg     [4:0] s7pciephy_tx_datapath_cdc_cdc_graycounter1_q = 5'd0;
reg     [4:0] s7pciephy_tx_datapath_cdc_cdc_graycounter1_q_binary = 5'd0;
wire    [4:0] s7pciephy_tx_datapath_cdc_cdc_graycounter1_q_next;
reg     [4:0] s7pciephy_tx_datapath_cdc_cdc_graycounter1_q_next_binary = 5'd0;
wire    [4:0] s7pciephy_tx_datapath_cdc_cdc_produce_rdomain;
wire    [3:0] s7pciephy_tx_datapath_cdc_cdc_rdport_adr;
wire   [73:0] s7pciephy_tx_datapath_cdc_cdc_rdport_dat_r;
wire          s7pciephy_tx_datapath_cdc_cdc_sink_first;
wire          s7pciephy_tx_datapath_cdc_cdc_sink_last;
wire    [7:0] s7pciephy_tx_datapath_cdc_cdc_sink_payload_be;
wire   [63:0] s7pciephy_tx_datapath_cdc_cdc_sink_payload_dat;
wire          s7pciephy_tx_datapath_cdc_cdc_sink_ready;
wire          s7pciephy_tx_datapath_cdc_cdc_sink_valid;
wire          s7pciephy_tx_datapath_cdc_cdc_source_first;
wire          s7pciephy_tx_datapath_cdc_cdc_source_last;
wire    [7:0] s7pciephy_tx_datapath_cdc_cdc_source_payload_be;
wire   [63:0] s7pciephy_tx_datapath_cdc_cdc_source_payload_dat;
wire          s7pciephy_tx_datapath_cdc_cdc_source_ready;
wire          s7pciephy_tx_datapath_cdc_cdc_source_valid;
wire    [3:0] s7pciephy_tx_datapath_cdc_cdc_wrport_adr;
wire   [73:0] s7pciephy_tx_datapath_cdc_cdc_wrport_dat_r;
wire   [73:0] s7pciephy_tx_datapath_cdc_cdc_wrport_dat_w;
wire          s7pciephy_tx_datapath_cdc_cdc_wrport_we;
wire          s7pciephy_tx_datapath_cdc_sink_sink_first;
wire          s7pciephy_tx_datapath_cdc_sink_sink_last;
wire    [7:0] s7pciephy_tx_datapath_cdc_sink_sink_payload_be;
wire   [63:0] s7pciephy_tx_datapath_cdc_sink_sink_payload_dat;
wire          s7pciephy_tx_datapath_cdc_sink_sink_ready;
wire          s7pciephy_tx_datapath_cdc_sink_sink_valid;
wire          s7pciephy_tx_datapath_cdc_source_source_first;
wire          s7pciephy_tx_datapath_cdc_source_source_last;
wire    [7:0] s7pciephy_tx_datapath_cdc_source_source_payload_be;
wire   [63:0] s7pciephy_tx_datapath_cdc_source_source_payload_dat;
wire          s7pciephy_tx_datapath_cdc_source_source_ready;
wire          s7pciephy_tx_datapath_cdc_source_source_valid;
wire          s7pciephy_tx_datapath_converter_converter_sink_first;
wire          s7pciephy_tx_datapath_converter_converter_sink_last;
wire   [71:0] s7pciephy_tx_datapath_converter_converter_sink_payload_data;
wire          s7pciephy_tx_datapath_converter_converter_sink_ready;
wire          s7pciephy_tx_datapath_converter_converter_sink_valid;
wire          s7pciephy_tx_datapath_converter_converter_source_first;
wire          s7pciephy_tx_datapath_converter_converter_source_last;
wire   [71:0] s7pciephy_tx_datapath_converter_converter_source_payload_data;
wire          s7pciephy_tx_datapath_converter_converter_source_payload_valid_token_count;
wire          s7pciephy_tx_datapath_converter_converter_source_ready;
wire          s7pciephy_tx_datapath_converter_converter_source_valid;
wire          s7pciephy_tx_datapath_converter_sink_first;
wire          s7pciephy_tx_datapath_converter_sink_last;
wire    [7:0] s7pciephy_tx_datapath_converter_sink_payload_be;
wire   [63:0] s7pciephy_tx_datapath_converter_sink_payload_dat;
wire          s7pciephy_tx_datapath_converter_sink_ready;
wire          s7pciephy_tx_datapath_converter_sink_valid;
wire          s7pciephy_tx_datapath_converter_source_first;
wire          s7pciephy_tx_datapath_converter_source_last;
wire    [7:0] s7pciephy_tx_datapath_converter_source_payload_be;
wire   [63:0] s7pciephy_tx_datapath_converter_source_payload_dat;
wire          s7pciephy_tx_datapath_converter_source_ready;
wire          s7pciephy_tx_datapath_converter_source_source_first;
wire          s7pciephy_tx_datapath_converter_source_source_last;
wire   [71:0] s7pciephy_tx_datapath_converter_source_source_payload_data;
wire          s7pciephy_tx_datapath_converter_source_source_ready;
wire          s7pciephy_tx_datapath_converter_source_source_valid;
wire          s7pciephy_tx_datapath_converter_source_valid;
reg           s7pciephy_tx_datapath_pipe_ready_sink_d_first = 1'd0;
reg           s7pciephy_tx_datapath_pipe_ready_sink_d_last = 1'd0;
reg     [7:0] s7pciephy_tx_datapath_pipe_ready_sink_d_payload_be = 8'd0;
reg    [63:0] s7pciephy_tx_datapath_pipe_ready_sink_d_payload_dat = 64'd0;
reg           s7pciephy_tx_datapath_pipe_ready_sink_d_ready = 1'd0;
reg           s7pciephy_tx_datapath_pipe_ready_sink_d_valid = 1'd0;
wire          s7pciephy_tx_datapath_pipe_ready_sink_first;
wire          s7pciephy_tx_datapath_pipe_ready_sink_last;
wire    [7:0] s7pciephy_tx_datapath_pipe_ready_sink_payload_be;
wire   [63:0] s7pciephy_tx_datapath_pipe_ready_sink_payload_dat;
wire          s7pciephy_tx_datapath_pipe_ready_sink_ready;
wire          s7pciephy_tx_datapath_pipe_ready_sink_valid;
reg           s7pciephy_tx_datapath_pipe_ready_source_first = 1'd0;
reg           s7pciephy_tx_datapath_pipe_ready_source_last = 1'd0;
reg     [7:0] s7pciephy_tx_datapath_pipe_ready_source_payload_be = 8'd0;
reg    [63:0] s7pciephy_tx_datapath_pipe_ready_source_payload_dat = 64'd0;
wire          s7pciephy_tx_datapath_pipe_ready_source_ready;
reg           s7pciephy_tx_datapath_pipe_ready_source_valid = 1'd0;
reg           s7pciephy_tx_datapath_pipe_ready_valid = 1'd0;
wire          s7pciephy_tx_datapath_pipe_valid_sink_first;
wire          s7pciephy_tx_datapath_pipe_valid_sink_last;
wire    [7:0] s7pciephy_tx_datapath_pipe_valid_sink_payload_be;
wire   [63:0] s7pciephy_tx_datapath_pipe_valid_sink_payload_dat;
wire          s7pciephy_tx_datapath_pipe_valid_sink_ready;
wire          s7pciephy_tx_datapath_pipe_valid_sink_valid;
reg           s7pciephy_tx_datapath_pipe_valid_source_first = 1'd0;
reg           s7pciephy_tx_datapath_pipe_valid_source_last = 1'd0;
reg     [7:0] s7pciephy_tx_datapath_pipe_valid_source_payload_be = 8'd0;
reg    [63:0] s7pciephy_tx_datapath_pipe_valid_source_payload_dat = 64'd0;
wire          s7pciephy_tx_datapath_pipe_valid_source_ready;
reg           s7pciephy_tx_datapath_pipe_valid_source_valid = 1'd0;
wire          s7pciephy_tx_datapath_sink_sink_first;
wire          s7pciephy_tx_datapath_sink_sink_last;
wire    [7:0] s7pciephy_tx_datapath_sink_sink_payload_be;
wire   [63:0] s7pciephy_tx_datapath_sink_sink_payload_dat;
wire          s7pciephy_tx_datapath_sink_sink_ready;
wire          s7pciephy_tx_datapath_sink_sink_valid;
wire          s7pciephy_tx_datapath_source_source_first;
wire          s7pciephy_tx_datapath_source_source_last;
wire    [7:0] s7pciephy_tx_datapath_source_source_payload_be;
wire   [63:0] s7pciephy_tx_datapath_source_source_payload_dat;
wire          s7pciephy_tx_datapath_source_source_ready;
wire          s7pciephy_tx_datapath_source_source_valid;
reg           scratch_re = 1'd0;
reg    [31:0] scratch_storage = 32'd305419896;
reg           shared_ack = 1'd0;
wire   [29:0] shared_adr;
wire    [1:0] shared_bte;
wire    [2:0] shared_cti;
wire          shared_cyc;
reg    [31:0] shared_dat_r = 32'd0;
wire   [31:0] shared_dat_w;
wire          shared_err;
wire    [3:0] shared_sel;
wire          shared_stb;
wire          shared_we;
reg     [1:0] slave_sel = 2'd0;
reg     [1:0] slave_sel_r = 2'd0;
reg           slave_sink_first = 1'd0;
reg           slave_sink_last = 1'd0;
reg    [31:0] slave_sink_payload_adr = 32'd0;
reg     [7:0] slave_sink_payload_channel = 8'd0;
reg    [15:0] slave_sink_payload_cmp_id = 16'd0;
reg    [63:0] slave_sink_payload_dat = 64'd0;
reg           slave_sink_payload_end = 1'd0;
reg           slave_sink_payload_err = 1'd0;
reg     [9:0] slave_sink_payload_len = 10'd0;
reg    [15:0] slave_sink_payload_req_id = 16'd0;
reg     [7:0] slave_sink_payload_tag = 8'd0;
reg     [7:0] slave_sink_payload_user_id = 8'd0;
wire          slave_sink_ready;
reg           slave_sink_valid = 1'd0;
wire          slave_source_first;
wire          slave_source_last;
wire   [31:0] slave_source_payload_adr;
wire    [7:0] slave_source_payload_channel;
wire   [63:0] slave_source_payload_dat;
wire    [9:0] slave_source_payload_len;
wire   [15:0] slave_source_payload_req_id;
wire    [7:0] slave_source_payload_tag;
wire    [7:0] slave_source_payload_user_id;
wire          slave_source_payload_we;
reg           slave_source_ready = 1'd0;
wire          slave_source_valid;
wire          sniffer_clk;
wire          sniffer_clk_1;
wire          sniffer_rst;
wire          sniffer_rst_n;
wire    [1:0] sniffer_rx_ctl;
wire   [15:0] sniffer_rx_data;
reg           soc_rst = 1'd0;
wire    [5:0] sram0_adr;
wire    [7:0] sram0_dat_r;
wire          sram0_sel;
reg           sram0_sel_r = 1'd0;
wire    [5:0] sram1_adr;
wire  [127:0] sram1_dat_r;
wire  [127:0] sram1_dat_w;
wire          sram1_sel;
reg           sram1_sel_r = 1'd0;
wire          sram1_we;
wire  [127:0] sram1_word_expanded;
reg     [1:0] sram1_word_index = 2'd0;
reg    [31:0] sram1_wreg0 = 32'd0;
reg    [31:0] sram1_wreg1 = 32'd0;
reg    [31:0] sram1_wreg2 = 32'd0;
wire          sys_clk;
wire          sys_rst;
wire          time_clk;
wire          time_rst;
wire          to140100636556256_clk;
wire          to140100636556256_rst;
wire          to140100636878112_clk;
wire          to140100636878112_rst;
wire          to140100637018048_clk;
wire          to140100637018048_rst;
wire          userclk1_clk;
wire          userclk1_rst;
wire          userclk2_clk;
wire          userclk2_rst;
wire   [31:0] w_addr;
wire          wait_1;
wire          xilinxasyncresetsynchronizerimpl0_rst_meta;
wire          xilinxasyncresetsynchronizerimpl1_rst_meta;
wire          xilinxasyncresetsynchronizerimpl2_rst_meta;
wire          xilinxasyncresetsynchronizerimpl3_rst_meta;
wire          xilinxasyncresetsynchronizerimpl4_rst_meta;
wire          xilinxasyncresetsynchronizerimpl5_rst_meta;
wire          xilinxasyncresetsynchronizerimpl6;
wire          xilinxasyncresetsynchronizerimpl6_rst_meta;
wire          xilinxasyncresetsynchronizerimpl7;
wire          xilinxasyncresetsynchronizerimpl7_rst_meta;
wire          xilinxasyncresetsynchronizerimpl8;
wire          xilinxasyncresetsynchronizerimpl8_rst_meta;
wire          xilinxasyncresetsynchronizerimpl9;
wire          xilinxasyncresetsynchronizerimpl9_rst_meta;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *)
reg     [4:0] xilinxmultiregimpl0_regs0 = 5'd0;
(* async_reg = "true", dont_touch = "true" *)
reg     [4:0] xilinxmultiregimpl0_regs1 = 5'd0;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *)
reg    [15:0] xilinxmultiregimpl10_regs0 = 16'd0;
(* async_reg = "true", dont_touch = "true" *)
reg    [15:0] xilinxmultiregimpl10_regs1 = 16'd0;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *)
reg    [15:0] xilinxmultiregimpl11_regs0 = 16'd0;
(* async_reg = "true", dont_touch = "true" *)
reg    [15:0] xilinxmultiregimpl11_regs1 = 16'd0;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *)
reg     [3:0] xilinxmultiregimpl12_regs0 = 4'd0;
(* async_reg = "true", dont_touch = "true" *)
reg     [3:0] xilinxmultiregimpl12_regs1 = 4'd0;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *)
reg     [3:0] xilinxmultiregimpl13_regs0 = 4'd0;
(* async_reg = "true", dont_touch = "true" *)
reg     [3:0] xilinxmultiregimpl13_regs1 = 4'd0;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *)
reg     [2:0] xilinxmultiregimpl14_regs0 = 3'd0;
(* async_reg = "true", dont_touch = "true" *)
reg     [2:0] xilinxmultiregimpl14_regs1 = 3'd0;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *)
reg     [2:0] xilinxmultiregimpl15_regs0 = 3'd0;
(* async_reg = "true", dont_touch = "true" *)
reg     [2:0] xilinxmultiregimpl15_regs1 = 3'd0;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *)
reg     [2:0] xilinxmultiregimpl16_regs0 = 3'd0;
(* async_reg = "true", dont_touch = "true" *)
reg     [2:0] xilinxmultiregimpl16_regs1 = 3'd0;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *)
reg     [2:0] xilinxmultiregimpl17_regs0 = 3'd0;
(* async_reg = "true", dont_touch = "true" *)
reg     [2:0] xilinxmultiregimpl17_regs1 = 3'd0;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *)
reg     [4:0] xilinxmultiregimpl1_regs0 = 5'd0;
(* async_reg = "true", dont_touch = "true" *)
reg     [4:0] xilinxmultiregimpl1_regs1 = 5'd0;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *)
reg     [4:0] xilinxmultiregimpl2_regs0 = 5'd0;
(* async_reg = "true", dont_touch = "true" *)
reg     [4:0] xilinxmultiregimpl2_regs1 = 5'd0;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *)
reg     [4:0] xilinxmultiregimpl3_regs0 = 5'd0;
(* async_reg = "true", dont_touch = "true" *)
reg     [4:0] xilinxmultiregimpl3_regs1 = 5'd0;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *)
reg     [2:0] xilinxmultiregimpl4_regs0 = 3'd0;
(* async_reg = "true", dont_touch = "true" *)
reg     [2:0] xilinxmultiregimpl4_regs1 = 3'd0;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *)
reg     [2:0] xilinxmultiregimpl5_regs0 = 3'd0;
(* async_reg = "true", dont_touch = "true" *)
reg     [2:0] xilinxmultiregimpl5_regs1 = 3'd0;
wire          xilinxmultiregimpl6;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *)
reg           xilinxmultiregimpl6_regs0 = 1'd0;
(* async_reg = "true", dont_touch = "true" *)
reg           xilinxmultiregimpl6_regs1 = 1'd0;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *)
reg    [15:0] xilinxmultiregimpl7_regs0 = 16'd0;
(* async_reg = "true", dont_touch = "true" *)
reg    [15:0] xilinxmultiregimpl7_regs1 = 16'd0;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *)
reg    [15:0] xilinxmultiregimpl8_regs0 = 16'd0;
(* async_reg = "true", dont_touch = "true" *)
reg    [15:0] xilinxmultiregimpl8_regs1 = 16'd0;
(* async_reg = "true", mr_ff = "true", dont_touch = "true" *)
reg           xilinxmultiregimpl9_regs0 = 1'd0;
(* async_reg = "true", dont_touch = "true" *)
reg           xilinxmultiregimpl9_regs1 = 1'd0;

//------------------------------------------------------------------------------
// Combinatorial Logic
//------------------------------------------------------------------------------

assign mmap_axi_lite_awvalid = axiliteinterface0_aw_valid;
assign mmap_axi_lite_awaddr = axiliteinterface0_aw_payload_addr;
assign mmap_axi_lite_awprot = axiliteinterface0_aw_payload_prot;
assign axiliteinterface0_aw_ready = mmap_axi_lite_awready;
assign mmap_axi_lite_wvalid = axiliteinterface0_w_valid;
assign mmap_axi_lite_wdata = axiliteinterface0_w_payload_data;
assign mmap_axi_lite_wstrb = axiliteinterface0_w_payload_strb;
assign axiliteinterface0_w_ready = mmap_axi_lite_wready;
assign axiliteinterface0_b_valid = mmap_axi_lite_bvalid;
assign axiliteinterface0_b_payload_resp = mmap_axi_lite_bresp;
assign mmap_axi_lite_bready = axiliteinterface0_b_ready;
assign mmap_axi_lite_arvalid = axiliteinterface0_ar_valid;
assign mmap_axi_lite_araddr = axiliteinterface0_ar_payload_addr;
assign mmap_axi_lite_arprot = axiliteinterface0_ar_payload_prot;
assign axiliteinterface0_ar_ready = mmap_axi_lite_arready;
assign axiliteinterface0_r_valid = mmap_axi_lite_rvalid;
assign axiliteinterface0_r_payload_resp = mmap_axi_lite_rresp;
assign axiliteinterface0_r_payload_data = mmap_axi_lite_rdata;
assign mmap_axi_lite_rready = axiliteinterface0_r_ready;
assign axiliteinterface1_aw_valid = mmap_slave_axi_lite_awvalid;
assign axiliteinterface1_aw_payload_addr = mmap_slave_axi_lite_awaddr;
assign axiliteinterface1_aw_payload_prot = mmap_slave_axi_lite_awprot;
assign mmap_slave_axi_lite_awready = axiliteinterface1_aw_ready;
assign axiliteinterface1_w_valid = mmap_slave_axi_lite_wvalid;
assign axiliteinterface1_w_payload_data = mmap_slave_axi_lite_wdata;
assign axiliteinterface1_w_payload_strb = mmap_slave_axi_lite_wstrb;
assign mmap_slave_axi_lite_wready = axiliteinterface1_w_ready;
assign mmap_slave_axi_lite_bvalid = axiliteinterface1_b_valid;
assign mmap_slave_axi_lite_bresp = axiliteinterface1_b_payload_resp;
assign axiliteinterface1_b_ready = mmap_slave_axi_lite_bready;
assign axiliteinterface1_ar_valid = mmap_slave_axi_lite_arvalid;
assign axiliteinterface1_ar_payload_addr = mmap_slave_axi_lite_araddr;
assign axiliteinterface1_ar_payload_prot = mmap_slave_axi_lite_arprot;
assign mmap_slave_axi_lite_arready = axiliteinterface1_ar_ready;
assign mmap_slave_axi_lite_rvalid = axiliteinterface1_r_valid;
assign mmap_slave_axi_lite_rresp = axiliteinterface1_r_payload_resp;
assign mmap_slave_axi_lite_rdata = axiliteinterface1_r_payload_data;
assign axiliteinterface1_r_ready = mmap_slave_axi_lite_rready;
assign pcie_wishbone_slave_wishbone_adr = interface1_wb_adr;
assign pcie_wishbone_slave_wishbone_dat_w = interface1_wb_dat_w;
assign interface1_wb_dat_r = pcie_wishbone_slave_wishbone_dat_r;
assign pcie_wishbone_slave_wishbone_sel = interface1_wb_sel;
assign pcie_wishbone_slave_wishbone_cyc = interface1_wb_cyc;
assign pcie_wishbone_slave_wishbone_stb = interface1_wb_stb;
assign interface1_wb_ack = pcie_wishbone_slave_wishbone_ack;
assign pcie_wishbone_slave_wishbone_we = interface1_wb_we;
assign pcie_wishbone_slave_wishbone_cti = interface1_wb_cti;
assign pcie_wishbone_slave_wishbone_bte = interface1_wb_bte;
assign interface1_wb_err = pcie_wishbone_slave_wishbone_err;
assign dma0_status_writer_enable = litepciedma_writer_enable_storage[0];
assign bufferizeendpoints0_sink_sink_valid = (dma0_writer_axi_tvalid & litepciedma_writer_enable_storage[0]);
assign dma0_writer_axi_tready = (bufferizeendpoints0_sink_sink_ready & litepciedma_writer_enable_storage[0]);
assign bufferizeendpoints0_sink_sink_last = dma0_writer_axi_tlast;
assign bufferizeendpoints0_sink_sink_payload_data = dma0_writer_axi_tdata;
assign bufferizeendpoints0_sink_sink_first = dma0_writer_axi_tuser;
assign dma0_status_reader_enable = litepciedma_reader_enable_storage[0];
assign dma0_reader_axi_tvalid = (bufferizeendpoints1_source_source_valid & litepciedma_reader_enable_storage[0]);
assign bufferizeendpoints1_source_source_ready = (dma0_reader_axi_tready | (~litepciedma_reader_enable_storage[0]));
assign dma0_reader_axi_tlast = bufferizeendpoints1_source_source_last;
assign dma0_reader_axi_tdata = bufferizeendpoints1_source_source_payload_data;
assign dma0_reader_axi_tuser = bufferizeendpoints1_source_source_first;
always @(*) begin
    pcie_msi_irqs <= 64'd0;
    pcie_msi_irqs[63:32] <= msi_irqs;
    pcie_msi_irqs[0] <= litepciedma_reader_irq;
    pcie_msi_irqs[1] <= litepciedma_writer_irq;
end
assign ptm_requester_time_clk = ptm_time_clk;
assign ptm_requester_time_rst = ptm_time_rst;
assign ptm_requester_time0 = ptm_time_ns;
assign bus_error = error;
assign shared_adr = array_muxed0;
assign shared_dat_w = array_muxed1;
assign shared_sel = array_muxed2;
assign shared_cyc = array_muxed3;
assign shared_stb = array_muxed4;
assign shared_we = array_muxed5;
assign shared_cti = array_muxed6;
assign shared_bte = array_muxed7;
assign pcie_wishbone_master_wishbone_dat_r = shared_dat_r;
assign pcie_wishbone_master_wishbone_ack = (shared_ack & (grant == 1'd0));
assign pcie_wishbone_master_wishbone_err = (shared_err & (grant == 1'd0));
assign request = {pcie_wishbone_master_wishbone_cyc};
assign grant = 1'd0;
always @(*) begin
    slave_sel <= 2'd0;
    slave_sel[0] <= (shared_adr[29:23] == 1'd1);
    slave_sel[1] <= (shared_adr[29:14] == 1'd0);
end
assign interface0_wb_adr = shared_adr;
assign interface0_wb_dat_w = shared_dat_w;
assign interface0_wb_sel = shared_sel;
assign interface0_wb_stb = shared_stb;
assign interface0_wb_we = shared_we;
assign interface0_wb_cti = shared_cti;
assign interface0_wb_bte = shared_bte;
assign litepciecore_wishbone_adr = shared_adr;
assign litepciecore_wishbone_dat_w = shared_dat_w;
assign litepciecore_wishbone_sel = shared_sel;
assign litepciecore_wishbone_stb = shared_stb;
assign litepciecore_wishbone_we = shared_we;
assign litepciecore_wishbone_cti = shared_cti;
assign litepciecore_wishbone_bte = shared_bte;
assign interface0_wb_cyc = (shared_cyc & slave_sel[0]);
assign litepciecore_wishbone_cyc = (shared_cyc & slave_sel[1]);
assign shared_err = (interface0_wb_err | litepciecore_wishbone_err);
assign wait_1 = ((shared_stb & shared_cyc) & (~shared_ack));
always @(*) begin
    error <= 1'd0;
    shared_ack <= 1'd0;
    shared_dat_r <= 32'd0;
    shared_ack <= (interface0_wb_ack | litepciecore_wishbone_ack);
    shared_dat_r <= (({32{slave_sel_r[0]}} & interface0_wb_dat_r) | ({32{slave_sel_r[1]}} & litepciecore_wishbone_dat_r));
    if (done) begin
        shared_dat_r <= 32'd4294967295;
        shared_ack <= 1'd1;
        error <= 1'd1;
    end
end
assign done = (count == 1'd0);
assign bus_errors_status = bus_errors;
assign clk = pcie_clk;
assign rst = pcie_rst;
assign sys_clk = pcie_clk;
assign sys_rst = pcie_rst;
assign s7pciephy_pcie_rst_n = pcie_rst_n;
assign s7pciephy_tx_datapath_sink_sink_valid = s7pciephy_sink_valid;
assign s7pciephy_sink_ready = s7pciephy_tx_datapath_sink_sink_ready;
assign s7pciephy_tx_datapath_sink_sink_first = s7pciephy_sink_first;
assign s7pciephy_tx_datapath_sink_sink_last = s7pciephy_sink_last;
assign s7pciephy_tx_datapath_sink_sink_payload_dat = s7pciephy_sink_payload_dat;
assign s7pciephy_tx_datapath_sink_sink_payload_be = s7pciephy_sink_payload_be;
assign s7pciephy_source_valid = s7pciephy_rx_datapath_source_source_valid;
assign s7pciephy_rx_datapath_source_source_ready = s7pciephy_source_ready;
assign s7pciephy_source_first = s7pciephy_rx_datapath_source_source_first;
assign s7pciephy_source_last = s7pciephy_rx_datapath_source_source_last;
assign s7pciephy_source_payload_dat = s7pciephy_rx_datapath_source_source_payload_dat;
assign s7pciephy_source_payload_be = s7pciephy_rx_datapath_source_source_payload_be;
assign s7pciephy_msi_cdc_sink_sink_valid = s7pciephy_msi_valid;
assign s7pciephy_msi_ready = s7pciephy_msi_cdc_sink_sink_ready;
assign s7pciephy_msi_cdc_sink_sink_first = s7pciephy_msi_first;
assign s7pciephy_msi_cdc_sink_sink_last = s7pciephy_msi_last;
assign s7pciephy_msi_cdc_sink_sink_payload_dat = s7pciephy_msi_payload_dat;
assign s7pciephy_rx_datapath_sink_sink_first = 1'd0;
assign s7pciephy_rx_datapath_sink_sink_last = s7pciephy_m_axis_rx_tlast;
assign s7pciephy_tx_datapath_pipe_valid_sink_valid = s7pciephy_tx_datapath_sink_sink_valid;
assign s7pciephy_tx_datapath_sink_sink_ready = s7pciephy_tx_datapath_pipe_valid_sink_ready;
assign s7pciephy_tx_datapath_pipe_valid_sink_first = s7pciephy_tx_datapath_sink_sink_first;
assign s7pciephy_tx_datapath_pipe_valid_sink_last = s7pciephy_tx_datapath_sink_sink_last;
assign s7pciephy_tx_datapath_pipe_valid_sink_payload_dat = s7pciephy_tx_datapath_sink_sink_payload_dat;
assign s7pciephy_tx_datapath_pipe_valid_sink_payload_be = s7pciephy_tx_datapath_sink_sink_payload_be;
assign s7pciephy_tx_datapath_cdc_sink_sink_valid = s7pciephy_tx_datapath_pipe_valid_source_valid;
assign s7pciephy_tx_datapath_pipe_valid_source_ready = s7pciephy_tx_datapath_cdc_sink_sink_ready;
assign s7pciephy_tx_datapath_cdc_sink_sink_first = s7pciephy_tx_datapath_pipe_valid_source_first;
assign s7pciephy_tx_datapath_cdc_sink_sink_last = s7pciephy_tx_datapath_pipe_valid_source_last;
assign s7pciephy_tx_datapath_cdc_sink_sink_payload_dat = s7pciephy_tx_datapath_pipe_valid_source_payload_dat;
assign s7pciephy_tx_datapath_cdc_sink_sink_payload_be = s7pciephy_tx_datapath_pipe_valid_source_payload_be;
assign s7pciephy_tx_datapath_converter_sink_valid = s7pciephy_tx_datapath_cdc_source_source_valid;
assign s7pciephy_tx_datapath_cdc_source_source_ready = s7pciephy_tx_datapath_converter_sink_ready;
assign s7pciephy_tx_datapath_converter_sink_first = s7pciephy_tx_datapath_cdc_source_source_first;
assign s7pciephy_tx_datapath_converter_sink_last = s7pciephy_tx_datapath_cdc_source_source_last;
assign s7pciephy_tx_datapath_converter_sink_payload_dat = s7pciephy_tx_datapath_cdc_source_source_payload_dat;
assign s7pciephy_tx_datapath_converter_sink_payload_be = s7pciephy_tx_datapath_cdc_source_source_payload_be;
assign s7pciephy_tx_datapath_pipe_ready_sink_valid = s7pciephy_tx_datapath_converter_source_valid;
assign s7pciephy_tx_datapath_converter_source_ready = s7pciephy_tx_datapath_pipe_ready_sink_ready;
assign s7pciephy_tx_datapath_pipe_ready_sink_first = s7pciephy_tx_datapath_converter_source_first;
assign s7pciephy_tx_datapath_pipe_ready_sink_last = s7pciephy_tx_datapath_converter_source_last;
assign s7pciephy_tx_datapath_pipe_ready_sink_payload_dat = s7pciephy_tx_datapath_converter_source_payload_dat;
assign s7pciephy_tx_datapath_pipe_ready_sink_payload_be = s7pciephy_tx_datapath_converter_source_payload_be;
assign s7pciephy_tx_datapath_source_source_valid = s7pciephy_tx_datapath_pipe_ready_source_valid;
assign s7pciephy_tx_datapath_pipe_ready_source_ready = s7pciephy_tx_datapath_source_source_ready;
assign s7pciephy_tx_datapath_source_source_first = s7pciephy_tx_datapath_pipe_ready_source_first;
assign s7pciephy_tx_datapath_source_source_last = s7pciephy_tx_datapath_pipe_ready_source_last;
assign s7pciephy_tx_datapath_source_source_payload_dat = s7pciephy_tx_datapath_pipe_ready_source_payload_dat;
assign s7pciephy_tx_datapath_source_source_payload_be = s7pciephy_tx_datapath_pipe_ready_source_payload_be;
assign s7pciephy_tx_datapath_pipe_valid_sink_ready = ((~s7pciephy_tx_datapath_pipe_valid_source_valid) | s7pciephy_tx_datapath_pipe_valid_source_ready);
assign from140100637018048_clk = sys_clk;
assign to140100637018048_clk = pcie_clk;
assign s7pciephy_tx_datapath_cdc_cd_rst = (sys_rst | pcie_rst);
assign s7pciephy_tx_datapath_cdc_cdc_sink_valid = s7pciephy_tx_datapath_cdc_sink_sink_valid;
assign s7pciephy_tx_datapath_cdc_sink_sink_ready = s7pciephy_tx_datapath_cdc_cdc_sink_ready;
assign s7pciephy_tx_datapath_cdc_cdc_sink_first = s7pciephy_tx_datapath_cdc_sink_sink_first;
assign s7pciephy_tx_datapath_cdc_cdc_sink_last = s7pciephy_tx_datapath_cdc_sink_sink_last;
assign s7pciephy_tx_datapath_cdc_cdc_sink_payload_dat = s7pciephy_tx_datapath_cdc_sink_sink_payload_dat;
assign s7pciephy_tx_datapath_cdc_cdc_sink_payload_be = s7pciephy_tx_datapath_cdc_sink_sink_payload_be;
assign s7pciephy_tx_datapath_cdc_source_source_valid = s7pciephy_tx_datapath_cdc_cdc_source_valid;
assign s7pciephy_tx_datapath_cdc_cdc_source_ready = s7pciephy_tx_datapath_cdc_source_source_ready;
assign s7pciephy_tx_datapath_cdc_source_source_first = s7pciephy_tx_datapath_cdc_cdc_source_first;
assign s7pciephy_tx_datapath_cdc_source_source_last = s7pciephy_tx_datapath_cdc_cdc_source_last;
assign s7pciephy_tx_datapath_cdc_source_source_payload_dat = s7pciephy_tx_datapath_cdc_cdc_source_payload_dat;
assign s7pciephy_tx_datapath_cdc_source_source_payload_be = s7pciephy_tx_datapath_cdc_cdc_source_payload_be;
assign s7pciephy_tx_datapath_cdc_cdc_asyncfifo_din = {s7pciephy_tx_datapath_cdc_cdc_fifo_in_last, s7pciephy_tx_datapath_cdc_cdc_fifo_in_first, s7pciephy_tx_datapath_cdc_cdc_fifo_in_payload_be, s7pciephy_tx_datapath_cdc_cdc_fifo_in_payload_dat};
assign {s7pciephy_tx_datapath_cdc_cdc_fifo_out_last, s7pciephy_tx_datapath_cdc_cdc_fifo_out_first, s7pciephy_tx_datapath_cdc_cdc_fifo_out_payload_be, s7pciephy_tx_datapath_cdc_cdc_fifo_out_payload_dat} = s7pciephy_tx_datapath_cdc_cdc_asyncfifo_dout;
assign s7pciephy_tx_datapath_cdc_cdc_sink_ready = s7pciephy_tx_datapath_cdc_cdc_asyncfifo_writable;
assign s7pciephy_tx_datapath_cdc_cdc_asyncfifo_we = s7pciephy_tx_datapath_cdc_cdc_sink_valid;
assign s7pciephy_tx_datapath_cdc_cdc_fifo_in_first = s7pciephy_tx_datapath_cdc_cdc_sink_first;
assign s7pciephy_tx_datapath_cdc_cdc_fifo_in_last = s7pciephy_tx_datapath_cdc_cdc_sink_last;
assign s7pciephy_tx_datapath_cdc_cdc_fifo_in_payload_dat = s7pciephy_tx_datapath_cdc_cdc_sink_payload_dat;
assign s7pciephy_tx_datapath_cdc_cdc_fifo_in_payload_be = s7pciephy_tx_datapath_cdc_cdc_sink_payload_be;
assign s7pciephy_tx_datapath_cdc_cdc_source_valid = s7pciephy_tx_datapath_cdc_cdc_asyncfifo_readable;
assign s7pciephy_tx_datapath_cdc_cdc_source_first = s7pciephy_tx_datapath_cdc_cdc_fifo_out_first;
assign s7pciephy_tx_datapath_cdc_cdc_source_last = s7pciephy_tx_datapath_cdc_cdc_fifo_out_last;
assign s7pciephy_tx_datapath_cdc_cdc_source_payload_dat = s7pciephy_tx_datapath_cdc_cdc_fifo_out_payload_dat;
assign s7pciephy_tx_datapath_cdc_cdc_source_payload_be = s7pciephy_tx_datapath_cdc_cdc_fifo_out_payload_be;
assign s7pciephy_tx_datapath_cdc_cdc_asyncfifo_re = s7pciephy_tx_datapath_cdc_cdc_source_ready;
assign s7pciephy_tx_datapath_cdc_cdc_graycounter0_ce = (s7pciephy_tx_datapath_cdc_cdc_asyncfifo_writable & s7pciephy_tx_datapath_cdc_cdc_asyncfifo_we);
assign s7pciephy_tx_datapath_cdc_cdc_graycounter1_ce = (s7pciephy_tx_datapath_cdc_cdc_asyncfifo_readable & s7pciephy_tx_datapath_cdc_cdc_asyncfifo_re);
assign s7pciephy_tx_datapath_cdc_cdc_asyncfifo_writable = (((s7pciephy_tx_datapath_cdc_cdc_graycounter0_q[4] == s7pciephy_tx_datapath_cdc_cdc_consume_wdomain[4]) | (s7pciephy_tx_datapath_cdc_cdc_graycounter0_q[3] == s7pciephy_tx_datapath_cdc_cdc_consume_wdomain[3])) | (s7pciephy_tx_datapath_cdc_cdc_graycounter0_q[2:0] != s7pciephy_tx_datapath_cdc_cdc_consume_wdomain[2:0]));
assign s7pciephy_tx_datapath_cdc_cdc_asyncfifo_readable = (s7pciephy_tx_datapath_cdc_cdc_graycounter1_q != s7pciephy_tx_datapath_cdc_cdc_produce_rdomain);
assign s7pciephy_tx_datapath_cdc_cdc_wrport_adr = s7pciephy_tx_datapath_cdc_cdc_graycounter0_q_binary[3:0];
assign s7pciephy_tx_datapath_cdc_cdc_wrport_dat_w = s7pciephy_tx_datapath_cdc_cdc_asyncfifo_din;
assign s7pciephy_tx_datapath_cdc_cdc_wrport_we = s7pciephy_tx_datapath_cdc_cdc_graycounter0_ce;
assign s7pciephy_tx_datapath_cdc_cdc_rdport_adr = s7pciephy_tx_datapath_cdc_cdc_graycounter1_q_next_binary[3:0];
assign s7pciephy_tx_datapath_cdc_cdc_asyncfifo_dout = s7pciephy_tx_datapath_cdc_cdc_rdport_dat_r;
always @(*) begin
    s7pciephy_tx_datapath_cdc_cdc_graycounter0_q_next_binary <= 5'd0;
    if (s7pciephy_tx_datapath_cdc_cdc_graycounter0_ce) begin
        s7pciephy_tx_datapath_cdc_cdc_graycounter0_q_next_binary <= (s7pciephy_tx_datapath_cdc_cdc_graycounter0_q_binary + 1'd1);
    end else begin
        s7pciephy_tx_datapath_cdc_cdc_graycounter0_q_next_binary <= s7pciephy_tx_datapath_cdc_cdc_graycounter0_q_binary;
    end
end
assign s7pciephy_tx_datapath_cdc_cdc_graycounter0_q_next = (s7pciephy_tx_datapath_cdc_cdc_graycounter0_q_next_binary ^ s7pciephy_tx_datapath_cdc_cdc_graycounter0_q_next_binary[4:1]);
always @(*) begin
    s7pciephy_tx_datapath_cdc_cdc_graycounter1_q_next_binary <= 5'd0;
    if (s7pciephy_tx_datapath_cdc_cdc_graycounter1_ce) begin
        s7pciephy_tx_datapath_cdc_cdc_graycounter1_q_next_binary <= (s7pciephy_tx_datapath_cdc_cdc_graycounter1_q_binary + 1'd1);
    end else begin
        s7pciephy_tx_datapath_cdc_cdc_graycounter1_q_next_binary <= s7pciephy_tx_datapath_cdc_cdc_graycounter1_q_binary;
    end
end
assign s7pciephy_tx_datapath_cdc_cdc_graycounter1_q_next = (s7pciephy_tx_datapath_cdc_cdc_graycounter1_q_next_binary ^ s7pciephy_tx_datapath_cdc_cdc_graycounter1_q_next_binary[4:1]);
assign s7pciephy_tx_datapath_converter_converter_sink_valid = s7pciephy_tx_datapath_converter_sink_valid;
assign s7pciephy_tx_datapath_converter_converter_sink_first = s7pciephy_tx_datapath_converter_sink_first;
assign s7pciephy_tx_datapath_converter_converter_sink_last = s7pciephy_tx_datapath_converter_sink_last;
assign s7pciephy_tx_datapath_converter_sink_ready = s7pciephy_tx_datapath_converter_converter_sink_ready;
assign s7pciephy_tx_datapath_converter_converter_sink_payload_data = {s7pciephy_tx_datapath_converter_sink_payload_be, s7pciephy_tx_datapath_converter_sink_payload_dat};
assign s7pciephy_tx_datapath_converter_source_valid = s7pciephy_tx_datapath_converter_source_source_valid;
assign s7pciephy_tx_datapath_converter_source_first = s7pciephy_tx_datapath_converter_source_source_first;
assign s7pciephy_tx_datapath_converter_source_last = s7pciephy_tx_datapath_converter_source_source_last;
assign s7pciephy_tx_datapath_converter_source_source_ready = s7pciephy_tx_datapath_converter_source_ready;
assign {s7pciephy_tx_datapath_converter_source_payload_be, s7pciephy_tx_datapath_converter_source_payload_dat} = s7pciephy_tx_datapath_converter_source_source_payload_data;
assign s7pciephy_tx_datapath_converter_source_source_valid = s7pciephy_tx_datapath_converter_converter_source_valid;
assign s7pciephy_tx_datapath_converter_converter_source_ready = s7pciephy_tx_datapath_converter_source_source_ready;
assign s7pciephy_tx_datapath_converter_source_source_first = s7pciephy_tx_datapath_converter_converter_source_first;
assign s7pciephy_tx_datapath_converter_source_source_last = s7pciephy_tx_datapath_converter_converter_source_last;
assign s7pciephy_tx_datapath_converter_source_source_payload_data = s7pciephy_tx_datapath_converter_converter_source_payload_data;
assign s7pciephy_tx_datapath_converter_converter_source_valid = s7pciephy_tx_datapath_converter_converter_sink_valid;
assign s7pciephy_tx_datapath_converter_converter_sink_ready = s7pciephy_tx_datapath_converter_converter_source_ready;
assign s7pciephy_tx_datapath_converter_converter_source_first = s7pciephy_tx_datapath_converter_converter_sink_first;
assign s7pciephy_tx_datapath_converter_converter_source_last = s7pciephy_tx_datapath_converter_converter_sink_last;
assign s7pciephy_tx_datapath_converter_converter_source_payload_data = s7pciephy_tx_datapath_converter_converter_sink_payload_data;
assign s7pciephy_tx_datapath_converter_converter_source_payload_valid_token_count = 1'd1;
assign s7pciephy_tx_datapath_pipe_ready_sink_ready = (~s7pciephy_tx_datapath_pipe_ready_valid);
always @(*) begin
    s7pciephy_tx_datapath_pipe_ready_source_first <= 1'd0;
    s7pciephy_tx_datapath_pipe_ready_source_last <= 1'd0;
    s7pciephy_tx_datapath_pipe_ready_source_payload_be <= 8'd0;
    s7pciephy_tx_datapath_pipe_ready_source_payload_dat <= 64'd0;
    s7pciephy_tx_datapath_pipe_ready_source_valid <= 1'd0;
    if (s7pciephy_tx_datapath_pipe_ready_valid) begin
        s7pciephy_tx_datapath_pipe_ready_source_valid <= s7pciephy_tx_datapath_pipe_ready_sink_d_valid;
        s7pciephy_tx_datapath_pipe_ready_source_first <= s7pciephy_tx_datapath_pipe_ready_sink_d_first;
        s7pciephy_tx_datapath_pipe_ready_source_last <= s7pciephy_tx_datapath_pipe_ready_sink_d_last;
        s7pciephy_tx_datapath_pipe_ready_source_payload_dat <= s7pciephy_tx_datapath_pipe_ready_sink_d_payload_dat;
        s7pciephy_tx_datapath_pipe_ready_source_payload_be <= s7pciephy_tx_datapath_pipe_ready_sink_d_payload_be;
    end else begin
        s7pciephy_tx_datapath_pipe_ready_source_valid <= s7pciephy_tx_datapath_pipe_ready_sink_valid;
        s7pciephy_tx_datapath_pipe_ready_source_first <= s7pciephy_tx_datapath_pipe_ready_sink_first;
        s7pciephy_tx_datapath_pipe_ready_source_last <= s7pciephy_tx_datapath_pipe_ready_sink_last;
        s7pciephy_tx_datapath_pipe_ready_source_payload_dat <= s7pciephy_tx_datapath_pipe_ready_sink_payload_dat;
        s7pciephy_tx_datapath_pipe_ready_source_payload_be <= s7pciephy_tx_datapath_pipe_ready_sink_payload_be;
    end
end
assign s7pciephy_rx_datapath_pipe_ready_sink_valid = s7pciephy_rx_datapath_sink_sink_valid;
assign s7pciephy_rx_datapath_sink_sink_ready = s7pciephy_rx_datapath_pipe_ready_sink_ready;
assign s7pciephy_rx_datapath_pipe_ready_sink_first = s7pciephy_rx_datapath_sink_sink_first;
assign s7pciephy_rx_datapath_pipe_ready_sink_last = s7pciephy_rx_datapath_sink_sink_last;
assign s7pciephy_rx_datapath_pipe_ready_sink_payload_dat = s7pciephy_rx_datapath_sink_sink_payload_dat;
assign s7pciephy_rx_datapath_pipe_ready_sink_payload_be = s7pciephy_rx_datapath_sink_sink_payload_be;
assign s7pciephy_rx_datapath_converter_sink_valid = s7pciephy_rx_datapath_pipe_ready_source_valid;
assign s7pciephy_rx_datapath_pipe_ready_source_ready = s7pciephy_rx_datapath_converter_sink_ready;
assign s7pciephy_rx_datapath_converter_sink_first = s7pciephy_rx_datapath_pipe_ready_source_first;
assign s7pciephy_rx_datapath_converter_sink_last = s7pciephy_rx_datapath_pipe_ready_source_last;
assign s7pciephy_rx_datapath_converter_sink_payload_dat = s7pciephy_rx_datapath_pipe_ready_source_payload_dat;
assign s7pciephy_rx_datapath_converter_sink_payload_be = s7pciephy_rx_datapath_pipe_ready_source_payload_be;
assign s7pciephy_rx_datapath_cdc_sink_sink_valid = s7pciephy_rx_datapath_converter_source_valid;
assign s7pciephy_rx_datapath_converter_source_ready = s7pciephy_rx_datapath_cdc_sink_sink_ready;
assign s7pciephy_rx_datapath_cdc_sink_sink_first = s7pciephy_rx_datapath_converter_source_first;
assign s7pciephy_rx_datapath_cdc_sink_sink_last = s7pciephy_rx_datapath_converter_source_last;
assign s7pciephy_rx_datapath_cdc_sink_sink_payload_dat = s7pciephy_rx_datapath_converter_source_payload_dat;
assign s7pciephy_rx_datapath_cdc_sink_sink_payload_be = s7pciephy_rx_datapath_converter_source_payload_be;
assign s7pciephy_rx_datapath_pipe_valid_sink_valid = s7pciephy_rx_datapath_cdc_source_source_valid;
assign s7pciephy_rx_datapath_cdc_source_source_ready = s7pciephy_rx_datapath_pipe_valid_sink_ready;
assign s7pciephy_rx_datapath_pipe_valid_sink_first = s7pciephy_rx_datapath_cdc_source_source_first;
assign s7pciephy_rx_datapath_pipe_valid_sink_last = s7pciephy_rx_datapath_cdc_source_source_last;
assign s7pciephy_rx_datapath_pipe_valid_sink_payload_dat = s7pciephy_rx_datapath_cdc_source_source_payload_dat;
assign s7pciephy_rx_datapath_pipe_valid_sink_payload_be = s7pciephy_rx_datapath_cdc_source_source_payload_be;
assign s7pciephy_rx_datapath_source_source_valid = s7pciephy_rx_datapath_pipe_valid_source_valid;
assign s7pciephy_rx_datapath_pipe_valid_source_ready = s7pciephy_rx_datapath_source_source_ready;
assign s7pciephy_rx_datapath_source_source_first = s7pciephy_rx_datapath_pipe_valid_source_first;
assign s7pciephy_rx_datapath_source_source_last = s7pciephy_rx_datapath_pipe_valid_source_last;
assign s7pciephy_rx_datapath_source_source_payload_dat = s7pciephy_rx_datapath_pipe_valid_source_payload_dat;
assign s7pciephy_rx_datapath_source_source_payload_be = s7pciephy_rx_datapath_pipe_valid_source_payload_be;
assign s7pciephy_rx_datapath_pipe_ready_sink_ready = (~s7pciephy_rx_datapath_pipe_ready_valid);
always @(*) begin
    s7pciephy_rx_datapath_pipe_ready_source_first <= 1'd0;
    s7pciephy_rx_datapath_pipe_ready_source_last <= 1'd0;
    s7pciephy_rx_datapath_pipe_ready_source_payload_be <= 8'd0;
    s7pciephy_rx_datapath_pipe_ready_source_payload_dat <= 64'd0;
    s7pciephy_rx_datapath_pipe_ready_source_valid <= 1'd0;
    if (s7pciephy_rx_datapath_pipe_ready_valid) begin
        s7pciephy_rx_datapath_pipe_ready_source_valid <= s7pciephy_rx_datapath_pipe_ready_sink_d_valid;
        s7pciephy_rx_datapath_pipe_ready_source_first <= s7pciephy_rx_datapath_pipe_ready_sink_d_first;
        s7pciephy_rx_datapath_pipe_ready_source_last <= s7pciephy_rx_datapath_pipe_ready_sink_d_last;
        s7pciephy_rx_datapath_pipe_ready_source_payload_dat <= s7pciephy_rx_datapath_pipe_ready_sink_d_payload_dat;
        s7pciephy_rx_datapath_pipe_ready_source_payload_be <= s7pciephy_rx_datapath_pipe_ready_sink_d_payload_be;
    end else begin
        s7pciephy_rx_datapath_pipe_ready_source_valid <= s7pciephy_rx_datapath_pipe_ready_sink_valid;
        s7pciephy_rx_datapath_pipe_ready_source_first <= s7pciephy_rx_datapath_pipe_ready_sink_first;
        s7pciephy_rx_datapath_pipe_ready_source_last <= s7pciephy_rx_datapath_pipe_ready_sink_last;
        s7pciephy_rx_datapath_pipe_ready_source_payload_dat <= s7pciephy_rx_datapath_pipe_ready_sink_payload_dat;
        s7pciephy_rx_datapath_pipe_ready_source_payload_be <= s7pciephy_rx_datapath_pipe_ready_sink_payload_be;
    end
end
assign s7pciephy_rx_datapath_converter_converter_sink_valid = s7pciephy_rx_datapath_converter_sink_valid;
assign s7pciephy_rx_datapath_converter_converter_sink_first = s7pciephy_rx_datapath_converter_sink_first;
assign s7pciephy_rx_datapath_converter_converter_sink_last = s7pciephy_rx_datapath_converter_sink_last;
assign s7pciephy_rx_datapath_converter_sink_ready = s7pciephy_rx_datapath_converter_converter_sink_ready;
assign s7pciephy_rx_datapath_converter_converter_sink_payload_data = {s7pciephy_rx_datapath_converter_sink_payload_be, s7pciephy_rx_datapath_converter_sink_payload_dat};
assign s7pciephy_rx_datapath_converter_source_valid = s7pciephy_rx_datapath_converter_source_source_valid;
assign s7pciephy_rx_datapath_converter_source_first = s7pciephy_rx_datapath_converter_source_source_first;
assign s7pciephy_rx_datapath_converter_source_last = s7pciephy_rx_datapath_converter_source_source_last;
assign s7pciephy_rx_datapath_converter_source_source_ready = s7pciephy_rx_datapath_converter_source_ready;
assign {s7pciephy_rx_datapath_converter_source_payload_be, s7pciephy_rx_datapath_converter_source_payload_dat} = s7pciephy_rx_datapath_converter_source_source_payload_data;
assign s7pciephy_rx_datapath_converter_source_source_valid = s7pciephy_rx_datapath_converter_converter_source_valid;
assign s7pciephy_rx_datapath_converter_converter_source_ready = s7pciephy_rx_datapath_converter_source_source_ready;
assign s7pciephy_rx_datapath_converter_source_source_first = s7pciephy_rx_datapath_converter_converter_source_first;
assign s7pciephy_rx_datapath_converter_source_source_last = s7pciephy_rx_datapath_converter_converter_source_last;
assign s7pciephy_rx_datapath_converter_source_source_payload_data = s7pciephy_rx_datapath_converter_converter_source_payload_data;
assign s7pciephy_rx_datapath_converter_converter_source_valid = s7pciephy_rx_datapath_converter_converter_sink_valid;
assign s7pciephy_rx_datapath_converter_converter_sink_ready = s7pciephy_rx_datapath_converter_converter_source_ready;
assign s7pciephy_rx_datapath_converter_converter_source_first = s7pciephy_rx_datapath_converter_converter_sink_first;
assign s7pciephy_rx_datapath_converter_converter_source_last = s7pciephy_rx_datapath_converter_converter_sink_last;
assign s7pciephy_rx_datapath_converter_converter_source_payload_data = s7pciephy_rx_datapath_converter_converter_sink_payload_data;
assign s7pciephy_rx_datapath_converter_converter_source_payload_valid_token_count = 1'd1;
assign from140100636556256_clk = pcie_clk;
assign to140100636556256_clk = sys_clk;
assign s7pciephy_rx_datapath_cdc_cd_rst = (pcie_rst | sys_rst);
assign s7pciephy_rx_datapath_cdc_cdc_sink_valid = s7pciephy_rx_datapath_cdc_sink_sink_valid;
assign s7pciephy_rx_datapath_cdc_sink_sink_ready = s7pciephy_rx_datapath_cdc_cdc_sink_ready;
assign s7pciephy_rx_datapath_cdc_cdc_sink_first = s7pciephy_rx_datapath_cdc_sink_sink_first;
assign s7pciephy_rx_datapath_cdc_cdc_sink_last = s7pciephy_rx_datapath_cdc_sink_sink_last;
assign s7pciephy_rx_datapath_cdc_cdc_sink_payload_dat = s7pciephy_rx_datapath_cdc_sink_sink_payload_dat;
assign s7pciephy_rx_datapath_cdc_cdc_sink_payload_be = s7pciephy_rx_datapath_cdc_sink_sink_payload_be;
assign s7pciephy_rx_datapath_cdc_source_source_valid = s7pciephy_rx_datapath_cdc_cdc_source_valid;
assign s7pciephy_rx_datapath_cdc_cdc_source_ready = s7pciephy_rx_datapath_cdc_source_source_ready;
assign s7pciephy_rx_datapath_cdc_source_source_first = s7pciephy_rx_datapath_cdc_cdc_source_first;
assign s7pciephy_rx_datapath_cdc_source_source_last = s7pciephy_rx_datapath_cdc_cdc_source_last;
assign s7pciephy_rx_datapath_cdc_source_source_payload_dat = s7pciephy_rx_datapath_cdc_cdc_source_payload_dat;
assign s7pciephy_rx_datapath_cdc_source_source_payload_be = s7pciephy_rx_datapath_cdc_cdc_source_payload_be;
assign s7pciephy_rx_datapath_cdc_cdc_asyncfifo_din = {s7pciephy_rx_datapath_cdc_cdc_fifo_in_last, s7pciephy_rx_datapath_cdc_cdc_fifo_in_first, s7pciephy_rx_datapath_cdc_cdc_fifo_in_payload_be, s7pciephy_rx_datapath_cdc_cdc_fifo_in_payload_dat};
assign {s7pciephy_rx_datapath_cdc_cdc_fifo_out_last, s7pciephy_rx_datapath_cdc_cdc_fifo_out_first, s7pciephy_rx_datapath_cdc_cdc_fifo_out_payload_be, s7pciephy_rx_datapath_cdc_cdc_fifo_out_payload_dat} = s7pciephy_rx_datapath_cdc_cdc_asyncfifo_dout;
assign s7pciephy_rx_datapath_cdc_cdc_sink_ready = s7pciephy_rx_datapath_cdc_cdc_asyncfifo_writable;
assign s7pciephy_rx_datapath_cdc_cdc_asyncfifo_we = s7pciephy_rx_datapath_cdc_cdc_sink_valid;
assign s7pciephy_rx_datapath_cdc_cdc_fifo_in_first = s7pciephy_rx_datapath_cdc_cdc_sink_first;
assign s7pciephy_rx_datapath_cdc_cdc_fifo_in_last = s7pciephy_rx_datapath_cdc_cdc_sink_last;
assign s7pciephy_rx_datapath_cdc_cdc_fifo_in_payload_dat = s7pciephy_rx_datapath_cdc_cdc_sink_payload_dat;
assign s7pciephy_rx_datapath_cdc_cdc_fifo_in_payload_be = s7pciephy_rx_datapath_cdc_cdc_sink_payload_be;
assign s7pciephy_rx_datapath_cdc_cdc_source_valid = s7pciephy_rx_datapath_cdc_cdc_asyncfifo_readable;
assign s7pciephy_rx_datapath_cdc_cdc_source_first = s7pciephy_rx_datapath_cdc_cdc_fifo_out_first;
assign s7pciephy_rx_datapath_cdc_cdc_source_last = s7pciephy_rx_datapath_cdc_cdc_fifo_out_last;
assign s7pciephy_rx_datapath_cdc_cdc_source_payload_dat = s7pciephy_rx_datapath_cdc_cdc_fifo_out_payload_dat;
assign s7pciephy_rx_datapath_cdc_cdc_source_payload_be = s7pciephy_rx_datapath_cdc_cdc_fifo_out_payload_be;
assign s7pciephy_rx_datapath_cdc_cdc_asyncfifo_re = s7pciephy_rx_datapath_cdc_cdc_source_ready;
assign s7pciephy_rx_datapath_cdc_cdc_graycounter0_ce = (s7pciephy_rx_datapath_cdc_cdc_asyncfifo_writable & s7pciephy_rx_datapath_cdc_cdc_asyncfifo_we);
assign s7pciephy_rx_datapath_cdc_cdc_graycounter1_ce = (s7pciephy_rx_datapath_cdc_cdc_asyncfifo_readable & s7pciephy_rx_datapath_cdc_cdc_asyncfifo_re);
assign s7pciephy_rx_datapath_cdc_cdc_asyncfifo_writable = (((s7pciephy_rx_datapath_cdc_cdc_graycounter0_q[4] == s7pciephy_rx_datapath_cdc_cdc_consume_wdomain[4]) | (s7pciephy_rx_datapath_cdc_cdc_graycounter0_q[3] == s7pciephy_rx_datapath_cdc_cdc_consume_wdomain[3])) | (s7pciephy_rx_datapath_cdc_cdc_graycounter0_q[2:0] != s7pciephy_rx_datapath_cdc_cdc_consume_wdomain[2:0]));
assign s7pciephy_rx_datapath_cdc_cdc_asyncfifo_readable = (s7pciephy_rx_datapath_cdc_cdc_graycounter1_q != s7pciephy_rx_datapath_cdc_cdc_produce_rdomain);
assign s7pciephy_rx_datapath_cdc_cdc_wrport_adr = s7pciephy_rx_datapath_cdc_cdc_graycounter0_q_binary[3:0];
assign s7pciephy_rx_datapath_cdc_cdc_wrport_dat_w = s7pciephy_rx_datapath_cdc_cdc_asyncfifo_din;
assign s7pciephy_rx_datapath_cdc_cdc_wrport_we = s7pciephy_rx_datapath_cdc_cdc_graycounter0_ce;
assign s7pciephy_rx_datapath_cdc_cdc_rdport_adr = s7pciephy_rx_datapath_cdc_cdc_graycounter1_q_next_binary[3:0];
assign s7pciephy_rx_datapath_cdc_cdc_asyncfifo_dout = s7pciephy_rx_datapath_cdc_cdc_rdport_dat_r;
always @(*) begin
    s7pciephy_rx_datapath_cdc_cdc_graycounter0_q_next_binary <= 5'd0;
    if (s7pciephy_rx_datapath_cdc_cdc_graycounter0_ce) begin
        s7pciephy_rx_datapath_cdc_cdc_graycounter0_q_next_binary <= (s7pciephy_rx_datapath_cdc_cdc_graycounter0_q_binary + 1'd1);
    end else begin
        s7pciephy_rx_datapath_cdc_cdc_graycounter0_q_next_binary <= s7pciephy_rx_datapath_cdc_cdc_graycounter0_q_binary;
    end
end
assign s7pciephy_rx_datapath_cdc_cdc_graycounter0_q_next = (s7pciephy_rx_datapath_cdc_cdc_graycounter0_q_next_binary ^ s7pciephy_rx_datapath_cdc_cdc_graycounter0_q_next_binary[4:1]);
always @(*) begin
    s7pciephy_rx_datapath_cdc_cdc_graycounter1_q_next_binary <= 5'd0;
    if (s7pciephy_rx_datapath_cdc_cdc_graycounter1_ce) begin
        s7pciephy_rx_datapath_cdc_cdc_graycounter1_q_next_binary <= (s7pciephy_rx_datapath_cdc_cdc_graycounter1_q_binary + 1'd1);
    end else begin
        s7pciephy_rx_datapath_cdc_cdc_graycounter1_q_next_binary <= s7pciephy_rx_datapath_cdc_cdc_graycounter1_q_binary;
    end
end
assign s7pciephy_rx_datapath_cdc_cdc_graycounter1_q_next = (s7pciephy_rx_datapath_cdc_cdc_graycounter1_q_next_binary ^ s7pciephy_rx_datapath_cdc_cdc_graycounter1_q_next_binary[4:1]);
assign s7pciephy_rx_datapath_pipe_valid_sink_ready = ((~s7pciephy_rx_datapath_pipe_valid_source_valid) | s7pciephy_rx_datapath_pipe_valid_source_ready);
assign from140100636878112_clk = sys_clk;
assign to140100636878112_clk = pcie_clk;
assign s7pciephy_msi_cdc_cd_rst = (sys_rst | pcie_rst);
assign s7pciephy_msi_cdc_cdc_sink_valid = s7pciephy_msi_cdc_sink_sink_valid;
assign s7pciephy_msi_cdc_sink_sink_ready = s7pciephy_msi_cdc_cdc_sink_ready;
assign s7pciephy_msi_cdc_cdc_sink_first = s7pciephy_msi_cdc_sink_sink_first;
assign s7pciephy_msi_cdc_cdc_sink_last = s7pciephy_msi_cdc_sink_sink_last;
assign s7pciephy_msi_cdc_cdc_sink_payload_dat = s7pciephy_msi_cdc_sink_sink_payload_dat;
assign s7pciephy_msi_cdc_source_source_valid = s7pciephy_msi_cdc_cdc_source_valid;
assign s7pciephy_msi_cdc_cdc_source_ready = s7pciephy_msi_cdc_source_source_ready;
assign s7pciephy_msi_cdc_source_source_first = s7pciephy_msi_cdc_cdc_source_first;
assign s7pciephy_msi_cdc_source_source_last = s7pciephy_msi_cdc_cdc_source_last;
assign s7pciephy_msi_cdc_source_source_payload_dat = s7pciephy_msi_cdc_cdc_source_payload_dat;
assign s7pciephy_msi_cdc_cdc_asyncfifo_din = {s7pciephy_msi_cdc_cdc_fifo_in_last, s7pciephy_msi_cdc_cdc_fifo_in_first, s7pciephy_msi_cdc_cdc_fifo_in_payload_dat};
assign {s7pciephy_msi_cdc_cdc_fifo_out_last, s7pciephy_msi_cdc_cdc_fifo_out_first, s7pciephy_msi_cdc_cdc_fifo_out_payload_dat} = s7pciephy_msi_cdc_cdc_asyncfifo_dout;
assign s7pciephy_msi_cdc_cdc_sink_ready = s7pciephy_msi_cdc_cdc_asyncfifo_writable;
assign s7pciephy_msi_cdc_cdc_asyncfifo_we = s7pciephy_msi_cdc_cdc_sink_valid;
assign s7pciephy_msi_cdc_cdc_fifo_in_first = s7pciephy_msi_cdc_cdc_sink_first;
assign s7pciephy_msi_cdc_cdc_fifo_in_last = s7pciephy_msi_cdc_cdc_sink_last;
assign s7pciephy_msi_cdc_cdc_fifo_in_payload_dat = s7pciephy_msi_cdc_cdc_sink_payload_dat;
assign s7pciephy_msi_cdc_cdc_source_valid = s7pciephy_msi_cdc_cdc_asyncfifo_readable;
assign s7pciephy_msi_cdc_cdc_source_first = s7pciephy_msi_cdc_cdc_fifo_out_first;
assign s7pciephy_msi_cdc_cdc_source_last = s7pciephy_msi_cdc_cdc_fifo_out_last;
assign s7pciephy_msi_cdc_cdc_source_payload_dat = s7pciephy_msi_cdc_cdc_fifo_out_payload_dat;
assign s7pciephy_msi_cdc_cdc_asyncfifo_re = s7pciephy_msi_cdc_cdc_source_ready;
assign s7pciephy_msi_cdc_cdc_graycounter0_ce = (s7pciephy_msi_cdc_cdc_asyncfifo_writable & s7pciephy_msi_cdc_cdc_asyncfifo_we);
assign s7pciephy_msi_cdc_cdc_graycounter1_ce = (s7pciephy_msi_cdc_cdc_asyncfifo_readable & s7pciephy_msi_cdc_cdc_asyncfifo_re);
assign s7pciephy_msi_cdc_cdc_asyncfifo_writable = (((s7pciephy_msi_cdc_cdc_graycounter0_q[2] == s7pciephy_msi_cdc_cdc_consume_wdomain[2]) | (s7pciephy_msi_cdc_cdc_graycounter0_q[1] == s7pciephy_msi_cdc_cdc_consume_wdomain[1])) | (s7pciephy_msi_cdc_cdc_graycounter0_q[0] != s7pciephy_msi_cdc_cdc_consume_wdomain[0]));
assign s7pciephy_msi_cdc_cdc_asyncfifo_readable = (s7pciephy_msi_cdc_cdc_graycounter1_q != s7pciephy_msi_cdc_cdc_produce_rdomain);
assign s7pciephy_msi_cdc_cdc_wrport_adr = s7pciephy_msi_cdc_cdc_graycounter0_q_binary[1:0];
assign s7pciephy_msi_cdc_cdc_wrport_dat_w = s7pciephy_msi_cdc_cdc_asyncfifo_din;
assign s7pciephy_msi_cdc_cdc_wrport_we = s7pciephy_msi_cdc_cdc_graycounter0_ce;
assign s7pciephy_msi_cdc_cdc_rdport_adr = s7pciephy_msi_cdc_cdc_graycounter1_q_next_binary[1:0];
assign s7pciephy_msi_cdc_cdc_asyncfifo_dout = s7pciephy_msi_cdc_cdc_rdport_dat_r;
always @(*) begin
    s7pciephy_msi_cdc_cdc_graycounter0_q_next_binary <= 3'd0;
    if (s7pciephy_msi_cdc_cdc_graycounter0_ce) begin
        s7pciephy_msi_cdc_cdc_graycounter0_q_next_binary <= (s7pciephy_msi_cdc_cdc_graycounter0_q_binary + 1'd1);
    end else begin
        s7pciephy_msi_cdc_cdc_graycounter0_q_next_binary <= s7pciephy_msi_cdc_cdc_graycounter0_q_binary;
    end
end
assign s7pciephy_msi_cdc_cdc_graycounter0_q_next = (s7pciephy_msi_cdc_cdc_graycounter0_q_next_binary ^ s7pciephy_msi_cdc_cdc_graycounter0_q_next_binary[2:1]);
always @(*) begin
    s7pciephy_msi_cdc_cdc_graycounter1_q_next_binary <= 3'd0;
    if (s7pciephy_msi_cdc_cdc_graycounter1_ce) begin
        s7pciephy_msi_cdc_cdc_graycounter1_q_next_binary <= (s7pciephy_msi_cdc_cdc_graycounter1_q_binary + 1'd1);
    end else begin
        s7pciephy_msi_cdc_cdc_graycounter1_q_next_binary <= s7pciephy_msi_cdc_cdc_graycounter1_q_binary;
    end
end
assign s7pciephy_msi_cdc_cdc_graycounter1_q_next = (s7pciephy_msi_cdc_cdc_graycounter1_q_next_binary ^ s7pciephy_msi_cdc_cdc_graycounter1_q_next_binary[2:1]);
assign s7pciephy_clkin = s7pciephy_pipe_txoutclk_bufg;
assign clk125_clk = s7pciephy_clkout_buf0;
assign clk250_clk = s7pciephy_clkout_buf1;
assign userclk1_clk = s7pciephy_clkout_buf2;
assign userclk2_clk = s7pciephy_clkout_buf3;
assign depacketizer_sink_sink_valid = s7pciephy_source_valid;
assign s7pciephy_source_ready = depacketizer_sink_sink_ready;
assign depacketizer_sink_sink_first = s7pciephy_source_first;
assign depacketizer_sink_sink_last = s7pciephy_source_last;
assign depacketizer_sink_sink_payload_dat = s7pciephy_source_payload_dat;
assign depacketizer_sink_sink_payload_be = s7pciephy_source_payload_be;
assign s7pciephy_sink_valid = packetizer_source_valid;
assign packetizer_source_ready = s7pciephy_sink_ready;
assign s7pciephy_sink_first = packetizer_source_first;
assign s7pciephy_sink_last = packetizer_source_last;
assign s7pciephy_sink_payload_dat = packetizer_source_payload_dat;
assign s7pciephy_sink_payload_be = packetizer_source_payload_be;
assign slave_source_valid = depacketizer_req_source_valid;
assign depacketizer_req_source_ready = slave_source_ready;
assign slave_source_first = depacketizer_req_source_first;
assign slave_source_last = depacketizer_req_source_last;
assign slave_source_payload_req_id = depacketizer_req_source_payload_req_id;
assign slave_source_payload_we = depacketizer_req_source_payload_we;
assign slave_source_payload_adr = depacketizer_req_source_payload_adr;
assign slave_source_payload_len = depacketizer_req_source_payload_len;
assign slave_source_payload_tag = depacketizer_req_source_payload_tag;
assign slave_source_payload_dat = depacketizer_req_source_payload_dat;
assign slave_source_payload_channel = depacketizer_req_source_payload_channel;
assign slave_source_payload_user_id = depacketizer_req_source_payload_user_id;
assign packetizer_cmp_sink_valid = slave_sink_valid;
assign slave_sink_ready = packetizer_cmp_sink_ready;
assign packetizer_cmp_sink_first = slave_sink_first;
assign packetizer_cmp_sink_last = slave_sink_last;
assign packetizer_cmp_sink_payload_req_id = slave_sink_payload_req_id;
assign packetizer_cmp_sink_payload_cmp_id = slave_sink_payload_cmp_id;
assign packetizer_cmp_sink_payload_adr = slave_sink_payload_adr;
assign packetizer_cmp_sink_payload_len = slave_sink_payload_len;
assign packetizer_cmp_sink_payload_end = slave_sink_payload_end;
assign packetizer_cmp_sink_payload_err = slave_sink_payload_err;
assign packetizer_cmp_sink_payload_tag = slave_sink_payload_tag;
assign packetizer_cmp_sink_payload_dat = slave_sink_payload_dat;
assign packetizer_cmp_sink_payload_channel = slave_sink_payload_channel;
assign packetizer_cmp_sink_payload_user_id = slave_sink_payload_user_id;
assign packetizer_req_sink_valid = master_sink_valid;
assign master_sink_ready = packetizer_req_sink_ready;
assign packetizer_req_sink_first = master_sink_first;
assign packetizer_req_sink_last = master_sink_last;
assign packetizer_req_sink_payload_req_id = master_sink_payload_req_id;
assign packetizer_req_sink_payload_we = master_sink_payload_we;
assign packetizer_req_sink_payload_adr = master_sink_payload_adr;
assign packetizer_req_sink_payload_len = master_sink_payload_len;
assign packetizer_req_sink_payload_tag = master_sink_payload_tag;
assign packetizer_req_sink_payload_dat = master_sink_payload_dat;
assign packetizer_req_sink_payload_channel = master_sink_payload_channel;
assign packetizer_req_sink_payload_user_id = master_sink_payload_user_id;
assign master_source_valid = depacketizer_cmp_source_valid;
assign depacketizer_cmp_source_ready = master_source_ready;
assign master_source_first = depacketizer_cmp_source_first;
assign master_source_last = depacketizer_cmp_source_last;
assign master_source_payload_req_id = depacketizer_cmp_source_payload_req_id;
assign master_source_payload_cmp_id = depacketizer_cmp_source_payload_cmp_id;
assign master_source_payload_adr = depacketizer_cmp_source_payload_adr;
assign master_source_payload_len = depacketizer_cmp_source_payload_len;
assign master_source_payload_end = depacketizer_cmp_source_payload_end;
assign master_source_payload_err = depacketizer_cmp_source_payload_err;
assign master_source_payload_tag = depacketizer_cmp_source_payload_tag;
assign master_source_payload_dat = depacketizer_cmp_source_payload_dat;
assign master_source_payload_channel = depacketizer_cmp_source_payload_channel;
assign master_source_payload_user_id = depacketizer_cmp_source_payload_user_id;
assign depacketizer_header_extracter_sink_valid = depacketizer_sink_sink_valid;
assign depacketizer_sink_sink_ready = depacketizer_header_extracter_sink_ready;
assign depacketizer_header_extracter_sink_first = depacketizer_sink_sink_first;
assign depacketizer_header_extracter_sink_last = depacketizer_sink_sink_last;
assign depacketizer_header_extracter_sink_payload_dat = depacketizer_sink_sink_payload_dat;
assign depacketizer_header_extracter_sink_payload_be = depacketizer_sink_sink_payload_be;
assign depacketizer_endpoint0_ready = 1'd1;
assign depacketizer_dispatch_sink_valid = depacketizer_header_extracter_source_valid;
assign depacketizer_header_extracter_source_ready = depacketizer_dispatch_sink_ready;
assign depacketizer_dispatch_sink_first = depacketizer_header_extracter_source_first;
assign depacketizer_dispatch_sink_last = depacketizer_header_extracter_source_last;
assign depacketizer_dispatch_sink_payload_fmt = depacketizer_header_extracter_source_payload_header[30:29];
assign depacketizer_dispatch_sink_payload_type = depacketizer_header_extracter_source_payload_header[28:24];
always @(*) begin
    depacketizer_dispatch_sink_payload_dat <= 64'd0;
    depacketizer_dispatch_sink_payload_dat[31:0] <= {rhs_slice_proxy3[7:0], rhs_slice_proxy2[15:8], rhs_slice_proxy1[23:16], rhs_slice_proxy0[31:24]};
    depacketizer_dispatch_sink_payload_dat[63:32] <= {rhs_slice_proxy7[7:0], rhs_slice_proxy6[15:8], rhs_slice_proxy5[23:16], rhs_slice_proxy4[31:24]};
end
always @(*) begin
    depacketizer_dispatch_sink_payload_be <= 8'd0;
    depacketizer_dispatch_sink_payload_be[3:0] <= {rhs_slice_proxy11[0], rhs_slice_proxy10[1], rhs_slice_proxy9[2], rhs_slice_proxy8[3]};
    depacketizer_dispatch_sink_payload_be[7:4] <= {rhs_slice_proxy15[0], rhs_slice_proxy14[1], rhs_slice_proxy13[2], rhs_slice_proxy12[3]};
end
assign depacketizer_tlp_req_valid = depacketizer_endpoint1_valid;
assign depacketizer_endpoint1_ready = depacketizer_tlp_req_ready;
assign depacketizer_tlp_req_first = depacketizer_endpoint1_first;
assign depacketizer_tlp_req_last = depacketizer_endpoint1_last;
assign depacketizer_tlp_req_payload_dat = depacketizer_endpoint1_payload_dat;
assign depacketizer_tlp_req_payload_be = depacketizer_endpoint1_payload_be;
assign depacketizer_tlp_req_payload_address = depacketizer_header_extracter_source_payload_header[127:64];
assign depacketizer_tlp_req_payload_attr = depacketizer_header_extracter_source_payload_header[13:12];
assign depacketizer_tlp_req_payload_ep = depacketizer_header_extracter_source_payload_header[14];
assign depacketizer_tlp_req_payload_first_be = depacketizer_header_extracter_source_payload_header[35:32];
always @(*) begin
    depacketizer_tlp_req_payload_fmt <= 2'd0;
    depacketizer_tlp_req_payload_fmt <= depacketizer_endpoint1_payload_fmt;
    depacketizer_tlp_req_payload_fmt <= depacketizer_header_extracter_source_payload_header[30:29];
end
assign depacketizer_tlp_req_payload_last_be = depacketizer_header_extracter_source_payload_header[39:36];
assign depacketizer_tlp_req_payload_length = depacketizer_header_extracter_source_payload_header[9:0];
assign depacketizer_tlp_req_payload_requester_id = depacketizer_header_extracter_source_payload_header[63:48];
assign depacketizer_tlp_req_payload_tag = depacketizer_header_extracter_source_payload_header[47:40];
assign depacketizer_tlp_req_payload_tc = depacketizer_header_extracter_source_payload_header[22:20];
assign depacketizer_tlp_req_payload_td = depacketizer_header_extracter_source_payload_header[15];
always @(*) begin
    depacketizer_tlp_req_payload_type <= 5'd0;
    depacketizer_tlp_req_payload_type <= depacketizer_endpoint1_payload_type;
    depacketizer_tlp_req_payload_type <= depacketizer_header_extracter_source_payload_header[28:24];
end
assign depacketizer_req_source_valid = depacketizer_tlp_req_valid;
assign depacketizer_req_source_payload_we = (depacketizer_tlp_req_valid & ({depacketizer_tlp_req_payload_fmt, depacketizer_tlp_req_payload_type} == 7'd64));
assign depacketizer_tlp_req_ready = depacketizer_req_source_ready;
assign depacketizer_req_source_first = depacketizer_tlp_req_first;
assign depacketizer_req_source_last = depacketizer_tlp_req_last;
assign depacketizer_req_source_payload_adr = ($signed({1'd0, depacketizer_tlp_req_payload_address}) & -33'd4227858433);
assign depacketizer_req_source_payload_len = depacketizer_tlp_req_payload_length;
assign depacketizer_req_source_payload_req_id = depacketizer_tlp_req_payload_requester_id;
assign depacketizer_req_source_payload_tag = depacketizer_tlp_req_payload_tag;
assign depacketizer_req_source_payload_dat = depacketizer_tlp_req_payload_dat;
assign depacketizer_tlp_cmp_valid = depacketizer_endpoint2_valid;
assign depacketizer_endpoint2_ready = depacketizer_tlp_cmp_ready;
assign depacketizer_tlp_cmp_first = depacketizer_endpoint2_first;
assign depacketizer_tlp_cmp_last = depacketizer_endpoint2_last;
assign depacketizer_tlp_cmp_payload_dat = depacketizer_endpoint2_payload_dat;
assign depacketizer_tlp_cmp_payload_be = depacketizer_endpoint2_payload_be;
assign depacketizer_tlp_cmp_payload_attr = depacketizer_header_extracter_source_payload_header[13:12];
assign depacketizer_tlp_cmp_payload_bcm = depacketizer_header_extracter_source_payload_header[44];
assign depacketizer_tlp_cmp_payload_byte_count = depacketizer_header_extracter_source_payload_header[43:32];
assign depacketizer_tlp_cmp_payload_completer_id = depacketizer_header_extracter_source_payload_header[63:48];
assign depacketizer_tlp_cmp_payload_ep = depacketizer_header_extracter_source_payload_header[14];
always @(*) begin
    depacketizer_tlp_cmp_payload_fmt <= 2'd0;
    depacketizer_tlp_cmp_payload_fmt <= depacketizer_endpoint2_payload_fmt;
    depacketizer_tlp_cmp_payload_fmt <= depacketizer_header_extracter_source_payload_header[30:29];
end
assign depacketizer_tlp_cmp_payload_length = depacketizer_header_extracter_source_payload_header[9:0];
assign depacketizer_tlp_cmp_payload_lower_address = depacketizer_header_extracter_source_payload_header[70:64];
assign depacketizer_tlp_cmp_payload_requester_id = depacketizer_header_extracter_source_payload_header[95:80];
assign depacketizer_tlp_cmp_payload_status = depacketizer_header_extracter_source_payload_header[47:45];
assign depacketizer_tlp_cmp_payload_tag = depacketizer_header_extracter_source_payload_header[79:72];
assign depacketizer_tlp_cmp_payload_tc = depacketizer_header_extracter_source_payload_header[22:20];
assign depacketizer_tlp_cmp_payload_td = depacketizer_header_extracter_source_payload_header[15];
always @(*) begin
    depacketizer_tlp_cmp_payload_type <= 5'd0;
    depacketizer_tlp_cmp_payload_type <= depacketizer_endpoint2_payload_type;
    depacketizer_tlp_cmp_payload_type <= depacketizer_header_extracter_source_payload_header[28:24];
end
assign depacketizer_cmp_source_valid = depacketizer_tlp_cmp_valid;
assign depacketizer_tlp_cmp_ready = depacketizer_cmp_source_ready;
assign depacketizer_cmp_source_first = depacketizer_tlp_cmp_first;
assign depacketizer_cmp_source_last = depacketizer_tlp_cmp_last;
assign depacketizer_cmp_source_payload_len = depacketizer_tlp_cmp_payload_length;
assign depacketizer_cmp_source_payload_end = (depacketizer_tlp_cmp_payload_length == depacketizer_tlp_cmp_payload_byte_count[11:2]);
assign depacketizer_cmp_source_payload_adr = depacketizer_tlp_cmp_payload_lower_address;
assign depacketizer_cmp_source_payload_req_id = depacketizer_tlp_cmp_payload_requester_id;
assign depacketizer_cmp_source_payload_cmp_id = depacketizer_tlp_cmp_payload_completer_id;
assign depacketizer_cmp_source_payload_err = (depacketizer_tlp_cmp_payload_status != 1'd0);
assign depacketizer_cmp_source_payload_tag = depacketizer_tlp_cmp_payload_tag;
assign depacketizer_cmp_source_payload_dat = depacketizer_tlp_cmp_payload_dat;
assign depacketizer_tlp_conf_valid = depacketizer_endpoint4_valid;
assign depacketizer_endpoint4_ready = depacketizer_tlp_conf_ready;
assign depacketizer_tlp_conf_first = depacketizer_endpoint4_first;
assign depacketizer_tlp_conf_last = depacketizer_endpoint4_last;
assign depacketizer_tlp_conf_payload_dat = depacketizer_endpoint4_payload_dat;
assign depacketizer_tlp_conf_payload_be = depacketizer_endpoint4_payload_be;
assign depacketizer_tlp_conf_payload_bus_number = depacketizer_header_extracter_source_payload_header[95:88];
assign depacketizer_tlp_conf_payload_device_no = depacketizer_header_extracter_source_payload_header[87:83];
assign depacketizer_tlp_conf_payload_ep = depacketizer_header_extracter_source_payload_header[14];
assign depacketizer_tlp_conf_payload_ext_reg = depacketizer_header_extracter_source_payload_header[74:72];
assign depacketizer_tlp_conf_payload_first_be = depacketizer_header_extracter_source_payload_header[35:32];
always @(*) begin
    depacketizer_tlp_conf_payload_fmt <= 2'd0;
    depacketizer_tlp_conf_payload_fmt <= depacketizer_endpoint4_payload_fmt;
    depacketizer_tlp_conf_payload_fmt <= depacketizer_header_extracter_source_payload_header[30:29];
end
assign depacketizer_tlp_conf_payload_func = depacketizer_header_extracter_source_payload_header[82:80];
assign depacketizer_tlp_conf_payload_register_no = depacketizer_header_extracter_source_payload_header[71:66];
assign depacketizer_tlp_conf_payload_requester_id = depacketizer_header_extracter_source_payload_header[63:48];
assign depacketizer_tlp_conf_payload_tag = depacketizer_header_extracter_source_payload_header[47:40];
assign depacketizer_tlp_conf_payload_td = depacketizer_header_extracter_source_payload_header[15];
always @(*) begin
    depacketizer_tlp_conf_payload_type <= 5'd0;
    depacketizer_tlp_conf_payload_type <= depacketizer_endpoint4_payload_type;
    depacketizer_tlp_conf_payload_type <= depacketizer_header_extracter_source_payload_header[28:24];
end
assign depacketizer_conf_source_valid = depacketizer_tlp_conf_valid;
assign depacketizer_tlp_conf_ready = depacketizer_conf_source_ready;
assign depacketizer_conf_source_first = depacketizer_tlp_conf_first;
assign depacketizer_conf_source_last = depacketizer_tlp_conf_last;
always @(*) begin
    depacketizer_conf_source_payload_we <= 1'd0;
    if (({depacketizer_dispatch_sink_payload_fmt, depacketizer_dispatch_sink_payload_type} == 3'd4)) begin
        depacketizer_conf_source_payload_we <= 1'd0;
    end
    if (({depacketizer_dispatch_sink_payload_fmt, depacketizer_dispatch_sink_payload_type} == 7'd68)) begin
        depacketizer_conf_source_payload_we <= 1'd1;
    end
end
assign depacketizer_conf_source_payload_req_id = depacketizer_tlp_conf_payload_requester_id;
assign depacketizer_conf_source_payload_bus_number = depacketizer_tlp_conf_payload_bus_number;
assign depacketizer_conf_source_payload_device_no = depacketizer_tlp_conf_payload_device_no;
assign depacketizer_conf_source_payload_func = depacketizer_tlp_conf_payload_func;
assign depacketizer_conf_source_payload_ext_reg = depacketizer_tlp_conf_payload_ext_reg;
assign depacketizer_conf_source_payload_register_no = depacketizer_tlp_conf_payload_register_no;
assign depacketizer_conf_source_payload_tag = depacketizer_tlp_conf_payload_tag;
assign depacketizer_conf_source_payload_dat = depacketizer_tlp_conf_payload_dat;
always @(*) begin
    depacketizer_dispatcher_sel0 <= 3'd0;
    depacketizer_dispatcher_sel0 <= 1'd0;
    if ((({depacketizer_dispatch_sink_payload_fmt, depacketizer_dispatch_sink_payload_type} == 1'd0) | ({depacketizer_dispatch_sink_payload_fmt, depacketizer_dispatch_sink_payload_type} == 7'd64))) begin
        depacketizer_dispatcher_sel0 <= 1'd1;
    end
    if ((({depacketizer_dispatch_sink_payload_fmt, depacketizer_dispatch_sink_payload_type} == 7'd74) | ({depacketizer_dispatch_sink_payload_fmt, depacketizer_dispatch_sink_payload_type} == 4'd10))) begin
        depacketizer_dispatcher_sel0 <= 2'd2;
    end
    if ((({depacketizer_dispatch_sink_payload_fmt, depacketizer_dispatch_sink_payload_type} == 3'd4) | ({depacketizer_dispatch_sink_payload_fmt, depacketizer_dispatch_sink_payload_type} == 7'd68))) begin
        depacketizer_dispatcher_sel0 <= 3'd4;
    end
    if ((({depacketizer_dispatch_sink_payload_fmt, depacketizer_dispatch_sink_payload_type} == 6'd52) | ({depacketizer_dispatch_sink_payload_fmt, depacketizer_dispatch_sink_payload_type} == 7'd116))) begin
        depacketizer_dispatcher_sel0 <= 2'd3;
    end
end
assign depacketizer_tlp_ptm_valid = depacketizer_endpoint3_valid;
assign depacketizer_endpoint3_ready = depacketizer_tlp_ptm_ready;
assign depacketizer_tlp_ptm_first = depacketizer_endpoint3_first;
assign depacketizer_tlp_ptm_last = depacketizer_endpoint3_last;
assign depacketizer_tlp_ptm_payload_dat = depacketizer_endpoint3_payload_dat;
assign depacketizer_tlp_ptm_payload_be = depacketizer_endpoint3_payload_be;
assign depacketizer_tlp_ptm_payload_attr = depacketizer_header_extracter_source_payload_header[13:12];
assign depacketizer_tlp_ptm_payload_ep = depacketizer_header_extracter_source_payload_header[14];
always @(*) begin
    depacketizer_tlp_ptm_payload_fmt <= 2'd0;
    depacketizer_tlp_ptm_payload_fmt <= depacketizer_endpoint3_payload_fmt;
    depacketizer_tlp_ptm_payload_fmt <= depacketizer_header_extracter_source_payload_header[30:29];
end
assign depacketizer_tlp_ptm_payload_length = depacketizer_header_extracter_source_payload_header[9:0];
assign depacketizer_tlp_ptm_payload_ln = depacketizer_header_extracter_source_payload_header[17];
assign depacketizer_tlp_ptm_payload_master_time = depacketizer_header_extracter_source_payload_header[127:64];
assign depacketizer_tlp_ptm_payload_message_code = depacketizer_header_extracter_source_payload_header[39:32];
assign depacketizer_tlp_ptm_payload_requester_id = depacketizer_header_extracter_source_payload_header[63:48];
assign depacketizer_tlp_ptm_payload_tc = depacketizer_header_extracter_source_payload_header[22:20];
assign depacketizer_tlp_ptm_payload_td = depacketizer_header_extracter_source_payload_header[15];
assign depacketizer_tlp_ptm_payload_th = depacketizer_header_extracter_source_payload_header[16];
always @(*) begin
    depacketizer_tlp_ptm_payload_type <= 5'd0;
    depacketizer_tlp_ptm_payload_type <= depacketizer_endpoint3_payload_type;
    depacketizer_tlp_ptm_payload_type <= depacketizer_header_extracter_source_payload_header[28:24];
end
assign depacketizer_ptm_source_valid = depacketizer_tlp_ptm_valid;
assign depacketizer_tlp_ptm_ready = depacketizer_ptm_source_ready;
assign depacketizer_ptm_source_first = depacketizer_tlp_ptm_first;
assign depacketizer_ptm_source_last = depacketizer_tlp_ptm_last;
assign depacketizer_ptm_source_payload_requester_id = depacketizer_tlp_ptm_payload_requester_id;
assign depacketizer_ptm_source_payload_length = depacketizer_tlp_ptm_payload_length;
assign depacketizer_ptm_source_payload_message_code = depacketizer_tlp_ptm_payload_message_code;
assign depacketizer_ptm_source_payload_master_time = depacketizer_tlp_ptm_payload_master_time;
assign depacketizer_ptm_source_payload_dat = depacketizer_tlp_ptm_payload_dat;
always @(*) begin
    depacketizer_header_extracter_source_payload_dat <= 64'd0;
    depacketizer_header_extracter_source_payload_dat[31:0] <= depacketizer_header_extracter_dat[63:32];
    depacketizer_header_extracter_source_payload_dat[63:32] <= depacketizer_header_extracter_sink_payload_dat[31:0];
end
always @(*) begin
    depacketizer_header_extracter_source_payload_be <= 8'd0;
    depacketizer_header_extracter_source_payload_be[3:0] <= depacketizer_header_extracter_be[7:4];
    depacketizer_header_extracter_source_payload_be[7:4] <= depacketizer_header_extracter_sink_payload_be[3:0];
end
always @(*) begin
    depacketizer_header_extracter_count_litepcietlpdepacketizer_next_value2 <= 1'd0;
    depacketizer_header_extracter_count_litepcietlpdepacketizer_next_value_ce2 <= 1'd0;
    depacketizer_header_extracter_first_litepcietlpdepacketizer_next_value0 <= 1'd0;
    depacketizer_header_extracter_first_litepcietlpdepacketizer_next_value_ce0 <= 1'd0;
    depacketizer_header_extracter_last_litepcietlpdepacketizer_next_value1 <= 1'd0;
    depacketizer_header_extracter_last_litepcietlpdepacketizer_next_value_ce1 <= 1'd0;
    depacketizer_header_extracter_sink_ready <= 1'd0;
    depacketizer_header_extracter_source_first <= 1'd0;
    depacketizer_header_extracter_source_last <= 1'd0;
    depacketizer_header_extracter_source_valid <= 1'd0;
    litepciecore_litepcieendpoint_next_state <= 2'd0;
    litepciecore_litepcieendpoint_next_value0 <= 32'd0;
    litepciecore_litepcieendpoint_next_value1 <= 32'd0;
    litepciecore_litepcieendpoint_next_value2 <= 32'd0;
    litepciecore_litepcieendpoint_next_value3 <= 32'd0;
    litepciecore_litepcieendpoint_next_value_ce0 <= 1'd0;
    litepciecore_litepcieendpoint_next_value_ce1 <= 1'd0;
    litepciecore_litepcieendpoint_next_value_ce2 <= 1'd0;
    litepciecore_litepcieendpoint_next_value_ce3 <= 1'd0;
    litepciecore_litepcieendpoint_next_state <= litepciecore_litepcieendpoint_state;
    case (litepciecore_litepcieendpoint_state)
        1'd1: begin
            depacketizer_header_extracter_sink_ready <= 1'd1;
            if (depacketizer_header_extracter_sink_valid) begin
                depacketizer_header_extracter_count_litepcietlpdepacketizer_next_value2 <= (depacketizer_header_extracter_count + 1'd1);
                depacketizer_header_extracter_count_litepcietlpdepacketizer_next_value_ce2 <= 1'd1;
                litepciecore_litepcieendpoint_next_value0 <= depacketizer_header_extracter_source_payload_header[95:64];
                litepciecore_litepcieendpoint_next_value_ce0 <= 1'd1;
                litepciecore_litepcieendpoint_next_value1 <= depacketizer_header_extracter_source_payload_header[127:96];
                litepciecore_litepcieendpoint_next_value_ce1 <= 1'd1;
                litepciecore_litepcieendpoint_next_value2 <= depacketizer_header_extracter_sink_payload_dat[31:0];
                litepciecore_litepcieendpoint_next_value_ce2 <= 1'd1;
                litepciecore_litepcieendpoint_next_value3 <= depacketizer_header_extracter_sink_payload_dat[63:32];
                litepciecore_litepcieendpoint_next_value_ce3 <= 1'd1;
                if (depacketizer_header_extracter_count) begin
                    if (depacketizer_header_extracter_sink_last) begin
                        depacketizer_header_extracter_last_litepcietlpdepacketizer_next_value1 <= 1'd1;
                        depacketizer_header_extracter_last_litepcietlpdepacketizer_next_value_ce1 <= 1'd1;
                    end
                    litepciecore_litepcieendpoint_next_state <= 2'd2;
                end
            end
        end
        2'd2: begin
            depacketizer_header_extracter_source_valid <= (depacketizer_header_extracter_sink_valid | depacketizer_header_extracter_last);
            depacketizer_header_extracter_source_first <= depacketizer_header_extracter_first;
            depacketizer_header_extracter_source_last <= (depacketizer_header_extracter_sink_last | depacketizer_header_extracter_last);
            if ((depacketizer_header_extracter_source_valid & depacketizer_header_extracter_source_ready)) begin
                depacketizer_header_extracter_first_litepcietlpdepacketizer_next_value0 <= 1'd0;
                depacketizer_header_extracter_first_litepcietlpdepacketizer_next_value_ce0 <= 1'd1;
                depacketizer_header_extracter_sink_ready <= (1'd1 & (~depacketizer_header_extracter_last));
                if (depacketizer_header_extracter_source_last) begin
                    litepciecore_litepcieendpoint_next_state <= 1'd0;
                end
            end
        end
        default: begin
            depacketizer_header_extracter_first_litepcietlpdepacketizer_next_value0 <= 1'd1;
            depacketizer_header_extracter_first_litepcietlpdepacketizer_next_value_ce0 <= 1'd1;
            depacketizer_header_extracter_last_litepcietlpdepacketizer_next_value1 <= 1'd0;
            depacketizer_header_extracter_last_litepcietlpdepacketizer_next_value_ce1 <= 1'd1;
            depacketizer_header_extracter_count_litepcietlpdepacketizer_next_value2 <= 1'd0;
            depacketizer_header_extracter_count_litepcietlpdepacketizer_next_value_ce2 <= 1'd1;
            if (depacketizer_header_extracter_sink_valid) begin
                litepciecore_litepcieendpoint_next_state <= 1'd1;
            end
        end
    endcase
end
always @(*) begin
    depacketizer_dispatcher_sel1 <= 3'd0;
    if (depacketizer_dispatcher_first) begin
        depacketizer_dispatcher_sel1 <= depacketizer_dispatcher_sel0;
    end else begin
        depacketizer_dispatcher_sel1 <= depacketizer_dispatcher_sel_ongoing;
    end
end
always @(*) begin
    depacketizer_dispatch_sink_ready <= 1'd0;
    depacketizer_endpoint0_first <= 1'd0;
    depacketizer_endpoint0_last <= 1'd0;
    depacketizer_endpoint0_payload_be <= 8'd0;
    depacketizer_endpoint0_payload_dat <= 64'd0;
    depacketizer_endpoint0_payload_fmt <= 2'd0;
    depacketizer_endpoint0_payload_type <= 5'd0;
    depacketizer_endpoint0_valid <= 1'd0;
    depacketizer_endpoint1_first <= 1'd0;
    depacketizer_endpoint1_last <= 1'd0;
    depacketizer_endpoint1_payload_be <= 8'd0;
    depacketizer_endpoint1_payload_dat <= 64'd0;
    depacketizer_endpoint1_payload_fmt <= 2'd0;
    depacketizer_endpoint1_payload_type <= 5'd0;
    depacketizer_endpoint1_valid <= 1'd0;
    depacketizer_endpoint2_first <= 1'd0;
    depacketizer_endpoint2_last <= 1'd0;
    depacketizer_endpoint2_payload_be <= 8'd0;
    depacketizer_endpoint2_payload_dat <= 64'd0;
    depacketizer_endpoint2_payload_fmt <= 2'd0;
    depacketizer_endpoint2_payload_type <= 5'd0;
    depacketizer_endpoint2_valid <= 1'd0;
    depacketizer_endpoint3_first <= 1'd0;
    depacketizer_endpoint3_last <= 1'd0;
    depacketizer_endpoint3_payload_be <= 8'd0;
    depacketizer_endpoint3_payload_dat <= 64'd0;
    depacketizer_endpoint3_payload_fmt <= 2'd0;
    depacketizer_endpoint3_payload_type <= 5'd0;
    depacketizer_endpoint3_valid <= 1'd0;
    depacketizer_endpoint4_first <= 1'd0;
    depacketizer_endpoint4_last <= 1'd0;
    depacketizer_endpoint4_payload_be <= 8'd0;
    depacketizer_endpoint4_payload_dat <= 64'd0;
    depacketizer_endpoint4_payload_fmt <= 2'd0;
    depacketizer_endpoint4_payload_type <= 5'd0;
    depacketizer_endpoint4_valid <= 1'd0;
    case (depacketizer_dispatcher_sel1)
        1'd0: begin
            depacketizer_endpoint0_valid <= depacketizer_dispatch_sink_valid;
            depacketizer_dispatch_sink_ready <= depacketizer_endpoint0_ready;
            depacketizer_endpoint0_first <= depacketizer_dispatch_sink_first;
            depacketizer_endpoint0_last <= depacketizer_dispatch_sink_last;
            depacketizer_endpoint0_payload_fmt <= depacketizer_dispatch_sink_payload_fmt;
            depacketizer_endpoint0_payload_type <= depacketizer_dispatch_sink_payload_type;
            depacketizer_endpoint0_payload_dat <= depacketizer_dispatch_sink_payload_dat;
            depacketizer_endpoint0_payload_be <= depacketizer_dispatch_sink_payload_be;
        end
        1'd1: begin
            depacketizer_endpoint1_valid <= depacketizer_dispatch_sink_valid;
            depacketizer_dispatch_sink_ready <= depacketizer_endpoint1_ready;
            depacketizer_endpoint1_first <= depacketizer_dispatch_sink_first;
            depacketizer_endpoint1_last <= depacketizer_dispatch_sink_last;
            depacketizer_endpoint1_payload_fmt <= depacketizer_dispatch_sink_payload_fmt;
            depacketizer_endpoint1_payload_type <= depacketizer_dispatch_sink_payload_type;
            depacketizer_endpoint1_payload_dat <= depacketizer_dispatch_sink_payload_dat;
            depacketizer_endpoint1_payload_be <= depacketizer_dispatch_sink_payload_be;
        end
        2'd2: begin
            depacketizer_endpoint2_valid <= depacketizer_dispatch_sink_valid;
            depacketizer_dispatch_sink_ready <= depacketizer_endpoint2_ready;
            depacketizer_endpoint2_first <= depacketizer_dispatch_sink_first;
            depacketizer_endpoint2_last <= depacketizer_dispatch_sink_last;
            depacketizer_endpoint2_payload_fmt <= depacketizer_dispatch_sink_payload_fmt;
            depacketizer_endpoint2_payload_type <= depacketizer_dispatch_sink_payload_type;
            depacketizer_endpoint2_payload_dat <= depacketizer_dispatch_sink_payload_dat;
            depacketizer_endpoint2_payload_be <= depacketizer_dispatch_sink_payload_be;
        end
        2'd3: begin
            depacketizer_endpoint3_valid <= depacketizer_dispatch_sink_valid;
            depacketizer_dispatch_sink_ready <= depacketizer_endpoint3_ready;
            depacketizer_endpoint3_first <= depacketizer_dispatch_sink_first;
            depacketizer_endpoint3_last <= depacketizer_dispatch_sink_last;
            depacketizer_endpoint3_payload_fmt <= depacketizer_dispatch_sink_payload_fmt;
            depacketizer_endpoint3_payload_type <= depacketizer_dispatch_sink_payload_type;
            depacketizer_endpoint3_payload_dat <= depacketizer_dispatch_sink_payload_dat;
            depacketizer_endpoint3_payload_be <= depacketizer_dispatch_sink_payload_be;
        end
        3'd4: begin
            depacketizer_endpoint4_valid <= depacketizer_dispatch_sink_valid;
            depacketizer_dispatch_sink_ready <= depacketizer_endpoint4_ready;
            depacketizer_endpoint4_first <= depacketizer_dispatch_sink_first;
            depacketizer_endpoint4_last <= depacketizer_dispatch_sink_last;
            depacketizer_endpoint4_payload_fmt <= depacketizer_dispatch_sink_payload_fmt;
            depacketizer_endpoint4_payload_type <= depacketizer_dispatch_sink_payload_type;
            depacketizer_endpoint4_payload_dat <= depacketizer_dispatch_sink_payload_dat;
            depacketizer_endpoint4_payload_be <= depacketizer_dispatch_sink_payload_be;
        end
        default: begin
            depacketizer_dispatch_sink_ready <= 1'd1;
        end
    endcase
end
always @(*) begin
    depacketizer_dispatcher_last <= 1'd0;
    if (depacketizer_dispatch_sink_valid) begin
        depacketizer_dispatcher_last <= (depacketizer_dispatch_sink_last & depacketizer_dispatch_sink_ready);
    end
end
assign depacketizer_dispatcher_ongoing0 = ((depacketizer_dispatch_sink_valid | depacketizer_dispatcher_ongoing1) & (~depacketizer_dispatcher_last));
assign packetizer_tlp_req_valid = packetizer_req_sink_valid;
assign packetizer_req_sink_ready = packetizer_tlp_req_ready;
assign packetizer_tlp_req_first = packetizer_req_sink_first;
assign packetizer_tlp_req_last = packetizer_req_sink_last;
assign packetizer_tlp_req_payload_type = 1'd0;
always @(*) begin
    packetizer_tlp_req_payload_fmt <= 2'd0;
    if (packetizer_req_sink_payload_we) begin
        packetizer_tlp_req_payload_fmt <= 2'd2;
    end else begin
        packetizer_tlp_req_payload_fmt <= 1'd0;
    end
end
assign packetizer_tlp_req_payload_address = packetizer_req_sink_payload_adr;
assign packetizer_tlp_req_payload_tc = 1'd0;
assign packetizer_tlp_req_payload_td = 1'd0;
assign packetizer_tlp_req_payload_ep = 1'd0;
assign packetizer_tlp_req_payload_attr = 1'd0;
assign packetizer_tlp_req_payload_length = packetizer_req_sink_payload_len;
assign packetizer_tlp_req_payload_requester_id = packetizer_req_sink_payload_req_id;
assign packetizer_tlp_req_payload_tag = packetizer_req_sink_payload_tag;
always @(*) begin
    packetizer_tlp_req_payload_last_be <= 4'd0;
    if ((packetizer_req_sink_payload_len > 1'd1)) begin
        packetizer_tlp_req_payload_last_be <= 4'd15;
    end else begin
        packetizer_tlp_req_payload_last_be <= 1'd0;
    end
end
assign packetizer_tlp_req_payload_first_be = 4'd15;
assign packetizer_tlp_req_payload_dat = packetizer_req_sink_payload_dat;
always @(*) begin
    packetizer_tlp_req_payload_be <= 8'd0;
    if (packetizer_req_sink_payload_we) begin
        if ((packetizer_req_sink_payload_len == 1'd1)) begin
            packetizer_tlp_req_payload_be <= 4'd15;
        end else begin
            packetizer_tlp_req_payload_be <= 8'd255;
        end
    end else begin
        packetizer_tlp_req_payload_be <= 1'd0;
    end
end
assign packetizer_tlp_raw_req_valid = packetizer_tlp_req_valid;
assign packetizer_tlp_req_ready = packetizer_tlp_raw_req_ready;
assign packetizer_tlp_raw_req_first = packetizer_tlp_req_first;
assign packetizer_tlp_raw_req_last = packetizer_tlp_req_last;
assign packetizer_tlp_raw_req_payload_dat = packetizer_tlp_req_payload_dat;
assign packetizer_tlp_raw_req_payload_be = packetizer_tlp_req_payload_be;
assign packetizer_tlp_raw_req_payload_fmt = packetizer_tlp_req_payload_fmt;
always @(*) begin
    packetizer_tlp_raw_req_header <= 128'd0;
    packetizer_tlp_raw_req_header[127:64] <= packetizer_tlp_req_payload_address;
    packetizer_tlp_raw_req_header[13:12] <= packetizer_tlp_req_payload_attr;
    packetizer_tlp_raw_req_header[14] <= packetizer_tlp_req_payload_ep;
    packetizer_tlp_raw_req_header[35:32] <= packetizer_tlp_req_payload_first_be;
    packetizer_tlp_raw_req_header[30:29] <= packetizer_tlp_req_payload_fmt;
    packetizer_tlp_raw_req_header[39:36] <= packetizer_tlp_req_payload_last_be;
    packetizer_tlp_raw_req_header[9:0] <= packetizer_tlp_req_payload_length;
    packetizer_tlp_raw_req_header[63:48] <= packetizer_tlp_req_payload_requester_id;
    packetizer_tlp_raw_req_header[47:40] <= packetizer_tlp_req_payload_tag;
    packetizer_tlp_raw_req_header[22:20] <= packetizer_tlp_req_payload_tc;
    packetizer_tlp_raw_req_header[15] <= packetizer_tlp_req_payload_td;
    packetizer_tlp_raw_req_header[28:24] <= packetizer_tlp_req_payload_type;
end
always @(*) begin
    packetizer_tlp_raw_req_payload_header <= 128'd0;
    packetizer_tlp_raw_req_payload_header[31:0] <= {rhs_slice_proxy19[7:0], rhs_slice_proxy18[15:8], rhs_slice_proxy17[23:16], rhs_slice_proxy16[31:24]};
    packetizer_tlp_raw_req_payload_header[63:32] <= {rhs_slice_proxy23[7:0], rhs_slice_proxy22[15:8], rhs_slice_proxy21[23:16], rhs_slice_proxy20[31:24]};
    packetizer_tlp_raw_req_payload_header[95:64] <= {rhs_slice_proxy27[7:0], rhs_slice_proxy26[15:8], rhs_slice_proxy25[23:16], rhs_slice_proxy24[31:24]};
    packetizer_tlp_raw_req_payload_header[127:96] <= {rhs_slice_proxy31[7:0], rhs_slice_proxy30[15:8], rhs_slice_proxy29[23:16], rhs_slice_proxy28[31:24]};
end
assign packetizer_tlp_cmp_valid = packetizer_cmp_sink_valid;
assign packetizer_cmp_sink_ready = packetizer_tlp_cmp_ready;
assign packetizer_tlp_cmp_first = packetizer_cmp_sink_first;
assign packetizer_tlp_cmp_last = packetizer_cmp_sink_last;
assign packetizer_tlp_cmp_payload_tc = 1'd0;
assign packetizer_tlp_cmp_payload_td = 1'd0;
assign packetizer_tlp_cmp_payload_ep = 1'd0;
assign packetizer_tlp_cmp_payload_attr = 1'd0;
assign packetizer_tlp_cmp_payload_length = packetizer_cmp_sink_payload_len;
assign packetizer_tlp_cmp_payload_completer_id = packetizer_cmp_sink_payload_cmp_id;
always @(*) begin
    packetizer_tlp_cmp_payload_fmt <= 2'd0;
    packetizer_tlp_cmp_payload_status <= 3'd0;
    packetizer_tlp_cmp_payload_type <= 5'd0;
    if (packetizer_cmp_sink_payload_err) begin
        packetizer_tlp_cmp_payload_type <= 4'd10;
        packetizer_tlp_cmp_payload_fmt <= 1'd0;
        packetizer_tlp_cmp_payload_status <= 1'd1;
    end else begin
        packetizer_tlp_cmp_payload_type <= 4'd10;
        packetizer_tlp_cmp_payload_fmt <= 2'd2;
        packetizer_tlp_cmp_payload_status <= 1'd0;
    end
end
assign packetizer_tlp_cmp_payload_bcm = 1'd0;
assign packetizer_tlp_cmp_payload_byte_count = (packetizer_cmp_sink_payload_len * 3'd4);
assign packetizer_tlp_cmp_payload_requester_id = packetizer_cmp_sink_payload_req_id;
assign packetizer_tlp_cmp_payload_tag = packetizer_cmp_sink_payload_tag;
assign packetizer_tlp_cmp_payload_lower_address = packetizer_cmp_sink_payload_adr;
assign packetizer_tlp_cmp_payload_dat = packetizer_cmp_sink_payload_dat;
always @(*) begin
    packetizer_tlp_cmp_payload_be <= 8'd0;
    if ((packetizer_cmp_sink_last & packetizer_cmp_sink_first)) begin
        packetizer_tlp_cmp_payload_be <= 4'd15;
    end else begin
        packetizer_tlp_cmp_payload_be <= 8'd255;
    end
end
assign packetizer_tlp_raw_cmp_valid = packetizer_tlp_cmp_valid;
assign packetizer_tlp_cmp_ready = packetizer_tlp_raw_cmp_ready;
assign packetizer_tlp_raw_cmp_first = packetizer_tlp_cmp_first;
assign packetizer_tlp_raw_cmp_last = packetizer_tlp_cmp_last;
assign packetizer_tlp_raw_cmp_payload_dat = packetizer_tlp_cmp_payload_dat;
assign packetizer_tlp_raw_cmp_payload_be = packetizer_tlp_cmp_payload_be;
assign packetizer_tlp_raw_cmp_payload_fmt = packetizer_tlp_cmp_payload_fmt;
always @(*) begin
    packetizer_tlp_raw_cmp_header <= 128'd0;
    packetizer_tlp_raw_cmp_header[13:12] <= packetizer_tlp_cmp_payload_attr;
    packetizer_tlp_raw_cmp_header[44] <= packetizer_tlp_cmp_payload_bcm;
    packetizer_tlp_raw_cmp_header[43:32] <= packetizer_tlp_cmp_payload_byte_count;
    packetizer_tlp_raw_cmp_header[63:48] <= packetizer_tlp_cmp_payload_completer_id;
    packetizer_tlp_raw_cmp_header[14] <= packetizer_tlp_cmp_payload_ep;
    packetizer_tlp_raw_cmp_header[30:29] <= packetizer_tlp_cmp_payload_fmt;
    packetizer_tlp_raw_cmp_header[9:0] <= packetizer_tlp_cmp_payload_length;
    packetizer_tlp_raw_cmp_header[70:64] <= packetizer_tlp_cmp_payload_lower_address;
    packetizer_tlp_raw_cmp_header[95:80] <= packetizer_tlp_cmp_payload_requester_id;
    packetizer_tlp_raw_cmp_header[47:45] <= packetizer_tlp_cmp_payload_status;
    packetizer_tlp_raw_cmp_header[79:72] <= packetizer_tlp_cmp_payload_tag;
    packetizer_tlp_raw_cmp_header[22:20] <= packetizer_tlp_cmp_payload_tc;
    packetizer_tlp_raw_cmp_header[15] <= packetizer_tlp_cmp_payload_td;
    packetizer_tlp_raw_cmp_header[28:24] <= packetizer_tlp_cmp_payload_type;
end
always @(*) begin
    packetizer_tlp_raw_cmp_payload_header <= 128'd0;
    packetizer_tlp_raw_cmp_payload_header[31:0] <= {rhs_slice_proxy35[7:0], rhs_slice_proxy34[15:8], rhs_slice_proxy33[23:16], rhs_slice_proxy32[31:24]};
    packetizer_tlp_raw_cmp_payload_header[63:32] <= {rhs_slice_proxy39[7:0], rhs_slice_proxy38[15:8], rhs_slice_proxy37[23:16], rhs_slice_proxy36[31:24]};
    packetizer_tlp_raw_cmp_payload_header[95:64] <= {rhs_slice_proxy43[7:0], rhs_slice_proxy42[15:8], rhs_slice_proxy41[23:16], rhs_slice_proxy40[31:24]};
    packetizer_tlp_raw_cmp_payload_header[127:96] <= {rhs_slice_proxy47[7:0], rhs_slice_proxy46[15:8], rhs_slice_proxy45[23:16], rhs_slice_proxy44[31:24]};
end
assign packetizer_tlp_ptm_valid = packetizer_ptm_sink_valid;
assign packetizer_ptm_sink_ready = packetizer_tlp_ptm_ready;
assign packetizer_tlp_ptm_first = packetizer_ptm_sink_first;
assign packetizer_tlp_ptm_last = packetizer_ptm_sink_last;
assign packetizer_tlp_ptm_payload_tc = 1'd0;
assign packetizer_tlp_ptm_payload_ln = 1'd0;
assign packetizer_tlp_ptm_payload_th = 1'd0;
assign packetizer_tlp_ptm_payload_td = 1'd0;
assign packetizer_tlp_ptm_payload_ep = 1'd0;
assign packetizer_tlp_ptm_payload_attr = 1'd0;
assign packetizer_tlp_ptm_payload_length = packetizer_ptm_sink_payload_length;
assign packetizer_tlp_ptm_payload_requester_id = packetizer_ptm_sink_payload_requester_id;
assign packetizer_tlp_ptm_payload_message_code = packetizer_ptm_sink_payload_message_code;
assign packetizer_tlp_ptm_payload_master_time = packetizer_ptm_sink_payload_master_time;
always @(*) begin
    packetizer_tlp_ptm_payload_be <= 8'd0;
    packetizer_tlp_ptm_payload_dat <= 64'd0;
    packetizer_tlp_ptm_payload_fmt <= 2'd0;
    packetizer_tlp_ptm_payload_type <= 5'd0;
    if (packetizer_ptm_sink_payload_request) begin
        packetizer_tlp_ptm_payload_type <= 5'd20;
        packetizer_tlp_ptm_payload_fmt <= 1'd1;
    end
    if (packetizer_ptm_sink_payload_response) begin
        packetizer_tlp_ptm_payload_type <= 5'd20;
        packetizer_tlp_ptm_payload_fmt <= 2'd3;
        packetizer_tlp_ptm_payload_dat <= packetizer_ptm_sink_payload_dat;
        packetizer_tlp_ptm_payload_be <= 8'd255;
    end
end
assign packetizer_tlp_raw_ptm_valid = packetizer_tlp_ptm_valid;
assign packetizer_tlp_ptm_ready = packetizer_tlp_raw_ptm_ready;
assign packetizer_tlp_raw_ptm_first = packetizer_tlp_ptm_first;
assign packetizer_tlp_raw_ptm_last = packetizer_tlp_ptm_last;
assign packetizer_tlp_raw_ptm_payload_dat = packetizer_tlp_ptm_payload_dat;
assign packetizer_tlp_raw_ptm_payload_be = packetizer_tlp_ptm_payload_be;
assign packetizer_tlp_raw_ptm_payload_fmt = packetizer_tlp_ptm_payload_fmt;
always @(*) begin
    packetizer_tlp_raw_ptm_header <= 128'd0;
    packetizer_tlp_raw_ptm_header[13:12] <= packetizer_tlp_ptm_payload_attr;
    packetizer_tlp_raw_ptm_header[14] <= packetizer_tlp_ptm_payload_ep;
    packetizer_tlp_raw_ptm_header[30:29] <= packetizer_tlp_ptm_payload_fmt;
    packetizer_tlp_raw_ptm_header[9:0] <= packetizer_tlp_ptm_payload_length;
    packetizer_tlp_raw_ptm_header[17] <= packetizer_tlp_ptm_payload_ln;
    packetizer_tlp_raw_ptm_header[127:64] <= packetizer_tlp_ptm_payload_master_time;
    packetizer_tlp_raw_ptm_header[39:32] <= packetizer_tlp_ptm_payload_message_code;
    packetizer_tlp_raw_ptm_header[63:48] <= packetizer_tlp_ptm_payload_requester_id;
    packetizer_tlp_raw_ptm_header[22:20] <= packetizer_tlp_ptm_payload_tc;
    packetizer_tlp_raw_ptm_header[15] <= packetizer_tlp_ptm_payload_td;
    packetizer_tlp_raw_ptm_header[16] <= packetizer_tlp_ptm_payload_th;
    packetizer_tlp_raw_ptm_header[28:24] <= packetizer_tlp_ptm_payload_type;
end
always @(*) begin
    packetizer_tlp_raw_ptm_payload_header <= 128'd0;
    packetizer_tlp_raw_ptm_payload_header[31:0] <= {rhs_slice_proxy51[7:0], rhs_slice_proxy50[15:8], rhs_slice_proxy49[23:16], rhs_slice_proxy48[31:24]};
    packetizer_tlp_raw_ptm_payload_header[63:32] <= {rhs_slice_proxy55[7:0], rhs_slice_proxy54[15:8], rhs_slice_proxy53[23:16], rhs_slice_proxy52[31:24]};
    packetizer_tlp_raw_ptm_payload_header[95:64] <= {rhs_slice_proxy59[7:0], rhs_slice_proxy58[15:8], rhs_slice_proxy57[23:16], rhs_slice_proxy56[31:24]};
    packetizer_tlp_raw_ptm_payload_header[127:96] <= {rhs_slice_proxy63[7:0], rhs_slice_proxy62[15:8], rhs_slice_proxy61[23:16], rhs_slice_proxy60[31:24]};
end
assign packetizer_sink_sink_valid = packetizer_tlp_raw_valid;
assign packetizer_tlp_raw_ready = packetizer_sink_sink_ready;
assign packetizer_sink_sink_first = packetizer_tlp_raw_first;
assign packetizer_sink_sink_last = packetizer_tlp_raw_last;
assign packetizer_sink_sink_payload_fmt = packetizer_tlp_raw_payload_fmt;
assign packetizer_sink_sink_payload_header = packetizer_tlp_raw_payload_header;
assign packetizer_sink_sink_payload_dat = packetizer_tlp_raw_payload_dat;
assign packetizer_sink_sink_payload_be = packetizer_tlp_raw_payload_be;
assign packetizer_source_valid = packetizer_source_source_valid;
assign packetizer_source_source_ready = packetizer_source_ready;
assign packetizer_source_first = packetizer_source_source_first;
assign packetizer_source_last = packetizer_source_source_last;
always @(*) begin
    packetizer_source_payload_dat <= 64'd0;
    packetizer_source_payload_dat <= packetizer_source_source_payload_dat;
    packetizer_source_payload_dat[31:0] <= {rhs_slice_proxy67[7:0], rhs_slice_proxy66[15:8], rhs_slice_proxy65[23:16], rhs_slice_proxy64[31:24]};
    packetizer_source_payload_dat[63:32] <= {rhs_slice_proxy71[7:0], rhs_slice_proxy70[15:8], rhs_slice_proxy69[23:16], rhs_slice_proxy68[31:24]};
end
always @(*) begin
    packetizer_source_payload_be <= 8'd0;
    packetizer_source_payload_be[3:0] <= {rhs_slice_proxy75[0], rhs_slice_proxy74[1], rhs_slice_proxy73[2], rhs_slice_proxy72[3]};
    packetizer_source_payload_be[7:4] <= {rhs_slice_proxy79[0], rhs_slice_proxy78[1], rhs_slice_proxy77[2], rhs_slice_proxy76[3]};
end
always @(*) begin
    packetizer_request <= 3'd0;
    packetizer_request[0] <= packetizer_status0_ongoing0;
    packetizer_request[1] <= packetizer_status1_ongoing0;
    packetizer_request[2] <= packetizer_status2_ongoing0;
end
always @(*) begin
    packetizer_tlp_raw_cmp_ready <= 1'd0;
    packetizer_tlp_raw_first <= 1'd0;
    packetizer_tlp_raw_last <= 1'd0;
    packetizer_tlp_raw_payload_be <= 8'd0;
    packetizer_tlp_raw_payload_dat <= 64'd0;
    packetizer_tlp_raw_payload_fmt <= 2'd0;
    packetizer_tlp_raw_payload_header <= 128'd0;
    packetizer_tlp_raw_ptm_ready <= 1'd0;
    packetizer_tlp_raw_req_ready <= 1'd0;
    packetizer_tlp_raw_valid <= 1'd0;
    case (packetizer_grant)
        1'd0: begin
            packetizer_tlp_raw_valid <= packetizer_tlp_raw_req_valid;
            packetizer_tlp_raw_req_ready <= packetizer_tlp_raw_ready;
            packetizer_tlp_raw_first <= packetizer_tlp_raw_req_first;
            packetizer_tlp_raw_last <= packetizer_tlp_raw_req_last;
            packetizer_tlp_raw_payload_fmt <= packetizer_tlp_raw_req_payload_fmt;
            packetizer_tlp_raw_payload_header <= packetizer_tlp_raw_req_payload_header;
            packetizer_tlp_raw_payload_dat <= packetizer_tlp_raw_req_payload_dat;
            packetizer_tlp_raw_payload_be <= packetizer_tlp_raw_req_payload_be;
        end
        1'd1: begin
            packetizer_tlp_raw_valid <= packetizer_tlp_raw_cmp_valid;
            packetizer_tlp_raw_cmp_ready <= packetizer_tlp_raw_ready;
            packetizer_tlp_raw_first <= packetizer_tlp_raw_cmp_first;
            packetizer_tlp_raw_last <= packetizer_tlp_raw_cmp_last;
            packetizer_tlp_raw_payload_fmt <= packetizer_tlp_raw_cmp_payload_fmt;
            packetizer_tlp_raw_payload_header <= packetizer_tlp_raw_cmp_payload_header;
            packetizer_tlp_raw_payload_dat <= packetizer_tlp_raw_cmp_payload_dat;
            packetizer_tlp_raw_payload_be <= packetizer_tlp_raw_cmp_payload_be;
        end
        2'd2: begin
            packetizer_tlp_raw_valid <= packetizer_tlp_raw_ptm_valid;
            packetizer_tlp_raw_ptm_ready <= packetizer_tlp_raw_ready;
            packetizer_tlp_raw_first <= packetizer_tlp_raw_ptm_first;
            packetizer_tlp_raw_last <= packetizer_tlp_raw_ptm_last;
            packetizer_tlp_raw_payload_fmt <= packetizer_tlp_raw_ptm_payload_fmt;
            packetizer_tlp_raw_payload_header <= packetizer_tlp_raw_ptm_payload_header;
            packetizer_tlp_raw_payload_dat <= packetizer_tlp_raw_ptm_payload_dat;
            packetizer_tlp_raw_payload_be <= packetizer_tlp_raw_ptm_payload_be;
        end
    endcase
end
always @(*) begin
    packetizer_status0_last <= 1'd0;
    if (packetizer_tlp_raw_req_valid) begin
        packetizer_status0_last <= (packetizer_tlp_raw_req_last & packetizer_tlp_raw_req_ready);
    end
end
assign packetizer_status0_ongoing0 = ((packetizer_tlp_raw_req_valid | packetizer_status0_ongoing1) & (~packetizer_status0_last));
always @(*) begin
    packetizer_status1_last <= 1'd0;
    if (packetizer_tlp_raw_cmp_valid) begin
        packetizer_status1_last <= (packetizer_tlp_raw_cmp_last & packetizer_tlp_raw_cmp_ready);
    end
end
assign packetizer_status1_ongoing0 = ((packetizer_tlp_raw_cmp_valid | packetizer_status1_ongoing1) & (~packetizer_status1_last));
always @(*) begin
    packetizer_status2_last <= 1'd0;
    if (packetizer_tlp_raw_ptm_valid) begin
        packetizer_status2_last <= (packetizer_tlp_raw_ptm_last & packetizer_tlp_raw_ptm_ready);
    end
end
assign packetizer_status2_ongoing0 = ((packetizer_tlp_raw_ptm_valid | packetizer_status2_ongoing1) & (~packetizer_status2_last));
always @(*) begin
    packetizer_header_sel <= 1'd0;
    case (packetizer_tlp_raw_payload_fmt)
        1'd0: begin
            packetizer_header_sel <= 1'd0;
        end
        1'd1: begin
            packetizer_header_sel <= 1'd1;
        end
        2'd2: begin
            packetizer_header_sel <= 1'd0;
        end
        2'd3: begin
            packetizer_header_sel <= 1'd1;
        end
    endcase
end
always @(*) begin
    packetizer_header_inserter_3dws_sink_first <= 1'd0;
    packetizer_header_inserter_3dws_sink_last <= 1'd0;
    packetizer_header_inserter_3dws_sink_payload_be <= 8'd0;
    packetizer_header_inserter_3dws_sink_payload_dat <= 64'd0;
    packetizer_header_inserter_3dws_sink_payload_fmt <= 2'd0;
    packetizer_header_inserter_3dws_sink_payload_header <= 128'd0;
    packetizer_header_inserter_3dws_sink_valid <= 1'd0;
    packetizer_header_inserter_3dws_source_ready <= 1'd0;
    packetizer_header_inserter_4dws_sink_first <= 1'd0;
    packetizer_header_inserter_4dws_sink_last <= 1'd0;
    packetizer_header_inserter_4dws_sink_payload_be <= 8'd0;
    packetizer_header_inserter_4dws_sink_payload_dat <= 64'd0;
    packetizer_header_inserter_4dws_sink_payload_fmt <= 2'd0;
    packetizer_header_inserter_4dws_sink_payload_header <= 128'd0;
    packetizer_header_inserter_4dws_sink_valid <= 1'd0;
    packetizer_header_inserter_4dws_source_ready <= 1'd0;
    packetizer_sink_sink_ready <= 1'd0;
    packetizer_source_source_first <= 1'd0;
    packetizer_source_source_last <= 1'd0;
    packetizer_source_source_payload_be <= 8'd0;
    packetizer_source_source_payload_dat <= 64'd0;
    packetizer_source_source_valid <= 1'd0;
    case (packetizer_header_sel)
        1'd0: begin
            packetizer_header_inserter_3dws_sink_valid <= packetizer_sink_sink_valid;
            packetizer_sink_sink_ready <= packetizer_header_inserter_3dws_sink_ready;
            packetizer_header_inserter_3dws_sink_first <= packetizer_sink_sink_first;
            packetizer_header_inserter_3dws_sink_last <= packetizer_sink_sink_last;
            packetizer_header_inserter_3dws_sink_payload_fmt <= packetizer_sink_sink_payload_fmt;
            packetizer_header_inserter_3dws_sink_payload_header <= packetizer_sink_sink_payload_header;
            packetizer_header_inserter_3dws_sink_payload_dat <= packetizer_sink_sink_payload_dat;
            packetizer_header_inserter_3dws_sink_payload_be <= packetizer_sink_sink_payload_be;
            packetizer_source_source_valid <= packetizer_header_inserter_3dws_source_valid;
            packetizer_header_inserter_3dws_source_ready <= packetizer_source_source_ready;
            packetizer_source_source_first <= packetizer_header_inserter_3dws_source_first;
            packetizer_source_source_last <= packetizer_header_inserter_3dws_source_last;
            packetizer_source_source_payload_dat <= packetizer_header_inserter_3dws_source_payload_dat;
            packetizer_source_source_payload_be <= packetizer_header_inserter_3dws_source_payload_be;
        end
        1'd1: begin
            packetizer_header_inserter_4dws_sink_valid <= packetizer_sink_sink_valid;
            packetizer_sink_sink_ready <= packetizer_header_inserter_4dws_sink_ready;
            packetizer_header_inserter_4dws_sink_first <= packetizer_sink_sink_first;
            packetizer_header_inserter_4dws_sink_last <= packetizer_sink_sink_last;
            packetizer_header_inserter_4dws_sink_payload_fmt <= packetizer_sink_sink_payload_fmt;
            packetizer_header_inserter_4dws_sink_payload_header <= packetizer_sink_sink_payload_header;
            packetizer_header_inserter_4dws_sink_payload_dat <= packetizer_sink_sink_payload_dat;
            packetizer_header_inserter_4dws_sink_payload_be <= packetizer_sink_sink_payload_be;
            packetizer_source_source_valid <= packetizer_header_inserter_4dws_source_valid;
            packetizer_header_inserter_4dws_source_ready <= packetizer_source_source_ready;
            packetizer_source_source_first <= packetizer_header_inserter_4dws_source_first;
            packetizer_source_source_last <= packetizer_header_inserter_4dws_source_last;
            packetizer_source_source_payload_dat <= packetizer_header_inserter_4dws_source_payload_dat;
            packetizer_source_source_payload_be <= packetizer_header_inserter_4dws_source_payload_be;
        end
    endcase
end
always @(*) begin
    litepciecore_litepcieendpoint_litepcietlpheaderinserter64b3dws_next_state <= 1'd0;
    packetizer_header_inserter_3dws_count_litepcietlpheaderinserter64b3dws_next_value <= 1'd0;
    packetizer_header_inserter_3dws_count_litepcietlpheaderinserter64b3dws_next_value_ce <= 1'd0;
    packetizer_header_inserter_3dws_sink_ready <= 1'd0;
    packetizer_header_inserter_3dws_source_first <= 1'd0;
    packetizer_header_inserter_3dws_source_last <= 1'd0;
    packetizer_header_inserter_3dws_source_payload_be <= 8'd0;
    packetizer_header_inserter_3dws_source_payload_dat <= 64'd0;
    packetizer_header_inserter_3dws_source_valid <= 1'd0;
    litepciecore_litepcieendpoint_litepcietlpheaderinserter64b3dws_next_state <= litepciecore_litepcieendpoint_litepcietlpheaderinserter64b3dws_state;
    case (litepciecore_litepcieendpoint_litepcietlpheaderinserter64b3dws_state)
        1'd1: begin
            packetizer_header_inserter_3dws_source_valid <= (packetizer_header_inserter_3dws_sink_valid | packetizer_header_inserter_3dws_last);
            packetizer_header_inserter_3dws_source_last <= packetizer_header_inserter_3dws_last;
            packetizer_header_inserter_3dws_source_payload_dat[31:0] <= packetizer_header_inserter_3dws_dat[63:32];
            packetizer_header_inserter_3dws_source_payload_dat[63:32] <= packetizer_header_inserter_3dws_sink_payload_dat[63:0];
            packetizer_header_inserter_3dws_source_payload_be[3:0] <= packetizer_header_inserter_3dws_be[7:0];
            if (packetizer_header_inserter_3dws_last) begin
                packetizer_header_inserter_3dws_source_payload_be[7:4] <= 1'd0;
            end else begin
                packetizer_header_inserter_3dws_source_payload_be[7:4] <= packetizer_header_inserter_3dws_sink_payload_be[7:0];
            end
            if ((packetizer_header_inserter_3dws_source_valid & packetizer_header_inserter_3dws_source_ready)) begin
                packetizer_header_inserter_3dws_sink_ready <= (~packetizer_header_inserter_3dws_last);
                if (packetizer_header_inserter_3dws_source_last) begin
                    litepciecore_litepcieendpoint_litepcietlpheaderinserter64b3dws_next_state <= 1'd0;
                end
            end
        end
        default: begin
            packetizer_header_inserter_3dws_sink_ready <= 1'd1;
            if ((packetizer_header_inserter_3dws_sink_valid & packetizer_header_inserter_3dws_sink_first)) begin
                packetizer_header_inserter_3dws_sink_ready <= 1'd0;
                packetizer_header_inserter_3dws_source_valid <= 1'd1;
                packetizer_header_inserter_3dws_source_first <= ((packetizer_header_inserter_3dws_count == 1'd0) & packetizer_header_inserter_3dws_sink_first);
                packetizer_header_inserter_3dws_source_last <= (((packetizer_header_inserter_3dws_count == 1'd1) & packetizer_header_inserter_3dws_sink_last) & (packetizer_header_inserter_3dws_sink_payload_be[7:4] == 1'd0));
                if ((packetizer_header_inserter_3dws_count == 1'd0)) begin
                    packetizer_header_inserter_3dws_source_payload_dat[31:0] <= packetizer_header_inserter_3dws_sink_payload_header[127:0];
                    packetizer_header_inserter_3dws_source_payload_dat[63:32] <= packetizer_header_inserter_3dws_sink_payload_header[127:32];
                    packetizer_header_inserter_3dws_source_payload_be[3:0] <= 4'd15;
                    packetizer_header_inserter_3dws_source_payload_be[7:4] <= 4'd15;
                end
                if ((packetizer_header_inserter_3dws_count == 1'd1)) begin
                    packetizer_header_inserter_3dws_source_payload_dat[31:0] <= packetizer_header_inserter_3dws_sink_payload_header[127:64];
                    packetizer_header_inserter_3dws_source_payload_dat[63:32] <= packetizer_header_inserter_3dws_sink_payload_dat[63:0];
                    packetizer_header_inserter_3dws_source_payload_be[3:0] <= 4'd15;
                    packetizer_header_inserter_3dws_source_payload_be[7:4] <= packetizer_header_inserter_3dws_sink_payload_be[7:0];
                end
                if ((packetizer_header_inserter_3dws_source_valid & packetizer_header_inserter_3dws_source_ready)) begin
                    packetizer_header_inserter_3dws_count_litepcietlpheaderinserter64b3dws_next_value <= (packetizer_header_inserter_3dws_count + 1'd1);
                    packetizer_header_inserter_3dws_count_litepcietlpheaderinserter64b3dws_next_value_ce <= 1'd1;
                    if ((packetizer_header_inserter_3dws_count == 1'd1)) begin
                        packetizer_header_inserter_3dws_sink_ready <= 1'd1;
                        if ((~packetizer_header_inserter_3dws_source_last)) begin
                            litepciecore_litepcieendpoint_litepcietlpheaderinserter64b3dws_next_state <= 1'd1;
                        end
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    litepciecore_litepcieendpoint_litepcietlpheaderinserter64b4dws_next_state <= 1'd0;
    packetizer_header_inserter_4dws_count_litepcietlpheaderinserter64b4dws_next_value <= 1'd0;
    packetizer_header_inserter_4dws_count_litepcietlpheaderinserter64b4dws_next_value_ce <= 1'd0;
    packetizer_header_inserter_4dws_sink_ready <= 1'd0;
    packetizer_header_inserter_4dws_source_first <= 1'd0;
    packetizer_header_inserter_4dws_source_last <= 1'd0;
    packetizer_header_inserter_4dws_source_payload_be <= 8'd0;
    packetizer_header_inserter_4dws_source_payload_dat <= 64'd0;
    packetizer_header_inserter_4dws_source_valid <= 1'd0;
    litepciecore_litepcieendpoint_litepcietlpheaderinserter64b4dws_next_state <= litepciecore_litepcieendpoint_litepcietlpheaderinserter64b4dws_state;
    case (litepciecore_litepcieendpoint_litepcietlpheaderinserter64b4dws_state)
        1'd1: begin
            packetizer_header_inserter_4dws_source_valid <= packetizer_header_inserter_4dws_sink_valid;
            packetizer_header_inserter_4dws_source_last <= packetizer_header_inserter_4dws_sink_last;
            packetizer_header_inserter_4dws_source_payload_dat[31:0] <= packetizer_header_inserter_4dws_sink_payload_dat[63:0];
            packetizer_header_inserter_4dws_source_payload_dat[63:32] <= packetizer_header_inserter_4dws_sink_payload_dat[63:32];
            packetizer_header_inserter_4dws_source_payload_be[3:0] <= packetizer_header_inserter_4dws_sink_payload_be[7:0];
            packetizer_header_inserter_4dws_source_payload_be[7:4] <= packetizer_header_inserter_4dws_sink_payload_be[7:4];
            if ((packetizer_header_inserter_4dws_source_valid & packetizer_header_inserter_4dws_source_ready)) begin
                packetizer_header_inserter_4dws_sink_ready <= 1'd1;
                if (packetizer_header_inserter_4dws_source_last) begin
                    litepciecore_litepcieendpoint_litepcietlpheaderinserter64b4dws_next_state <= 1'd0;
                end
            end
        end
        default: begin
            packetizer_header_inserter_4dws_sink_ready <= 1'd1;
            if ((packetizer_header_inserter_4dws_sink_valid & packetizer_header_inserter_4dws_sink_first)) begin
                packetizer_header_inserter_4dws_sink_ready <= 1'd0;
                packetizer_header_inserter_4dws_source_valid <= 1'd1;
                packetizer_header_inserter_4dws_source_first <= ((packetizer_header_inserter_4dws_count == 1'd0) & packetizer_header_inserter_4dws_sink_first);
                packetizer_header_inserter_4dws_source_last <= (((packetizer_header_inserter_4dws_count == 1'd1) & packetizer_header_inserter_4dws_sink_last) & (packetizer_header_inserter_4dws_sink_payload_be == 1'd0));
                if ((packetizer_header_inserter_4dws_count == 1'd0)) begin
                    packetizer_header_inserter_4dws_source_payload_dat[31:0] <= packetizer_header_inserter_4dws_sink_payload_header[127:0];
                    packetizer_header_inserter_4dws_source_payload_dat[63:32] <= packetizer_header_inserter_4dws_sink_payload_header[127:32];
                    packetizer_header_inserter_4dws_source_payload_be[3:0] <= 4'd15;
                    packetizer_header_inserter_4dws_source_payload_be[7:4] <= 4'd15;
                end
                if ((packetizer_header_inserter_4dws_count == 1'd1)) begin
                    packetizer_header_inserter_4dws_source_payload_dat[31:0] <= packetizer_header_inserter_4dws_sink_payload_header[127:64];
                    packetizer_header_inserter_4dws_source_payload_dat[63:32] <= packetizer_header_inserter_4dws_sink_payload_header[127:96];
                    packetizer_header_inserter_4dws_source_payload_be[3:0] <= 4'd15;
                    packetizer_header_inserter_4dws_source_payload_be[7:4] <= 4'd15;
                end
                if ((packetizer_header_inserter_4dws_source_valid & packetizer_header_inserter_4dws_source_ready)) begin
                    packetizer_header_inserter_4dws_count_litepcietlpheaderinserter64b4dws_next_value <= (packetizer_header_inserter_4dws_count + 1'd1);
                    packetizer_header_inserter_4dws_count_litepcietlpheaderinserter64b4dws_next_value_ce <= 1'd1;
                    if ((packetizer_header_inserter_4dws_count == 1'd1)) begin
                        packetizer_header_inserter_4dws_sink_ready <= 1'd1;
                        if ((~packetizer_header_inserter_4dws_source_last)) begin
                            packetizer_header_inserter_4dws_sink_ready <= 1'd0;
                            litepciecore_litepcieendpoint_litepcietlpheaderinserter64b4dws_next_state <= 1'd1;
                        end
                    end
                end
            end
        end
    endcase
end
always @(*) begin
    litepciecore_litepcieendpoint_sel0 <= 2'd0;
    litepciecore_litepcieendpoint_sel0[0] <= 1'd1;
    litepciecore_litepcieendpoint_sel0[1] <= 1'd0;
end
always @(*) begin
    litepciecore_litepcieendpoint_dispatcher0_sel0 <= 3'd0;
    litepciecore_litepcieendpoint_dispatcher0_sel0[0] <= (litepciecore_litepcieendpoint_master_in_source_payload_channel == 2'd2);
    litepciecore_litepcieendpoint_dispatcher0_sel0[1] <= (litepciecore_litepcieendpoint_master_in_source_payload_channel == 1'd0);
    litepciecore_litepcieendpoint_dispatcher0_sel0[2] <= (litepciecore_litepcieendpoint_master_in_source_payload_channel == 2'd3);
end
always @(*) begin
    litepciecore_litepcieendpoint_dispatcher1_sel0 <= 1'd0;
    litepciecore_litepcieendpoint_dispatcher1_sel0 <= (litepciecore_litepcieendpoint_source_payload_channel == 1'd1);
end
assign litepciecore_litepcieendpoint_master_out_source_valid = master_source_valid;
assign master_source_ready = litepciecore_litepcieendpoint_master_out_source_ready;
assign litepciecore_litepcieendpoint_master_out_source_first = master_source_first;
assign litepciecore_litepcieendpoint_master_out_source_last = master_source_last;
assign litepciecore_litepcieendpoint_master_out_source_payload_req_id = master_source_payload_req_id;
assign litepciecore_litepcieendpoint_master_out_source_payload_cmp_id = master_source_payload_cmp_id;
assign litepciecore_litepcieendpoint_master_out_source_payload_adr = master_source_payload_adr;
assign litepciecore_litepcieendpoint_master_out_source_payload_len = master_source_payload_len;
assign litepciecore_litepcieendpoint_master_out_source_payload_end = master_source_payload_end;
assign litepciecore_litepcieendpoint_master_out_source_payload_err = master_source_payload_err;
assign litepciecore_litepcieendpoint_master_out_source_payload_tag = master_source_payload_tag;
assign litepciecore_litepcieendpoint_master_out_source_payload_dat = master_source_payload_dat;
assign litepciecore_litepcieendpoint_master_out_source_payload_channel = master_source_payload_channel;
assign litepciecore_litepcieendpoint_master_out_source_payload_user_id = master_source_payload_user_id;
always @(*) begin
    litepciecore_litepcieendpoint_sel1 <= 2'd0;
    if (litepciecore_litepcieendpoint_first) begin
        litepciecore_litepcieendpoint_sel1 <= litepciecore_litepcieendpoint_sel0;
    end else begin
        litepciecore_litepcieendpoint_sel1 <= litepciecore_litepcieendpoint_sel_ongoing;
    end
end
always @(*) begin
    pcie_wishbone_master_source_first <= 1'd0;
    pcie_wishbone_master_source_last <= 1'd0;
    pcie_wishbone_master_source_payload_adr <= 32'd0;
    pcie_wishbone_master_source_payload_channel <= 8'd0;
    pcie_wishbone_master_source_payload_dat <= 64'd0;
    pcie_wishbone_master_source_payload_len <= 10'd0;
    pcie_wishbone_master_source_payload_req_id <= 16'd0;
    pcie_wishbone_master_source_payload_tag <= 8'd0;
    pcie_wishbone_master_source_payload_user_id <= 8'd0;
    pcie_wishbone_master_source_payload_we <= 1'd0;
    pcie_wishbone_master_source_valid <= 1'd0;
    ptm_capabilities_source_first <= 1'd0;
    ptm_capabilities_source_last <= 1'd0;
    ptm_capabilities_source_payload_adr <= 32'd0;
    ptm_capabilities_source_payload_channel <= 8'd0;
    ptm_capabilities_source_payload_dat <= 64'd0;
    ptm_capabilities_source_payload_len <= 10'd0;
    ptm_capabilities_source_payload_req_id <= 16'd0;
    ptm_capabilities_source_payload_tag <= 8'd0;
    ptm_capabilities_source_payload_user_id <= 8'd0;
    ptm_capabilities_source_payload_we <= 1'd0;
    ptm_capabilities_source_valid <= 1'd0;
    slave_source_ready <= 1'd0;
    case (litepciecore_litepcieendpoint_sel1)
        1'd1: begin
            pcie_wishbone_master_source_valid <= slave_source_valid;
            slave_source_ready <= pcie_wishbone_master_source_ready;
            pcie_wishbone_master_source_first <= slave_source_first;
            pcie_wishbone_master_source_last <= slave_source_last;
            pcie_wishbone_master_source_payload_req_id <= slave_source_payload_req_id;
            pcie_wishbone_master_source_payload_we <= slave_source_payload_we;
            pcie_wishbone_master_source_payload_adr <= slave_source_payload_adr;
            pcie_wishbone_master_source_payload_len <= slave_source_payload_len;
            pcie_wishbone_master_source_payload_tag <= slave_source_payload_tag;
            pcie_wishbone_master_source_payload_dat <= slave_source_payload_dat;
            pcie_wishbone_master_source_payload_channel <= slave_source_payload_channel;
            pcie_wishbone_master_source_payload_user_id <= slave_source_payload_user_id;
        end
        2'd2: begin
            ptm_capabilities_source_valid <= slave_source_valid;
            slave_source_ready <= ptm_capabilities_source_ready;
            ptm_capabilities_source_first <= slave_source_first;
            ptm_capabilities_source_last <= slave_source_last;
            ptm_capabilities_source_payload_req_id <= slave_source_payload_req_id;
            ptm_capabilities_source_payload_we <= slave_source_payload_we;
            ptm_capabilities_source_payload_adr <= slave_source_payload_adr;
            ptm_capabilities_source_payload_len <= slave_source_payload_len;
            ptm_capabilities_source_payload_tag <= slave_source_payload_tag;
            ptm_capabilities_source_payload_dat <= slave_source_payload_dat;
            ptm_capabilities_source_payload_channel <= slave_source_payload_channel;
            ptm_capabilities_source_payload_user_id <= slave_source_payload_user_id;
        end
        default: begin
            slave_source_ready <= 1'd1;
        end
    endcase
end
always @(*) begin
    litepciecore_litepcieendpoint_last <= 1'd0;
    if (slave_source_valid) begin
        litepciecore_litepcieendpoint_last <= (slave_source_last & slave_source_ready);
    end
end
assign litepciecore_litepcieendpoint_ongoing0 = ((slave_source_valid | litepciecore_litepcieendpoint_ongoing1) & (~litepciecore_litepcieendpoint_last));
always @(*) begin
    litepciecore_litepcieendpoint_request <= 2'd0;
    litepciecore_litepcieendpoint_request[0] <= litepciecore_litepcieendpoint_status0_ongoing0;
    litepciecore_litepcieendpoint_request[1] <= litepciecore_litepcieendpoint_status1_ongoing0;
end
always @(*) begin
    pcie_wishbone_master_sink_ready <= 1'd0;
    ptm_capabilities_sink_ready <= 1'd0;
    slave_sink_first <= 1'd0;
    slave_sink_last <= 1'd0;
    slave_sink_payload_adr <= 32'd0;
    slave_sink_payload_channel <= 8'd0;
    slave_sink_payload_cmp_id <= 16'd0;
    slave_sink_payload_dat <= 64'd0;
    slave_sink_payload_end <= 1'd0;
    slave_sink_payload_err <= 1'd0;
    slave_sink_payload_len <= 10'd0;
    slave_sink_payload_req_id <= 16'd0;
    slave_sink_payload_tag <= 8'd0;
    slave_sink_payload_user_id <= 8'd0;
    slave_sink_valid <= 1'd0;
    case (litepciecore_litepcieendpoint_grant)
        1'd0: begin
            slave_sink_valid <= pcie_wishbone_master_sink_valid;
            pcie_wishbone_master_sink_ready <= slave_sink_ready;
            slave_sink_first <= pcie_wishbone_master_sink_first;
            slave_sink_last <= pcie_wishbone_master_sink_last;
            slave_sink_payload_req_id <= pcie_wishbone_master_sink_payload_req_id;
            slave_sink_payload_cmp_id <= pcie_wishbone_master_sink_payload_cmp_id;
            slave_sink_payload_adr <= pcie_wishbone_master_sink_payload_adr;
            slave_sink_payload_len <= pcie_wishbone_master_sink_payload_len;
            slave_sink_payload_end <= pcie_wishbone_master_sink_payload_end;
            slave_sink_payload_err <= pcie_wishbone_master_sink_payload_err;
            slave_sink_payload_tag <= pcie_wishbone_master_sink_payload_tag;
            slave_sink_payload_dat <= pcie_wishbone_master_sink_payload_dat;
            slave_sink_payload_channel <= pcie_wishbone_master_sink_payload_channel;
            slave_sink_payload_user_id <= pcie_wishbone_master_sink_payload_user_id;
        end
        1'd1: begin
            slave_sink_valid <= ptm_capabilities_sink_valid;
            ptm_capabilities_sink_ready <= slave_sink_ready;
            slave_sink_first <= ptm_capabilities_sink_first;
            slave_sink_last <= ptm_capabilities_sink_last;
            slave_sink_payload_req_id <= ptm_capabilities_sink_payload_req_id;
            slave_sink_payload_cmp_id <= ptm_capabilities_sink_payload_cmp_id;
            slave_sink_payload_adr <= ptm_capabilities_sink_payload_adr;
            slave_sink_payload_len <= ptm_capabilities_sink_payload_len;
            slave_sink_payload_end <= ptm_capabilities_sink_payload_end;
            slave_sink_payload_err <= ptm_capabilities_sink_payload_err;
            slave_sink_payload_tag <= ptm_capabilities_sink_payload_tag;
            slave_sink_payload_dat <= ptm_capabilities_sink_payload_dat;
            slave_sink_payload_channel <= ptm_capabilities_sink_payload_channel;
            slave_sink_payload_user_id <= ptm_capabilities_sink_payload_user_id;
        end
    endcase
end
always @(*) begin
    litepciecore_litepcieendpoint_status0_last <= 1'd0;
    if (pcie_wishbone_master_sink_valid) begin
        litepciecore_litepcieendpoint_status0_last <= (pcie_wishbone_master_sink_last & pcie_wishbone_master_sink_ready);
    end
end
assign litepciecore_litepcieendpoint_status0_ongoing0 = ((pcie_wishbone_master_sink_valid | litepciecore_litepcieendpoint_status0_ongoing1) & (~litepciecore_litepcieendpoint_status0_last));
always @(*) begin
    litepciecore_litepcieendpoint_status1_last <= 1'd0;
    if (ptm_capabilities_sink_valid) begin
        litepciecore_litepcieendpoint_status1_last <= (ptm_capabilities_sink_last & ptm_capabilities_sink_ready);
    end
end
assign litepciecore_litepcieendpoint_status1_ongoing0 = ((ptm_capabilities_sink_valid | litepciecore_litepcieendpoint_status1_ongoing1) & (~litepciecore_litepcieendpoint_status1_last));
assign litepciecore_litepcieendpoint_master_out_sink_first = litepciecore_litepcieendpoint_master_in_sink_first;
assign litepciecore_litepcieendpoint_master_out_sink_last = litepciecore_litepcieendpoint_master_in_sink_last;
assign litepciecore_litepcieendpoint_master_out_sink_payload_req_id = litepciecore_litepcieendpoint_master_in_sink_payload_req_id;
assign litepciecore_litepcieendpoint_master_out_sink_payload_we = litepciecore_litepcieendpoint_master_in_sink_payload_we;
assign litepciecore_litepcieendpoint_master_out_sink_payload_adr = litepciecore_litepcieendpoint_master_in_sink_payload_adr;
assign litepciecore_litepcieendpoint_master_out_sink_payload_len = litepciecore_litepcieendpoint_master_in_sink_payload_len;
assign litepciecore_litepcieendpoint_master_out_sink_payload_dat = litepciecore_litepcieendpoint_master_in_sink_payload_dat;
assign litepciecore_litepcieendpoint_master_out_sink_payload_channel = litepciecore_litepcieendpoint_master_in_sink_payload_channel;
assign litepciecore_litepcieendpoint_master_out_sink_payload_user_id = litepciecore_litepcieendpoint_master_in_sink_payload_user_id;
always @(*) begin
    litepciecore_litepcieendpoint_cmp_reorder_ready <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo0_sink_first <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo0_sink_last <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo0_sink_payload_adr <= 32'd0;
    litepciecore_litepcieendpoint_syncfifo0_sink_payload_channel <= 8'd0;
    litepciecore_litepcieendpoint_syncfifo0_sink_payload_cmp_id <= 16'd0;
    litepciecore_litepcieendpoint_syncfifo0_sink_payload_dat <= 64'd0;
    litepciecore_litepcieendpoint_syncfifo0_sink_payload_end <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo0_sink_payload_err <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo0_sink_payload_len <= 10'd0;
    litepciecore_litepcieendpoint_syncfifo0_sink_payload_req_id <= 16'd0;
    litepciecore_litepcieendpoint_syncfifo0_sink_payload_tag <= 8'd0;
    litepciecore_litepcieendpoint_syncfifo0_sink_payload_user_id <= 8'd0;
    litepciecore_litepcieendpoint_syncfifo0_sink_valid <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo1_sink_first <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo1_sink_last <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo1_sink_payload_adr <= 32'd0;
    litepciecore_litepcieendpoint_syncfifo1_sink_payload_channel <= 8'd0;
    litepciecore_litepcieendpoint_syncfifo1_sink_payload_cmp_id <= 16'd0;
    litepciecore_litepcieendpoint_syncfifo1_sink_payload_dat <= 64'd0;
    litepciecore_litepcieendpoint_syncfifo1_sink_payload_end <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo1_sink_payload_err <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo1_sink_payload_len <= 10'd0;
    litepciecore_litepcieendpoint_syncfifo1_sink_payload_req_id <= 16'd0;
    litepciecore_litepcieendpoint_syncfifo1_sink_payload_tag <= 8'd0;
    litepciecore_litepcieendpoint_syncfifo1_sink_payload_user_id <= 8'd0;
    litepciecore_litepcieendpoint_syncfifo1_sink_valid <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo2_sink_first <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo2_sink_last <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo2_sink_payload_adr <= 32'd0;
    litepciecore_litepcieendpoint_syncfifo2_sink_payload_channel <= 8'd0;
    litepciecore_litepcieendpoint_syncfifo2_sink_payload_cmp_id <= 16'd0;
    litepciecore_litepcieendpoint_syncfifo2_sink_payload_dat <= 64'd0;
    litepciecore_litepcieendpoint_syncfifo2_sink_payload_end <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo2_sink_payload_err <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo2_sink_payload_len <= 10'd0;
    litepciecore_litepcieendpoint_syncfifo2_sink_payload_req_id <= 16'd0;
    litepciecore_litepcieendpoint_syncfifo2_sink_payload_tag <= 8'd0;
    litepciecore_litepcieendpoint_syncfifo2_sink_payload_user_id <= 8'd0;
    litepciecore_litepcieendpoint_syncfifo2_sink_valid <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo3_sink_first <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo3_sink_last <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo3_sink_payload_adr <= 32'd0;
    litepciecore_litepcieendpoint_syncfifo3_sink_payload_channel <= 8'd0;
    litepciecore_litepcieendpoint_syncfifo3_sink_payload_cmp_id <= 16'd0;
    litepciecore_litepcieendpoint_syncfifo3_sink_payload_dat <= 64'd0;
    litepciecore_litepcieendpoint_syncfifo3_sink_payload_end <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo3_sink_payload_err <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo3_sink_payload_len <= 10'd0;
    litepciecore_litepcieendpoint_syncfifo3_sink_payload_req_id <= 16'd0;
    litepciecore_litepcieendpoint_syncfifo3_sink_payload_tag <= 8'd0;
    litepciecore_litepcieendpoint_syncfifo3_sink_payload_user_id <= 8'd0;
    litepciecore_litepcieendpoint_syncfifo3_sink_valid <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo4_sink_first <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo4_sink_last <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo4_sink_payload_adr <= 32'd0;
    litepciecore_litepcieendpoint_syncfifo4_sink_payload_channel <= 8'd0;
    litepciecore_litepcieendpoint_syncfifo4_sink_payload_cmp_id <= 16'd0;
    litepciecore_litepcieendpoint_syncfifo4_sink_payload_dat <= 64'd0;
    litepciecore_litepcieendpoint_syncfifo4_sink_payload_end <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo4_sink_payload_err <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo4_sink_payload_len <= 10'd0;
    litepciecore_litepcieendpoint_syncfifo4_sink_payload_req_id <= 16'd0;
    litepciecore_litepcieendpoint_syncfifo4_sink_payload_tag <= 8'd0;
    litepciecore_litepcieendpoint_syncfifo4_sink_payload_user_id <= 8'd0;
    litepciecore_litepcieendpoint_syncfifo4_sink_valid <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo5_sink_first <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo5_sink_last <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo5_sink_payload_adr <= 32'd0;
    litepciecore_litepcieendpoint_syncfifo5_sink_payload_channel <= 8'd0;
    litepciecore_litepcieendpoint_syncfifo5_sink_payload_cmp_id <= 16'd0;
    litepciecore_litepcieendpoint_syncfifo5_sink_payload_dat <= 64'd0;
    litepciecore_litepcieendpoint_syncfifo5_sink_payload_end <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo5_sink_payload_err <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo5_sink_payload_len <= 10'd0;
    litepciecore_litepcieendpoint_syncfifo5_sink_payload_req_id <= 16'd0;
    litepciecore_litepcieendpoint_syncfifo5_sink_payload_tag <= 8'd0;
    litepciecore_litepcieendpoint_syncfifo5_sink_payload_user_id <= 8'd0;
    litepciecore_litepcieendpoint_syncfifo5_sink_valid <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo6_sink_first <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo6_sink_last <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo6_sink_payload_adr <= 32'd0;
    litepciecore_litepcieendpoint_syncfifo6_sink_payload_channel <= 8'd0;
    litepciecore_litepcieendpoint_syncfifo6_sink_payload_cmp_id <= 16'd0;
    litepciecore_litepcieendpoint_syncfifo6_sink_payload_dat <= 64'd0;
    litepciecore_litepcieendpoint_syncfifo6_sink_payload_end <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo6_sink_payload_err <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo6_sink_payload_len <= 10'd0;
    litepciecore_litepcieendpoint_syncfifo6_sink_payload_req_id <= 16'd0;
    litepciecore_litepcieendpoint_syncfifo6_sink_payload_tag <= 8'd0;
    litepciecore_litepcieendpoint_syncfifo6_sink_payload_user_id <= 8'd0;
    litepciecore_litepcieendpoint_syncfifo6_sink_valid <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo7_sink_first <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo7_sink_last <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo7_sink_payload_adr <= 32'd0;
    litepciecore_litepcieendpoint_syncfifo7_sink_payload_channel <= 8'd0;
    litepciecore_litepcieendpoint_syncfifo7_sink_payload_cmp_id <= 16'd0;
    litepciecore_litepcieendpoint_syncfifo7_sink_payload_dat <= 64'd0;
    litepciecore_litepcieendpoint_syncfifo7_sink_payload_end <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo7_sink_payload_err <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo7_sink_payload_len <= 10'd0;
    litepciecore_litepcieendpoint_syncfifo7_sink_payload_req_id <= 16'd0;
    litepciecore_litepcieendpoint_syncfifo7_sink_payload_tag <= 8'd0;
    litepciecore_litepcieendpoint_syncfifo7_sink_payload_user_id <= 8'd0;
    litepciecore_litepcieendpoint_syncfifo7_sink_valid <= 1'd0;
    case (litepciecore_litepcieendpoint_cmp_reorder_payload_tag)
        1'd0: begin
            litepciecore_litepcieendpoint_syncfifo0_sink_valid <= litepciecore_litepcieendpoint_cmp_reorder_valid;
            litepciecore_litepcieendpoint_cmp_reorder_ready <= litepciecore_litepcieendpoint_syncfifo0_sink_ready;
            litepciecore_litepcieendpoint_syncfifo0_sink_first <= litepciecore_litepcieendpoint_cmp_reorder_first;
            litepciecore_litepcieendpoint_syncfifo0_sink_last <= litepciecore_litepcieendpoint_cmp_reorder_last;
            litepciecore_litepcieendpoint_syncfifo0_sink_payload_req_id <= litepciecore_litepcieendpoint_cmp_reorder_payload_req_id;
            litepciecore_litepcieendpoint_syncfifo0_sink_payload_cmp_id <= litepciecore_litepcieendpoint_cmp_reorder_payload_cmp_id;
            litepciecore_litepcieendpoint_syncfifo0_sink_payload_adr <= litepciecore_litepcieendpoint_cmp_reorder_payload_adr;
            litepciecore_litepcieendpoint_syncfifo0_sink_payload_len <= litepciecore_litepcieendpoint_cmp_reorder_payload_len;
            litepciecore_litepcieendpoint_syncfifo0_sink_payload_end <= litepciecore_litepcieendpoint_cmp_reorder_payload_end;
            litepciecore_litepcieendpoint_syncfifo0_sink_payload_err <= litepciecore_litepcieendpoint_cmp_reorder_payload_err;
            litepciecore_litepcieendpoint_syncfifo0_sink_payload_tag <= litepciecore_litepcieendpoint_cmp_reorder_payload_tag;
            litepciecore_litepcieendpoint_syncfifo0_sink_payload_dat <= litepciecore_litepcieendpoint_cmp_reorder_payload_dat;
            litepciecore_litepcieendpoint_syncfifo0_sink_payload_channel <= litepciecore_litepcieendpoint_cmp_reorder_payload_channel;
            litepciecore_litepcieendpoint_syncfifo0_sink_payload_user_id <= litepciecore_litepcieendpoint_cmp_reorder_payload_user_id;
        end
        1'd1: begin
            litepciecore_litepcieendpoint_syncfifo1_sink_valid <= litepciecore_litepcieendpoint_cmp_reorder_valid;
            litepciecore_litepcieendpoint_cmp_reorder_ready <= litepciecore_litepcieendpoint_syncfifo1_sink_ready;
            litepciecore_litepcieendpoint_syncfifo1_sink_first <= litepciecore_litepcieendpoint_cmp_reorder_first;
            litepciecore_litepcieendpoint_syncfifo1_sink_last <= litepciecore_litepcieendpoint_cmp_reorder_last;
            litepciecore_litepcieendpoint_syncfifo1_sink_payload_req_id <= litepciecore_litepcieendpoint_cmp_reorder_payload_req_id;
            litepciecore_litepcieendpoint_syncfifo1_sink_payload_cmp_id <= litepciecore_litepcieendpoint_cmp_reorder_payload_cmp_id;
            litepciecore_litepcieendpoint_syncfifo1_sink_payload_adr <= litepciecore_litepcieendpoint_cmp_reorder_payload_adr;
            litepciecore_litepcieendpoint_syncfifo1_sink_payload_len <= litepciecore_litepcieendpoint_cmp_reorder_payload_len;
            litepciecore_litepcieendpoint_syncfifo1_sink_payload_end <= litepciecore_litepcieendpoint_cmp_reorder_payload_end;
            litepciecore_litepcieendpoint_syncfifo1_sink_payload_err <= litepciecore_litepcieendpoint_cmp_reorder_payload_err;
            litepciecore_litepcieendpoint_syncfifo1_sink_payload_tag <= litepciecore_litepcieendpoint_cmp_reorder_payload_tag;
            litepciecore_litepcieendpoint_syncfifo1_sink_payload_dat <= litepciecore_litepcieendpoint_cmp_reorder_payload_dat;
            litepciecore_litepcieendpoint_syncfifo1_sink_payload_channel <= litepciecore_litepcieendpoint_cmp_reorder_payload_channel;
            litepciecore_litepcieendpoint_syncfifo1_sink_payload_user_id <= litepciecore_litepcieendpoint_cmp_reorder_payload_user_id;
        end
        2'd2: begin
            litepciecore_litepcieendpoint_syncfifo2_sink_valid <= litepciecore_litepcieendpoint_cmp_reorder_valid;
            litepciecore_litepcieendpoint_cmp_reorder_ready <= litepciecore_litepcieendpoint_syncfifo2_sink_ready;
            litepciecore_litepcieendpoint_syncfifo2_sink_first <= litepciecore_litepcieendpoint_cmp_reorder_first;
            litepciecore_litepcieendpoint_syncfifo2_sink_last <= litepciecore_litepcieendpoint_cmp_reorder_last;
            litepciecore_litepcieendpoint_syncfifo2_sink_payload_req_id <= litepciecore_litepcieendpoint_cmp_reorder_payload_req_id;
            litepciecore_litepcieendpoint_syncfifo2_sink_payload_cmp_id <= litepciecore_litepcieendpoint_cmp_reorder_payload_cmp_id;
            litepciecore_litepcieendpoint_syncfifo2_sink_payload_adr <= litepciecore_litepcieendpoint_cmp_reorder_payload_adr;
            litepciecore_litepcieendpoint_syncfifo2_sink_payload_len <= litepciecore_litepcieendpoint_cmp_reorder_payload_len;
            litepciecore_litepcieendpoint_syncfifo2_sink_payload_end <= litepciecore_litepcieendpoint_cmp_reorder_payload_end;
            litepciecore_litepcieendpoint_syncfifo2_sink_payload_err <= litepciecore_litepcieendpoint_cmp_reorder_payload_err;
            litepciecore_litepcieendpoint_syncfifo2_sink_payload_tag <= litepciecore_litepcieendpoint_cmp_reorder_payload_tag;
            litepciecore_litepcieendpoint_syncfifo2_sink_payload_dat <= litepciecore_litepcieendpoint_cmp_reorder_payload_dat;
            litepciecore_litepcieendpoint_syncfifo2_sink_payload_channel <= litepciecore_litepcieendpoint_cmp_reorder_payload_channel;
            litepciecore_litepcieendpoint_syncfifo2_sink_payload_user_id <= litepciecore_litepcieendpoint_cmp_reorder_payload_user_id;
        end
        2'd3: begin
            litepciecore_litepcieendpoint_syncfifo3_sink_valid <= litepciecore_litepcieendpoint_cmp_reorder_valid;
            litepciecore_litepcieendpoint_cmp_reorder_ready <= litepciecore_litepcieendpoint_syncfifo3_sink_ready;
            litepciecore_litepcieendpoint_syncfifo3_sink_first <= litepciecore_litepcieendpoint_cmp_reorder_first;
            litepciecore_litepcieendpoint_syncfifo3_sink_last <= litepciecore_litepcieendpoint_cmp_reorder_last;
            litepciecore_litepcieendpoint_syncfifo3_sink_payload_req_id <= litepciecore_litepcieendpoint_cmp_reorder_payload_req_id;
            litepciecore_litepcieendpoint_syncfifo3_sink_payload_cmp_id <= litepciecore_litepcieendpoint_cmp_reorder_payload_cmp_id;
            litepciecore_litepcieendpoint_syncfifo3_sink_payload_adr <= litepciecore_litepcieendpoint_cmp_reorder_payload_adr;
            litepciecore_litepcieendpoint_syncfifo3_sink_payload_len <= litepciecore_litepcieendpoint_cmp_reorder_payload_len;
            litepciecore_litepcieendpoint_syncfifo3_sink_payload_end <= litepciecore_litepcieendpoint_cmp_reorder_payload_end;
            litepciecore_litepcieendpoint_syncfifo3_sink_payload_err <= litepciecore_litepcieendpoint_cmp_reorder_payload_err;
            litepciecore_litepcieendpoint_syncfifo3_sink_payload_tag <= litepciecore_litepcieendpoint_cmp_reorder_payload_tag;
            litepciecore_litepcieendpoint_syncfifo3_sink_payload_dat <= litepciecore_litepcieendpoint_cmp_reorder_payload_dat;
            litepciecore_litepcieendpoint_syncfifo3_sink_payload_channel <= litepciecore_litepcieendpoint_cmp_reorder_payload_channel;
            litepciecore_litepcieendpoint_syncfifo3_sink_payload_user_id <= litepciecore_litepcieendpoint_cmp_reorder_payload_user_id;
        end
        3'd4: begin
            litepciecore_litepcieendpoint_syncfifo4_sink_valid <= litepciecore_litepcieendpoint_cmp_reorder_valid;
            litepciecore_litepcieendpoint_cmp_reorder_ready <= litepciecore_litepcieendpoint_syncfifo4_sink_ready;
            litepciecore_litepcieendpoint_syncfifo4_sink_first <= litepciecore_litepcieendpoint_cmp_reorder_first;
            litepciecore_litepcieendpoint_syncfifo4_sink_last <= litepciecore_litepcieendpoint_cmp_reorder_last;
            litepciecore_litepcieendpoint_syncfifo4_sink_payload_req_id <= litepciecore_litepcieendpoint_cmp_reorder_payload_req_id;
            litepciecore_litepcieendpoint_syncfifo4_sink_payload_cmp_id <= litepciecore_litepcieendpoint_cmp_reorder_payload_cmp_id;
            litepciecore_litepcieendpoint_syncfifo4_sink_payload_adr <= litepciecore_litepcieendpoint_cmp_reorder_payload_adr;
            litepciecore_litepcieendpoint_syncfifo4_sink_payload_len <= litepciecore_litepcieendpoint_cmp_reorder_payload_len;
            litepciecore_litepcieendpoint_syncfifo4_sink_payload_end <= litepciecore_litepcieendpoint_cmp_reorder_payload_end;
            litepciecore_litepcieendpoint_syncfifo4_sink_payload_err <= litepciecore_litepcieendpoint_cmp_reorder_payload_err;
            litepciecore_litepcieendpoint_syncfifo4_sink_payload_tag <= litepciecore_litepcieendpoint_cmp_reorder_payload_tag;
            litepciecore_litepcieendpoint_syncfifo4_sink_payload_dat <= litepciecore_litepcieendpoint_cmp_reorder_payload_dat;
            litepciecore_litepcieendpoint_syncfifo4_sink_payload_channel <= litepciecore_litepcieendpoint_cmp_reorder_payload_channel;
            litepciecore_litepcieendpoint_syncfifo4_sink_payload_user_id <= litepciecore_litepcieendpoint_cmp_reorder_payload_user_id;
        end
        3'd5: begin
            litepciecore_litepcieendpoint_syncfifo5_sink_valid <= litepciecore_litepcieendpoint_cmp_reorder_valid;
            litepciecore_litepcieendpoint_cmp_reorder_ready <= litepciecore_litepcieendpoint_syncfifo5_sink_ready;
            litepciecore_litepcieendpoint_syncfifo5_sink_first <= litepciecore_litepcieendpoint_cmp_reorder_first;
            litepciecore_litepcieendpoint_syncfifo5_sink_last <= litepciecore_litepcieendpoint_cmp_reorder_last;
            litepciecore_litepcieendpoint_syncfifo5_sink_payload_req_id <= litepciecore_litepcieendpoint_cmp_reorder_payload_req_id;
            litepciecore_litepcieendpoint_syncfifo5_sink_payload_cmp_id <= litepciecore_litepcieendpoint_cmp_reorder_payload_cmp_id;
            litepciecore_litepcieendpoint_syncfifo5_sink_payload_adr <= litepciecore_litepcieendpoint_cmp_reorder_payload_adr;
            litepciecore_litepcieendpoint_syncfifo5_sink_payload_len <= litepciecore_litepcieendpoint_cmp_reorder_payload_len;
            litepciecore_litepcieendpoint_syncfifo5_sink_payload_end <= litepciecore_litepcieendpoint_cmp_reorder_payload_end;
            litepciecore_litepcieendpoint_syncfifo5_sink_payload_err <= litepciecore_litepcieendpoint_cmp_reorder_payload_err;
            litepciecore_litepcieendpoint_syncfifo5_sink_payload_tag <= litepciecore_litepcieendpoint_cmp_reorder_payload_tag;
            litepciecore_litepcieendpoint_syncfifo5_sink_payload_dat <= litepciecore_litepcieendpoint_cmp_reorder_payload_dat;
            litepciecore_litepcieendpoint_syncfifo5_sink_payload_channel <= litepciecore_litepcieendpoint_cmp_reorder_payload_channel;
            litepciecore_litepcieendpoint_syncfifo5_sink_payload_user_id <= litepciecore_litepcieendpoint_cmp_reorder_payload_user_id;
        end
        3'd6: begin
            litepciecore_litepcieendpoint_syncfifo6_sink_valid <= litepciecore_litepcieendpoint_cmp_reorder_valid;
            litepciecore_litepcieendpoint_cmp_reorder_ready <= litepciecore_litepcieendpoint_syncfifo6_sink_ready;
            litepciecore_litepcieendpoint_syncfifo6_sink_first <= litepciecore_litepcieendpoint_cmp_reorder_first;
            litepciecore_litepcieendpoint_syncfifo6_sink_last <= litepciecore_litepcieendpoint_cmp_reorder_last;
            litepciecore_litepcieendpoint_syncfifo6_sink_payload_req_id <= litepciecore_litepcieendpoint_cmp_reorder_payload_req_id;
            litepciecore_litepcieendpoint_syncfifo6_sink_payload_cmp_id <= litepciecore_litepcieendpoint_cmp_reorder_payload_cmp_id;
            litepciecore_litepcieendpoint_syncfifo6_sink_payload_adr <= litepciecore_litepcieendpoint_cmp_reorder_payload_adr;
            litepciecore_litepcieendpoint_syncfifo6_sink_payload_len <= litepciecore_litepcieendpoint_cmp_reorder_payload_len;
            litepciecore_litepcieendpoint_syncfifo6_sink_payload_end <= litepciecore_litepcieendpoint_cmp_reorder_payload_end;
            litepciecore_litepcieendpoint_syncfifo6_sink_payload_err <= litepciecore_litepcieendpoint_cmp_reorder_payload_err;
            litepciecore_litepcieendpoint_syncfifo6_sink_payload_tag <= litepciecore_litepcieendpoint_cmp_reorder_payload_tag;
            litepciecore_litepcieendpoint_syncfifo6_sink_payload_dat <= litepciecore_litepcieendpoint_cmp_reorder_payload_dat;
            litepciecore_litepcieendpoint_syncfifo6_sink_payload_channel <= litepciecore_litepcieendpoint_cmp_reorder_payload_channel;
            litepciecore_litepcieendpoint_syncfifo6_sink_payload_user_id <= litepciecore_litepcieendpoint_cmp_reorder_payload_user_id;
        end
        3'd7: begin
            litepciecore_litepcieendpoint_syncfifo7_sink_valid <= litepciecore_litepcieendpoint_cmp_reorder_valid;
            litepciecore_litepcieendpoint_cmp_reorder_ready <= litepciecore_litepcieendpoint_syncfifo7_sink_ready;
            litepciecore_litepcieendpoint_syncfifo7_sink_first <= litepciecore_litepcieendpoint_cmp_reorder_first;
            litepciecore_litepcieendpoint_syncfifo7_sink_last <= litepciecore_litepcieendpoint_cmp_reorder_last;
            litepciecore_litepcieendpoint_syncfifo7_sink_payload_req_id <= litepciecore_litepcieendpoint_cmp_reorder_payload_req_id;
            litepciecore_litepcieendpoint_syncfifo7_sink_payload_cmp_id <= litepciecore_litepcieendpoint_cmp_reorder_payload_cmp_id;
            litepciecore_litepcieendpoint_syncfifo7_sink_payload_adr <= litepciecore_litepcieendpoint_cmp_reorder_payload_adr;
            litepciecore_litepcieendpoint_syncfifo7_sink_payload_len <= litepciecore_litepcieendpoint_cmp_reorder_payload_len;
            litepciecore_litepcieendpoint_syncfifo7_sink_payload_end <= litepciecore_litepcieendpoint_cmp_reorder_payload_end;
            litepciecore_litepcieendpoint_syncfifo7_sink_payload_err <= litepciecore_litepcieendpoint_cmp_reorder_payload_err;
            litepciecore_litepcieendpoint_syncfifo7_sink_payload_tag <= litepciecore_litepcieendpoint_cmp_reorder_payload_tag;
            litepciecore_litepcieendpoint_syncfifo7_sink_payload_dat <= litepciecore_litepcieendpoint_cmp_reorder_payload_dat;
            litepciecore_litepcieendpoint_syncfifo7_sink_payload_channel <= litepciecore_litepcieendpoint_cmp_reorder_payload_channel;
            litepciecore_litepcieendpoint_syncfifo7_sink_payload_user_id <= litepciecore_litepcieendpoint_cmp_reorder_payload_user_id;
        end
    endcase
end
always @(*) begin
    litepciecore_litepcieendpoint_req_queue_source_ready <= 1'd0;
    if (((litepciecore_litepcieendpoint_master_in_source_valid & litepciecore_litepcieendpoint_master_in_source_last) & litepciecore_litepcieendpoint_master_in_source_payload_end)) begin
        litepciecore_litepcieendpoint_req_queue_source_ready <= litepciecore_litepcieendpoint_master_in_source_ready;
    end
end
always @(*) begin
    litepciecore_litepcieendpoint_master_in_source_first <= 1'd0;
    litepciecore_litepcieendpoint_master_in_source_last <= 1'd0;
    litepciecore_litepcieendpoint_master_in_source_payload_adr <= 32'd0;
    litepciecore_litepcieendpoint_master_in_source_payload_channel <= 8'd0;
    litepciecore_litepcieendpoint_master_in_source_payload_cmp_id <= 16'd0;
    litepciecore_litepcieendpoint_master_in_source_payload_dat <= 64'd0;
    litepciecore_litepcieendpoint_master_in_source_payload_end <= 1'd0;
    litepciecore_litepcieendpoint_master_in_source_payload_err <= 1'd0;
    litepciecore_litepcieendpoint_master_in_source_payload_len <= 10'd0;
    litepciecore_litepcieendpoint_master_in_source_payload_req_id <= 16'd0;
    litepciecore_litepcieendpoint_master_in_source_payload_tag <= 8'd0;
    litepciecore_litepcieendpoint_master_in_source_payload_user_id <= 8'd0;
    litepciecore_litepcieendpoint_master_in_source_valid <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo0_source_ready <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo1_source_ready <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo2_source_ready <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo3_source_ready <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo4_source_ready <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo5_source_ready <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo6_source_ready <= 1'd0;
    litepciecore_litepcieendpoint_syncfifo7_source_ready <= 1'd0;
    case (litepciecore_litepcieendpoint_req_queue_source_payload_tag)
        1'd0: begin
            litepciecore_litepcieendpoint_master_in_source_valid <= litepciecore_litepcieendpoint_syncfifo0_source_valid;
            litepciecore_litepcieendpoint_syncfifo0_source_ready <= litepciecore_litepcieendpoint_master_in_source_ready;
            litepciecore_litepcieendpoint_master_in_source_first <= litepciecore_litepcieendpoint_syncfifo0_source_first;
            litepciecore_litepcieendpoint_master_in_source_last <= litepciecore_litepcieendpoint_syncfifo0_source_last;
            litepciecore_litepcieendpoint_master_in_source_payload_req_id <= litepciecore_litepcieendpoint_syncfifo0_source_payload_req_id;
            litepciecore_litepcieendpoint_master_in_source_payload_cmp_id <= litepciecore_litepcieendpoint_syncfifo0_source_payload_cmp_id;
            litepciecore_litepcieendpoint_master_in_source_payload_adr <= litepciecore_litepcieendpoint_syncfifo0_source_payload_adr;
            litepciecore_litepcieendpoint_master_in_source_payload_len <= litepciecore_litepcieendpoint_syncfifo0_source_payload_len;
            litepciecore_litepcieendpoint_master_in_source_payload_end <= litepciecore_litepcieendpoint_syncfifo0_source_payload_end;
            litepciecore_litepcieendpoint_master_in_source_payload_err <= litepciecore_litepcieendpoint_syncfifo0_source_payload_err;
            litepciecore_litepcieendpoint_master_in_source_payload_tag <= litepciecore_litepcieendpoint_syncfifo0_source_payload_tag;
            litepciecore_litepcieendpoint_master_in_source_payload_dat <= litepciecore_litepcieendpoint_syncfifo0_source_payload_dat;
            litepciecore_litepcieendpoint_master_in_source_payload_channel <= litepciecore_litepcieendpoint_syncfifo0_source_payload_channel;
            litepciecore_litepcieendpoint_master_in_source_payload_user_id <= litepciecore_litepcieendpoint_syncfifo0_source_payload_user_id;
        end
        1'd1: begin
            litepciecore_litepcieendpoint_master_in_source_valid <= litepciecore_litepcieendpoint_syncfifo1_source_valid;
            litepciecore_litepcieendpoint_syncfifo1_source_ready <= litepciecore_litepcieendpoint_master_in_source_ready;
            litepciecore_litepcieendpoint_master_in_source_first <= litepciecore_litepcieendpoint_syncfifo1_source_first;
            litepciecore_litepcieendpoint_master_in_source_last <= litepciecore_litepcieendpoint_syncfifo1_source_last;
            litepciecore_litepcieendpoint_master_in_source_payload_req_id <= litepciecore_litepcieendpoint_syncfifo1_source_payload_req_id;
            litepciecore_litepcieendpoint_master_in_source_payload_cmp_id <= litepciecore_litepcieendpoint_syncfifo1_source_payload_cmp_id;
            litepciecore_litepcieendpoint_master_in_source_payload_adr <= litepciecore_litepcieendpoint_syncfifo1_source_payload_adr;
            litepciecore_litepcieendpoint_master_in_source_payload_len <= litepciecore_litepcieendpoint_syncfifo1_source_payload_len;
            litepciecore_litepcieendpoint_master_in_source_payload_end <= litepciecore_litepcieendpoint_syncfifo1_source_payload_end;
            litepciecore_litepcieendpoint_master_in_source_payload_err <= litepciecore_litepcieendpoint_syncfifo1_source_payload_err;
            litepciecore_litepcieendpoint_master_in_source_payload_tag <= litepciecore_litepcieendpoint_syncfifo1_source_payload_tag;
            litepciecore_litepcieendpoint_master_in_source_payload_dat <= litepciecore_litepcieendpoint_syncfifo1_source_payload_dat;
            litepciecore_litepcieendpoint_master_in_source_payload_channel <= litepciecore_litepcieendpoint_syncfifo1_source_payload_channel;
            litepciecore_litepcieendpoint_master_in_source_payload_user_id <= litepciecore_litepcieendpoint_syncfifo1_source_payload_user_id;
        end
        2'd2: begin
            litepciecore_litepcieendpoint_master_in_source_valid <= litepciecore_litepcieendpoint_syncfifo2_source_valid;
            litepciecore_litepcieendpoint_syncfifo2_source_ready <= litepciecore_litepcieendpoint_master_in_source_ready;
            litepciecore_litepcieendpoint_master_in_source_first <= litepciecore_litepcieendpoint_syncfifo2_source_first;
            litepciecore_litepcieendpoint_master_in_source_last <= litepciecore_litepcieendpoint_syncfifo2_source_last;
            litepciecore_litepcieendpoint_master_in_source_payload_req_id <= litepciecore_litepcieendpoint_syncfifo2_source_payload_req_id;
            litepciecore_litepcieendpoint_master_in_source_payload_cmp_id <= litepciecore_litepcieendpoint_syncfifo2_source_payload_cmp_id;
            litepciecore_litepcieendpoint_master_in_source_payload_adr <= litepciecore_litepcieendpoint_syncfifo2_source_payload_adr;
            litepciecore_litepcieendpoint_master_in_source_payload_len <= litepciecore_litepcieendpoint_syncfifo2_source_payload_len;
            litepciecore_litepcieendpoint_master_in_source_payload_end <= litepciecore_litepcieendpoint_syncfifo2_source_payload_end;
            litepciecore_litepcieendpoint_master_in_source_payload_err <= litepciecore_litepcieendpoint_syncfifo2_source_payload_err;
            litepciecore_litepcieendpoint_master_in_source_payload_tag <= litepciecore_litepcieendpoint_syncfifo2_source_payload_tag;
            litepciecore_litepcieendpoint_master_in_source_payload_dat <= litepciecore_litepcieendpoint_syncfifo2_source_payload_dat;
            litepciecore_litepcieendpoint_master_in_source_payload_channel <= litepciecore_litepcieendpoint_syncfifo2_source_payload_channel;
            litepciecore_litepcieendpoint_master_in_source_payload_user_id <= litepciecore_litepcieendpoint_syncfifo2_source_payload_user_id;
        end
        2'd3: begin
            litepciecore_litepcieendpoint_master_in_source_valid <= litepciecore_litepcieendpoint_syncfifo3_source_valid;
            litepciecore_litepcieendpoint_syncfifo3_source_ready <= litepciecore_litepcieendpoint_master_in_source_ready;
            litepciecore_litepcieendpoint_master_in_source_first <= litepciecore_litepcieendpoint_syncfifo3_source_first;
            litepciecore_litepcieendpoint_master_in_source_last <= litepciecore_litepcieendpoint_syncfifo3_source_last;
            litepciecore_litepcieendpoint_master_in_source_payload_req_id <= litepciecore_litepcieendpoint_syncfifo3_source_payload_req_id;
            litepciecore_litepcieendpoint_master_in_source_payload_cmp_id <= litepciecore_litepcieendpoint_syncfifo3_source_payload_cmp_id;
            litepciecore_litepcieendpoint_master_in_source_payload_adr <= litepciecore_litepcieendpoint_syncfifo3_source_payload_adr;
            litepciecore_litepcieendpoint_master_in_source_payload_len <= litepciecore_litepcieendpoint_syncfifo3_source_payload_len;
            litepciecore_litepcieendpoint_master_in_source_payload_end <= litepciecore_litepcieendpoint_syncfifo3_source_payload_end;
            litepciecore_litepcieendpoint_master_in_source_payload_err <= litepciecore_litepcieendpoint_syncfifo3_source_payload_err;
            litepciecore_litepcieendpoint_master_in_source_payload_tag <= litepciecore_litepcieendpoint_syncfifo3_source_payload_tag;
            litepciecore_litepcieendpoint_master_in_source_payload_dat <= litepciecore_litepcieendpoint_syncfifo3_source_payload_dat;
            litepciecore_litepcieendpoint_master_in_source_payload_channel <= litepciecore_litepcieendpoint_syncfifo3_source_payload_channel;
            litepciecore_litepcieendpoint_master_in_source_payload_user_id <= litepciecore_litepcieendpoint_syncfifo3_source_payload_user_id;
        end
        3'd4: begin
            litepciecore_litepcieendpoint_master_in_source_valid <= litepciecore_litepcieendpoint_syncfifo4_source_valid;
            litepciecore_litepcieendpoint_syncfifo4_source_ready <= litepciecore_litepcieendpoint_master_in_source_ready;
            litepciecore_litepcieendpoint_master_in_source_first <= litepciecore_litepcieendpoint_syncfifo4_source_first;
            litepciecore_litepcieendpoint_master_in_source_last <= litepciecore_litepcieendpoint_syncfifo4_source_last;
            litepciecore_litepcieendpoint_master_in_source_payload_req_id <= litepciecore_litepcieendpoint_syncfifo4_source_payload_req_id;
            litepciecore_litepcieendpoint_master_in_source_payload_cmp_id <= litepciecore_litepcieendpoint_syncfifo4_source_payload_cmp_id;
            litepciecore_litepcieendpoint_master_in_source_payload_adr <= litepciecore_litepcieendpoint_syncfifo4_source_payload_adr;
            litepciecore_litepcieendpoint_master_in_source_payload_len <= litepciecore_litepcieendpoint_syncfifo4_source_payload_len;
            litepciecore_litepcieendpoint_master_in_source_payload_end <= litepciecore_litepcieendpoint_syncfifo4_source_payload_end;
            litepciecore_litepcieendpoint_master_in_source_payload_err <= litepciecore_litepcieendpoint_syncfifo4_source_payload_err;
            litepciecore_litepcieendpoint_master_in_source_payload_tag <= litepciecore_litepcieendpoint_syncfifo4_source_payload_tag;
            litepciecore_litepcieendpoint_master_in_source_payload_dat <= litepciecore_litepcieendpoint_syncfifo4_source_payload_dat;
            litepciecore_litepcieendpoint_master_in_source_payload_channel <= litepciecore_litepcieendpoint_syncfifo4_source_payload_channel;
            litepciecore_litepcieendpoint_master_in_source_payload_user_id <= litepciecore_litepcieendpoint_syncfifo4_source_payload_user_id;
        end
        3'd5: begin
            litepciecore_litepcieendpoint_master_in_source_valid <= litepciecore_litepcieendpoint_syncfifo5_source_valid;
            litepciecore_litepcieendpoint_syncfifo5_source_ready <= litepciecore_litepcieendpoint_master_in_source_ready;
            litepciecore_litepcieendpoint_master_in_source_first <= litepciecore_litepcieendpoint_syncfifo5_source_first;
            litepciecore_litepcieendpoint_master_in_source_last <= litepciecore_litepcieendpoint_syncfifo5_source_last;
            litepciecore_litepcieendpoint_master_in_source_payload_req_id <= litepciecore_litepcieendpoint_syncfifo5_source_payload_req_id;
            litepciecore_litepcieendpoint_master_in_source_payload_cmp_id <= litepciecore_litepcieendpoint_syncfifo5_source_payload_cmp_id;
            litepciecore_litepcieendpoint_master_in_source_payload_adr <= litepciecore_litepcieendpoint_syncfifo5_source_payload_adr;
            litepciecore_litepcieendpoint_master_in_source_payload_len <= litepciecore_litepcieendpoint_syncfifo5_source_payload_len;
            litepciecore_litepcieendpoint_master_in_source_payload_end <= litepciecore_litepcieendpoint_syncfifo5_source_payload_end;
            litepciecore_litepcieendpoint_master_in_source_payload_err <= litepciecore_litepcieendpoint_syncfifo5_source_payload_err;
            litepciecore_litepcieendpoint_master_in_source_payload_tag <= litepciecore_litepcieendpoint_syncfifo5_source_payload_tag;
            litepciecore_litepcieendpoint_master_in_source_payload_dat <= litepciecore_litepcieendpoint_syncfifo5_source_payload_dat;
            litepciecore_litepcieendpoint_master_in_source_payload_channel <= litepciecore_litepcieendpoint_syncfifo5_source_payload_channel;
            litepciecore_litepcieendpoint_master_in_source_payload_user_id <= litepciecore_litepcieendpoint_syncfifo5_source_payload_user_id;
        end
        3'd6: begin
            litepciecore_litepcieendpoint_master_in_source_valid <= litepciecore_litepcieendpoint_syncfifo6_source_valid;
            litepciecore_litepcieendpoint_syncfifo6_source_ready <= litepciecore_litepcieendpoint_master_in_source_ready;
            litepciecore_litepcieendpoint_master_in_source_first <= litepciecore_litepcieendpoint_syncfifo6_source_first;
            litepciecore_litepcieendpoint_master_in_source_last <= litepciecore_litepcieendpoint_syncfifo6_source_last;
            litepciecore_litepcieendpoint_master_in_source_payload_req_id <= litepciecore_litepcieendpoint_syncfifo6_source_payload_req_id;
            litepciecore_litepcieendpoint_master_in_source_payload_cmp_id <= litepciecore_litepcieendpoint_syncfifo6_source_payload_cmp_id;
            litepciecore_litepcieendpoint_master_in_source_payload_adr <= litepciecore_litepcieendpoint_syncfifo6_source_payload_adr;
            litepciecore_litepcieendpoint_master_in_source_payload_len <= litepciecore_litepcieendpoint_syncfifo6_source_payload_len;
            litepciecore_litepcieendpoint_master_in_source_payload_end <= litepciecore_litepcieendpoint_syncfifo6_source_payload_end;
            litepciecore_litepcieendpoint_master_in_source_payload_err <= litepciecore_litepcieendpoint_syncfifo6_source_payload_err;
            litepciecore_litepcieendpoint_master_in_source_payload_tag <= litepciecore_litepcieendpoint_syncfifo6_source_payload_tag;
            litepciecore_litepcieendpoint_master_in_source_payload_dat <= litepciecore_litepcieendpoint_syncfifo6_source_payload_dat;
            litepciecore_litepcieendpoint_master_in_source_payload_channel <= litepciecore_litepcieendpoint_syncfifo6_source_payload_channel;
            litepciecore_litepcieendpoint_master_in_source_payload_user_id <= litepciecore_litepcieendpoint_syncfifo6_source_payload_user_id;
        end
        3'd7: begin
            litepciecore_litepcieendpoint_master_in_source_valid <= litepciecore_litepcieendpoint_syncfifo7_source_valid;
            litepciecore_litepcieendpoint_syncfifo7_source_ready <= litepciecore_litepcieendpoint_master_in_source_ready;
            litepciecore_litepcieendpoint_master_in_source_first <= litepciecore_litepcieendpoint_syncfifo7_source_first;
            litepciecore_litepcieendpoint_master_in_source_last <= litepciecore_litepcieendpoint_syncfifo7_source_last;
            litepciecore_litepcieendpoint_master_in_source_payload_req_id <= litepciecore_litepcieendpoint_syncfifo7_source_payload_req_id;
            litepciecore_litepcieendpoint_master_in_source_payload_cmp_id <= litepciecore_litepcieendpoint_syncfifo7_source_payload_cmp_id;
            litepciecore_litepcieendpoint_master_in_source_payload_adr <= litepciecore_litepcieendpoint_syncfifo7_source_payload_adr;
            litepciecore_litepcieendpoint_master_in_source_payload_len <= litepciecore_litepcieendpoint_syncfifo7_source_payload_len;
            litepciecore_litepcieendpoint_master_in_source_payload_end <= litepciecore_litepcieendpoint_syncfifo7_source_payload_end;
            litepciecore_litepcieendpoint_master_in_source_payload_err <= litepciecore_litepcieendpoint_syncfifo7_source_payload_err;
            litepciecore_litepcieendpoint_master_in_source_payload_tag <= litepciecore_litepcieendpoint_syncfifo7_source_payload_tag;
            litepciecore_litepcieendpoint_master_in_source_payload_dat <= litepciecore_litepcieendpoint_syncfifo7_source_payload_dat;
            litepciecore_litepcieendpoint_master_in_source_payload_channel <= litepciecore_litepcieendpoint_syncfifo7_source_payload_channel;
            litepciecore_litepcieendpoint_master_in_source_payload_user_id <= litepciecore_litepcieendpoint_syncfifo7_source_payload_user_id;
        end
    endcase
    litepciecore_litepcieendpoint_master_in_source_payload_channel <= litepciecore_litepcieendpoint_req_queue_source_payload_channel;
    litepciecore_litepcieendpoint_master_in_source_payload_user_id <= litepciecore_litepcieendpoint_req_queue_source_payload_user_id;
end
assign litepciecore_litepcieendpoint_cmp_reorder_first = litepciecore_litepcieendpoint_master_out_source_first;
assign litepciecore_litepcieendpoint_cmp_reorder_last = litepciecore_litepcieendpoint_master_out_source_last;
assign litepciecore_litepcieendpoint_cmp_reorder_payload_req_id = litepciecore_litepcieendpoint_master_out_source_payload_req_id;
assign litepciecore_litepcieendpoint_cmp_reorder_payload_cmp_id = litepciecore_litepcieendpoint_master_out_source_payload_cmp_id;
assign litepciecore_litepcieendpoint_cmp_reorder_payload_adr = litepciecore_litepcieendpoint_master_out_source_payload_adr;
assign litepciecore_litepcieendpoint_cmp_reorder_payload_len = litepciecore_litepcieendpoint_master_out_source_payload_len;
assign litepciecore_litepcieendpoint_cmp_reorder_payload_end = litepciecore_litepcieendpoint_master_out_source_payload_end;
assign litepciecore_litepcieendpoint_cmp_reorder_payload_err = litepciecore_litepcieendpoint_master_out_source_payload_err;
assign litepciecore_litepcieendpoint_cmp_reorder_payload_tag = litepciecore_litepcieendpoint_master_out_source_payload_tag;
assign litepciecore_litepcieendpoint_cmp_reorder_payload_dat = litepciecore_litepcieendpoint_master_out_source_payload_dat;
assign litepciecore_litepcieendpoint_cmp_reorder_payload_channel = litepciecore_litepcieendpoint_master_out_source_payload_channel;
assign litepciecore_litepcieendpoint_cmp_reorder_payload_user_id = litepciecore_litepcieendpoint_master_out_source_payload_user_id;
assign litepciecore_litepcieendpoint_tag_queue_syncfifo_din = {litepciecore_litepcieendpoint_tag_queue_fifo_in_last, litepciecore_litepcieendpoint_tag_queue_fifo_in_first, litepciecore_litepcieendpoint_tag_queue_fifo_in_payload_tag};
assign {litepciecore_litepcieendpoint_tag_queue_fifo_out_last, litepciecore_litepcieendpoint_tag_queue_fifo_out_first, litepciecore_litepcieendpoint_tag_queue_fifo_out_payload_tag} = litepciecore_litepcieendpoint_tag_queue_syncfifo_dout;
assign litepciecore_litepcieendpoint_tag_queue_sink_ready = litepciecore_litepcieendpoint_tag_queue_syncfifo_writable;
assign litepciecore_litepcieendpoint_tag_queue_syncfifo_we = litepciecore_litepcieendpoint_tag_queue_sink_valid;
assign litepciecore_litepcieendpoint_tag_queue_fifo_in_first = litepciecore_litepcieendpoint_tag_queue_sink_first;
assign litepciecore_litepcieendpoint_tag_queue_fifo_in_last = litepciecore_litepcieendpoint_tag_queue_sink_last;
assign litepciecore_litepcieendpoint_tag_queue_fifo_in_payload_tag = litepciecore_litepcieendpoint_tag_queue_sink_payload_tag;
assign litepciecore_litepcieendpoint_tag_queue_source_valid = litepciecore_litepcieendpoint_tag_queue_readable;
assign litepciecore_litepcieendpoint_tag_queue_source_first = litepciecore_litepcieendpoint_tag_queue_fifo_out_first;
assign litepciecore_litepcieendpoint_tag_queue_source_last = litepciecore_litepcieendpoint_tag_queue_fifo_out_last;
assign litepciecore_litepcieendpoint_tag_queue_source_payload_tag = litepciecore_litepcieendpoint_tag_queue_fifo_out_payload_tag;
assign litepciecore_litepcieendpoint_tag_queue_re = litepciecore_litepcieendpoint_tag_queue_source_ready;
assign litepciecore_litepcieendpoint_tag_queue_syncfifo_re = (litepciecore_litepcieendpoint_tag_queue_syncfifo_readable & ((~litepciecore_litepcieendpoint_tag_queue_readable) | litepciecore_litepcieendpoint_tag_queue_re));
assign litepciecore_litepcieendpoint_tag_queue_level1 = (litepciecore_litepcieendpoint_tag_queue_level0 + litepciecore_litepcieendpoint_tag_queue_readable);
always @(*) begin
    litepciecore_litepcieendpoint_tag_queue_wrport_adr <= 3'd0;
    if (litepciecore_litepcieendpoint_tag_queue_replace) begin
        litepciecore_litepcieendpoint_tag_queue_wrport_adr <= (litepciecore_litepcieendpoint_tag_queue_produce - 1'd1);
    end else begin
        litepciecore_litepcieendpoint_tag_queue_wrport_adr <= litepciecore_litepcieendpoint_tag_queue_produce;
    end
end
assign litepciecore_litepcieendpoint_tag_queue_wrport_dat_w = litepciecore_litepcieendpoint_tag_queue_syncfifo_din;
assign litepciecore_litepcieendpoint_tag_queue_wrport_we = (litepciecore_litepcieendpoint_tag_queue_syncfifo_we & (litepciecore_litepcieendpoint_tag_queue_syncfifo_writable | litepciecore_litepcieendpoint_tag_queue_replace));
assign litepciecore_litepcieendpoint_tag_queue_do_read = (litepciecore_litepcieendpoint_tag_queue_syncfifo_readable & litepciecore_litepcieendpoint_tag_queue_syncfifo_re);
assign litepciecore_litepcieendpoint_tag_queue_rdport_adr = litepciecore_litepcieendpoint_tag_queue_consume;
assign litepciecore_litepcieendpoint_tag_queue_syncfifo_dout = litepciecore_litepcieendpoint_tag_queue_rdport_dat_r;
assign litepciecore_litepcieendpoint_tag_queue_rdport_re = litepciecore_litepcieendpoint_tag_queue_do_read;
assign litepciecore_litepcieendpoint_tag_queue_syncfifo_writable = (litepciecore_litepcieendpoint_tag_queue_level0 != 4'd8);
assign litepciecore_litepcieendpoint_tag_queue_syncfifo_readable = (litepciecore_litepcieendpoint_tag_queue_level0 != 1'd0);
assign litepciecore_litepcieendpoint_req_queue_syncfifo_din = {litepciecore_litepcieendpoint_req_queue_fifo_in_last, litepciecore_litepcieendpoint_req_queue_fifo_in_first, litepciecore_litepcieendpoint_req_queue_fifo_in_payload_user_id, litepciecore_litepcieendpoint_req_queue_fifo_in_payload_channel, litepciecore_litepcieendpoint_req_queue_fifo_in_payload_tag};
assign {litepciecore_litepcieendpoint_req_queue_fifo_out_last, litepciecore_litepcieendpoint_req_queue_fifo_out_first, litepciecore_litepcieendpoint_req_queue_fifo_out_payload_user_id, litepciecore_litepcieendpoint_req_queue_fifo_out_payload_channel, litepciecore_litepcieendpoint_req_queue_fifo_out_payload_tag} = litepciecore_litepcieendpoint_req_queue_syncfifo_dout;
assign litepciecore_litepcieendpoint_req_queue_sink_ready = litepciecore_litepcieendpoint_req_queue_syncfifo_writable;
assign litepciecore_litepcieendpoint_req_queue_syncfifo_we = litepciecore_litepcieendpoint_req_queue_sink_valid;
assign litepciecore_litepcieendpoint_req_queue_fifo_in_first = litepciecore_litepcieendpoint_req_queue_sink_first;
assign litepciecore_litepcieendpoint_req_queue_fifo_in_last = litepciecore_litepcieendpoint_req_queue_sink_last;
assign litepciecore_litepcieendpoint_req_queue_fifo_in_payload_tag = litepciecore_litepcieendpoint_req_queue_sink_payload_tag;
assign litepciecore_litepcieendpoint_req_queue_fifo_in_payload_channel = litepciecore_litepcieendpoint_req_queue_sink_payload_channel;
assign litepciecore_litepcieendpoint_req_queue_fifo_in_payload_user_id = litepciecore_litepcieendpoint_req_queue_sink_payload_user_id;
assign litepciecore_litepcieendpoint_req_queue_source_valid = litepciecore_litepcieendpoint_req_queue_readable;
assign litepciecore_litepcieendpoint_req_queue_source_first = litepciecore_litepcieendpoint_req_queue_fifo_out_first;
assign litepciecore_litepcieendpoint_req_queue_source_last = litepciecore_litepcieendpoint_req_queue_fifo_out_last;
assign litepciecore_litepcieendpoint_req_queue_source_payload_tag = litepciecore_litepcieendpoint_req_queue_fifo_out_payload_tag;
assign litepciecore_litepcieendpoint_req_queue_source_payload_channel = litepciecore_litepcieendpoint_req_queue_fifo_out_payload_channel;
assign litepciecore_litepcieendpoint_req_queue_source_payload_user_id = litepciecore_litepcieendpoint_req_queue_fifo_out_payload_user_id;
assign litepciecore_litepcieendpoint_req_queue_re = litepciecore_litepcieendpoint_req_queue_source_ready;
assign litepciecore_litepcieendpoint_req_queue_syncfifo_re = (litepciecore_litepcieendpoint_req_queue_syncfifo_readable & ((~litepciecore_litepcieendpoint_req_queue_readable) | litepciecore_litepcieendpoint_req_queue_re));
assign litepciecore_litepcieendpoint_req_queue_level1 = (litepciecore_litepcieendpoint_req_queue_level0 + litepciecore_litepcieendpoint_req_queue_readable);
always @(*) begin
    litepciecore_litepcieendpoint_req_queue_wrport_adr <= 3'd0;
    if (litepciecore_litepcieendpoint_req_queue_replace) begin
        litepciecore_litepcieendpoint_req_queue_wrport_adr <= (litepciecore_litepcieendpoint_req_queue_produce - 1'd1);
    end else begin
        litepciecore_litepcieendpoint_req_queue_wrport_adr <= litepciecore_litepcieendpoint_req_queue_produce;
    end
end
assign litepciecore_litepcieendpoint_req_queue_wrport_dat_w = litepciecore_litepcieendpoint_req_queue_syncfifo_din;
assign litepciecore_litepcieendpoint_req_queue_wrport_we = (litepciecore_litepcieendpoint_req_queue_syncfifo_we & (litepciecore_litepcieendpoint_req_queue_syncfifo_writable | litepciecore_litepcieendpoint_req_queue_replace));
assign litepciecore_litepcieendpoint_req_queue_do_read = (litepciecore_litepcieendpoint_req_queue_syncfifo_readable & litepciecore_litepcieendpoint_req_queue_syncfifo_re);
assign litepciecore_litepcieendpoint_req_queue_rdport_adr = litepciecore_litepcieendpoint_req_queue_consume;
assign litepciecore_litepcieendpoint_req_queue_syncfifo_dout = litepciecore_litepcieendpoint_req_queue_rdport_dat_r;
assign litepciecore_litepcieendpoint_req_queue_rdport_re = litepciecore_litepcieendpoint_req_queue_do_read;
assign litepciecore_litepcieendpoint_req_queue_syncfifo_writable = (litepciecore_litepcieendpoint_req_queue_level0 != 4'd8);
assign litepciecore_litepcieendpoint_req_queue_syncfifo_readable = (litepciecore_litepcieendpoint_req_queue_level0 != 1'd0);
always @(*) begin
    litepciecore_litepcieendpoint_fsm0_next_state <= 2'd0;
    litepciecore_litepcieendpoint_master_in_sink_ready <= 1'd0;
    litepciecore_litepcieendpoint_master_out_sink_payload_tag <= 8'd0;
    litepciecore_litepcieendpoint_master_out_sink_valid <= 1'd0;
    litepciecore_litepcieendpoint_req_queue_sink_payload_channel <= 8'd0;
    litepciecore_litepcieendpoint_req_queue_sink_payload_tag <= 3'd0;
    litepciecore_litepcieendpoint_req_queue_sink_payload_user_id <= 8'd0;
    litepciecore_litepcieendpoint_req_queue_sink_valid <= 1'd0;
    litepciecore_litepcieendpoint_tag_queue_source_ready <= 1'd0;
    litepciecore_litepcieendpoint_fsm0_next_state <= litepciecore_litepcieendpoint_fsm0_state;
    case (litepciecore_litepcieendpoint_fsm0_state)
        1'd1: begin
            litepciecore_litepcieendpoint_master_out_sink_valid <= litepciecore_litepcieendpoint_master_in_sink_valid;
            litepciecore_litepcieendpoint_master_in_sink_ready <= litepciecore_litepcieendpoint_master_out_sink_ready;
            litepciecore_litepcieendpoint_master_out_sink_payload_tag <= 6'd32;
            if (((litepciecore_litepcieendpoint_master_out_sink_valid & litepciecore_litepcieendpoint_master_out_sink_ready) & litepciecore_litepcieendpoint_master_out_sink_last)) begin
                litepciecore_litepcieendpoint_fsm0_next_state <= 1'd0;
            end
        end
        2'd2: begin
            litepciecore_litepcieendpoint_master_out_sink_valid <= litepciecore_litepcieendpoint_master_in_sink_valid;
            litepciecore_litepcieendpoint_master_in_sink_ready <= litepciecore_litepcieendpoint_master_out_sink_ready;
            litepciecore_litepcieendpoint_master_out_sink_payload_tag <= litepciecore_litepcieendpoint_tag_queue_source_payload_tag;
            if (((litepciecore_litepcieendpoint_master_out_sink_valid & litepciecore_litepcieendpoint_master_out_sink_ready) & litepciecore_litepcieendpoint_master_out_sink_last)) begin
                litepciecore_litepcieendpoint_tag_queue_source_ready <= 1'd1;
                litepciecore_litepcieendpoint_req_queue_sink_valid <= 1'd1;
                litepciecore_litepcieendpoint_req_queue_sink_payload_tag <= litepciecore_litepcieendpoint_tag_queue_source_payload_tag;
                litepciecore_litepcieendpoint_req_queue_sink_payload_channel <= litepciecore_litepcieendpoint_master_in_sink_payload_channel;
                litepciecore_litepcieendpoint_req_queue_sink_payload_user_id <= litepciecore_litepcieendpoint_master_in_sink_payload_user_id;
                litepciecore_litepcieendpoint_fsm0_next_state <= 1'd0;
            end
        end
        default: begin
            if ((litepciecore_litepcieendpoint_master_in_sink_valid & litepciecore_litepcieendpoint_master_in_sink_first)) begin
                if (litepciecore_litepcieendpoint_master_in_sink_payload_we) begin
                    litepciecore_litepcieendpoint_fsm0_next_state <= 1'd1;
                end else begin
                    if ((litepciecore_litepcieendpoint_tag_queue_source_valid & litepciecore_litepcieendpoint_req_queue_sink_ready)) begin
                        litepciecore_litepcieendpoint_fsm0_next_state <= 2'd2;
                    end
                end
            end
        end
    endcase
end
assign litepciecore_litepcieendpoint_syncfifo0_syncfifo0_din = {litepciecore_litepcieendpoint_syncfifo0_fifo_in_last, litepciecore_litepcieendpoint_syncfifo0_fifo_in_first, litepciecore_litepcieendpoint_syncfifo0_fifo_in_payload_user_id, litepciecore_litepcieendpoint_syncfifo0_fifo_in_payload_channel, litepciecore_litepcieendpoint_syncfifo0_fifo_in_payload_dat, litepciecore_litepcieendpoint_syncfifo0_fifo_in_payload_tag, litepciecore_litepcieendpoint_syncfifo0_fifo_in_payload_err, litepciecore_litepcieendpoint_syncfifo0_fifo_in_payload_end, litepciecore_litepcieendpoint_syncfifo0_fifo_in_payload_len, litepciecore_litepcieendpoint_syncfifo0_fifo_in_payload_adr, litepciecore_litepcieendpoint_syncfifo0_fifo_in_payload_cmp_id, litepciecore_litepcieendpoint_syncfifo0_fifo_in_payload_req_id};
assign {litepciecore_litepcieendpoint_syncfifo0_fifo_out_last, litepciecore_litepcieendpoint_syncfifo0_fifo_out_first, litepciecore_litepcieendpoint_syncfifo0_fifo_out_payload_user_id, litepciecore_litepcieendpoint_syncfifo0_fifo_out_payload_channel, litepciecore_litepcieendpoint_syncfifo0_fifo_out_payload_dat, litepciecore_litepcieendpoint_syncfifo0_fifo_out_payload_tag, litepciecore_litepcieendpoint_syncfifo0_fifo_out_payload_err, litepciecore_litepcieendpoint_syncfifo0_fifo_out_payload_end, litepciecore_litepcieendpoint_syncfifo0_fifo_out_payload_len, litepciecore_litepcieendpoint_syncfifo0_fifo_out_payload_adr, litepciecore_litepcieendpoint_syncfifo0_fifo_out_payload_cmp_id, litepciecore_litepcieendpoint_syncfifo0_fifo_out_payload_req_id} = litepciecore_litepcieendpoint_syncfifo0_syncfifo0_dout;
assign litepciecore_litepcieendpoint_syncfifo0_sink_ready = litepciecore_litepcieendpoint_syncfifo0_syncfifo0_writable;
assign litepciecore_litepcieendpoint_syncfifo0_syncfifo0_we = litepciecore_litepcieendpoint_syncfifo0_sink_valid;
assign litepciecore_litepcieendpoint_syncfifo0_fifo_in_first = litepciecore_litepcieendpoint_syncfifo0_sink_first;
assign litepciecore_litepcieendpoint_syncfifo0_fifo_in_last = litepciecore_litepcieendpoint_syncfifo0_sink_last;
assign litepciecore_litepcieendpoint_syncfifo0_fifo_in_payload_req_id = litepciecore_litepcieendpoint_syncfifo0_sink_payload_req_id;
assign litepciecore_litepcieendpoint_syncfifo0_fifo_in_payload_cmp_id = litepciecore_litepcieendpoint_syncfifo0_sink_payload_cmp_id;
assign litepciecore_litepcieendpoint_syncfifo0_fifo_in_payload_adr = litepciecore_litepcieendpoint_syncfifo0_sink_payload_adr;
assign litepciecore_litepcieendpoint_syncfifo0_fifo_in_payload_len = litepciecore_litepcieendpoint_syncfifo0_sink_payload_len;
assign litepciecore_litepcieendpoint_syncfifo0_fifo_in_payload_end = litepciecore_litepcieendpoint_syncfifo0_sink_payload_end;
assign litepciecore_litepcieendpoint_syncfifo0_fifo_in_payload_err = litepciecore_litepcieendpoint_syncfifo0_sink_payload_err;
assign litepciecore_litepcieendpoint_syncfifo0_fifo_in_payload_tag = litepciecore_litepcieendpoint_syncfifo0_sink_payload_tag;
assign litepciecore_litepcieendpoint_syncfifo0_fifo_in_payload_dat = litepciecore_litepcieendpoint_syncfifo0_sink_payload_dat;
assign litepciecore_litepcieendpoint_syncfifo0_fifo_in_payload_channel = litepciecore_litepcieendpoint_syncfifo0_sink_payload_channel;
assign litepciecore_litepcieendpoint_syncfifo0_fifo_in_payload_user_id = litepciecore_litepcieendpoint_syncfifo0_sink_payload_user_id;
assign litepciecore_litepcieendpoint_syncfifo0_source_valid = litepciecore_litepcieendpoint_syncfifo0_readable;
assign litepciecore_litepcieendpoint_syncfifo0_source_first = litepciecore_litepcieendpoint_syncfifo0_fifo_out_first;
assign litepciecore_litepcieendpoint_syncfifo0_source_last = litepciecore_litepcieendpoint_syncfifo0_fifo_out_last;
assign litepciecore_litepcieendpoint_syncfifo0_source_payload_req_id = litepciecore_litepcieendpoint_syncfifo0_fifo_out_payload_req_id;
assign litepciecore_litepcieendpoint_syncfifo0_source_payload_cmp_id = litepciecore_litepcieendpoint_syncfifo0_fifo_out_payload_cmp_id;
assign litepciecore_litepcieendpoint_syncfifo0_source_payload_adr = litepciecore_litepcieendpoint_syncfifo0_fifo_out_payload_adr;
assign litepciecore_litepcieendpoint_syncfifo0_source_payload_len = litepciecore_litepcieendpoint_syncfifo0_fifo_out_payload_len;
assign litepciecore_litepcieendpoint_syncfifo0_source_payload_end = litepciecore_litepcieendpoint_syncfifo0_fifo_out_payload_end;
assign litepciecore_litepcieendpoint_syncfifo0_source_payload_err = litepciecore_litepcieendpoint_syncfifo0_fifo_out_payload_err;
assign litepciecore_litepcieendpoint_syncfifo0_source_payload_tag = litepciecore_litepcieendpoint_syncfifo0_fifo_out_payload_tag;
assign litepciecore_litepcieendpoint_syncfifo0_source_payload_dat = litepciecore_litepcieendpoint_syncfifo0_fifo_out_payload_dat;
assign litepciecore_litepcieendpoint_syncfifo0_source_payload_channel = litepciecore_litepcieendpoint_syncfifo0_fifo_out_payload_channel;
assign litepciecore_litepcieendpoint_syncfifo0_source_payload_user_id = litepciecore_litepcieendpoint_syncfifo0_fifo_out_payload_user_id;
assign litepciecore_litepcieendpoint_syncfifo0_re = litepciecore_litepcieendpoint_syncfifo0_source_ready;
assign litepciecore_litepcieendpoint_syncfifo0_syncfifo0_re = (litepciecore_litepcieendpoint_syncfifo0_syncfifo0_readable & ((~litepciecore_litepcieendpoint_syncfifo0_readable) | litepciecore_litepcieendpoint_syncfifo0_re));
assign litepciecore_litepcieendpoint_syncfifo0_level1 = (litepciecore_litepcieendpoint_syncfifo0_level0 + litepciecore_litepcieendpoint_syncfifo0_readable);
always @(*) begin
    litepciecore_litepcieendpoint_syncfifo0_wrport_adr <= 8'd0;
    if (litepciecore_litepcieendpoint_syncfifo0_replace) begin
        litepciecore_litepcieendpoint_syncfifo0_wrport_adr <= (litepciecore_litepcieendpoint_syncfifo0_produce - 1'd1);
    end else begin
        litepciecore_litepcieendpoint_syncfifo0_wrport_adr <= litepciecore_litepcieendpoint_syncfifo0_produce;
    end
end
assign litepciecore_litepcieendpoint_syncfifo0_wrport_dat_w = litepciecore_litepcieendpoint_syncfifo0_syncfifo0_din;
assign litepciecore_litepcieendpoint_syncfifo0_wrport_we = (litepciecore_litepcieendpoint_syncfifo0_syncfifo0_we & (litepciecore_litepcieendpoint_syncfifo0_syncfifo0_writable | litepciecore_litepcieendpoint_syncfifo0_replace));
assign litepciecore_litepcieendpoint_syncfifo0_do_read = (litepciecore_litepcieendpoint_syncfifo0_syncfifo0_readable & litepciecore_litepcieendpoint_syncfifo0_syncfifo0_re);
assign litepciecore_litepcieendpoint_syncfifo0_rdport_adr = litepciecore_litepcieendpoint_syncfifo0_consume;
assign litepciecore_litepcieendpoint_syncfifo0_syncfifo0_dout = litepciecore_litepcieendpoint_syncfifo0_rdport_dat_r;
assign litepciecore_litepcieendpoint_syncfifo0_rdport_re = litepciecore_litepcieendpoint_syncfifo0_do_read;
assign litepciecore_litepcieendpoint_syncfifo0_syncfifo0_writable = (litepciecore_litepcieendpoint_syncfifo0_level0 != 9'd256);
assign litepciecore_litepcieendpoint_syncfifo0_syncfifo0_readable = (litepciecore_litepcieendpoint_syncfifo0_level0 != 1'd0);
assign litepciecore_litepcieendpoint_syncfifo1_syncfifo1_din = {litepciecore_litepcieendpoint_syncfifo1_fifo_in_last, litepciecore_litepcieendpoint_syncfifo1_fifo_in_first, litepciecore_litepcieendpoint_syncfifo1_fifo_in_payload_user_id, litepciecore_litepcieendpoint_syncfifo1_fifo_in_payload_channel, litepciecore_litepcieendpoint_syncfifo1_fifo_in_payload_dat, litepciecore_litepcieendpoint_syncfifo1_fifo_in_payload_tag, litepciecore_litepcieendpoint_syncfifo1_fifo_in_payload_err, litepciecore_litepcieendpoint_syncfifo1_fifo_in_payload_end, litepciecore_litepcieendpoint_syncfifo1_fifo_in_payload_len, litepciecore_litepcieendpoint_syncfifo1_fifo_in_payload_adr, litepciecore_litepcieendpoint_syncfifo1_fifo_in_payload_cmp_id, litepciecore_litepcieendpoint_syncfifo1_fifo_in_payload_req_id};
assign {litepciecore_litepcieendpoint_syncfifo1_fifo_out_last, litepciecore_litepcieendpoint_syncfifo1_fifo_out_first, litepciecore_litepcieendpoint_syncfifo1_fifo_out_payload_user_id, litepciecore_litepcieendpoint_syncfifo1_fifo_out_payload_channel, litepciecore_litepcieendpoint_syncfifo1_fifo_out_payload_dat, litepciecore_litepcieendpoint_syncfifo1_fifo_out_payload_tag, litepciecore_litepcieendpoint_syncfifo1_fifo_out_payload_err, litepciecore_litepcieendpoint_syncfifo1_fifo_out_payload_end, litepciecore_litepcieendpoint_syncfifo1_fifo_out_payload_len, litepciecore_litepcieendpoint_syncfifo1_fifo_out_payload_adr, litepciecore_litepcieendpoint_syncfifo1_fifo_out_payload_cmp_id, litepciecore_litepcieendpoint_syncfifo1_fifo_out_payload_req_id} = litepciecore_litepcieendpoint_syncfifo1_syncfifo1_dout;
assign litepciecore_litepcieendpoint_syncfifo1_sink_ready = litepciecore_litepcieendpoint_syncfifo1_syncfifo1_writable;
assign litepciecore_litepcieendpoint_syncfifo1_syncfifo1_we = litepciecore_litepcieendpoint_syncfifo1_sink_valid;
assign litepciecore_litepcieendpoint_syncfifo1_fifo_in_first = litepciecore_litepcieendpoint_syncfifo1_sink_first;
assign litepciecore_litepcieendpoint_syncfifo1_fifo_in_last = litepciecore_litepcieendpoint_syncfifo1_sink_last;
assign litepciecore_litepcieendpoint_syncfifo1_fifo_in_payload_req_id = litepciecore_litepcieendpoint_syncfifo1_sink_payload_req_id;
assign litepciecore_litepcieendpoint_syncfifo1_fifo_in_payload_cmp_id = litepciecore_litepcieendpoint_syncfifo1_sink_payload_cmp_id;
assign litepciecore_litepcieendpoint_syncfifo1_fifo_in_payload_adr = litepciecore_litepcieendpoint_syncfifo1_sink_payload_adr;
assign litepciecore_litepcieendpoint_syncfifo1_fifo_in_payload_len = litepciecore_litepcieendpoint_syncfifo1_sink_payload_len;
assign litepciecore_litepcieendpoint_syncfifo1_fifo_in_payload_end = litepciecore_litepcieendpoint_syncfifo1_sink_payload_end;
assign litepciecore_litepcieendpoint_syncfifo1_fifo_in_payload_err = litepciecore_litepcieendpoint_syncfifo1_sink_payload_err;
assign litepciecore_litepcieendpoint_syncfifo1_fifo_in_payload_tag = litepciecore_litepcieendpoint_syncfifo1_sink_payload_tag;
assign litepciecore_litepcieendpoint_syncfifo1_fifo_in_payload_dat = litepciecore_litepcieendpoint_syncfifo1_sink_payload_dat;
assign litepciecore_litepcieendpoint_syncfifo1_fifo_in_payload_channel = litepciecore_litepcieendpoint_syncfifo1_sink_payload_channel;
assign litepciecore_litepcieendpoint_syncfifo1_fifo_in_payload_user_id = litepciecore_litepcieendpoint_syncfifo1_sink_payload_user_id;
assign litepciecore_litepcieendpoint_syncfifo1_source_valid = litepciecore_litepcieendpoint_syncfifo1_readable;
assign litepciecore_litepcieendpoint_syncfifo1_source_first = litepciecore_litepcieendpoint_syncfifo1_fifo_out_first;
assign litepciecore_litepcieendpoint_syncfifo1_source_last = litepciecore_litepcieendpoint_syncfifo1_fifo_out_last;
assign litepciecore_litepcieendpoint_syncfifo1_source_payload_req_id = litepciecore_litepcieendpoint_syncfifo1_fifo_out_payload_req_id;
assign litepciecore_litepcieendpoint_syncfifo1_source_payload_cmp_id = litepciecore_litepcieendpoint_syncfifo1_fifo_out_payload_cmp_id;
assign litepciecore_litepcieendpoint_syncfifo1_source_payload_adr = litepciecore_litepcieendpoint_syncfifo1_fifo_out_payload_adr;
assign litepciecore_litepcieendpoint_syncfifo1_source_payload_len = litepciecore_litepcieendpoint_syncfifo1_fifo_out_payload_len;
assign litepciecore_litepcieendpoint_syncfifo1_source_payload_end = litepciecore_litepcieendpoint_syncfifo1_fifo_out_payload_end;
assign litepciecore_litepcieendpoint_syncfifo1_source_payload_err = litepciecore_litepcieendpoint_syncfifo1_fifo_out_payload_err;
assign litepciecore_litepcieendpoint_syncfifo1_source_payload_tag = litepciecore_litepcieendpoint_syncfifo1_fifo_out_payload_tag;
assign litepciecore_litepcieendpoint_syncfifo1_source_payload_dat = litepciecore_litepcieendpoint_syncfifo1_fifo_out_payload_dat;
assign litepciecore_litepcieendpoint_syncfifo1_source_payload_channel = litepciecore_litepcieendpoint_syncfifo1_fifo_out_payload_channel;
assign litepciecore_litepcieendpoint_syncfifo1_source_payload_user_id = litepciecore_litepcieendpoint_syncfifo1_fifo_out_payload_user_id;
assign litepciecore_litepcieendpoint_syncfifo1_re = litepciecore_litepcieendpoint_syncfifo1_source_ready;
assign litepciecore_litepcieendpoint_syncfifo1_syncfifo1_re = (litepciecore_litepcieendpoint_syncfifo1_syncfifo1_readable & ((~litepciecore_litepcieendpoint_syncfifo1_readable) | litepciecore_litepcieendpoint_syncfifo1_re));
assign litepciecore_litepcieendpoint_syncfifo1_level1 = (litepciecore_litepcieendpoint_syncfifo1_level0 + litepciecore_litepcieendpoint_syncfifo1_readable);
always @(*) begin
    litepciecore_litepcieendpoint_syncfifo1_wrport_adr <= 8'd0;
    if (litepciecore_litepcieendpoint_syncfifo1_replace) begin
        litepciecore_litepcieendpoint_syncfifo1_wrport_adr <= (litepciecore_litepcieendpoint_syncfifo1_produce - 1'd1);
    end else begin
        litepciecore_litepcieendpoint_syncfifo1_wrport_adr <= litepciecore_litepcieendpoint_syncfifo1_produce;
    end
end
assign litepciecore_litepcieendpoint_syncfifo1_wrport_dat_w = litepciecore_litepcieendpoint_syncfifo1_syncfifo1_din;
assign litepciecore_litepcieendpoint_syncfifo1_wrport_we = (litepciecore_litepcieendpoint_syncfifo1_syncfifo1_we & (litepciecore_litepcieendpoint_syncfifo1_syncfifo1_writable | litepciecore_litepcieendpoint_syncfifo1_replace));
assign litepciecore_litepcieendpoint_syncfifo1_do_read = (litepciecore_litepcieendpoint_syncfifo1_syncfifo1_readable & litepciecore_litepcieendpoint_syncfifo1_syncfifo1_re);
assign litepciecore_litepcieendpoint_syncfifo1_rdport_adr = litepciecore_litepcieendpoint_syncfifo1_consume;
assign litepciecore_litepcieendpoint_syncfifo1_syncfifo1_dout = litepciecore_litepcieendpoint_syncfifo1_rdport_dat_r;
assign litepciecore_litepcieendpoint_syncfifo1_rdport_re = litepciecore_litepcieendpoint_syncfifo1_do_read;
assign litepciecore_litepcieendpoint_syncfifo1_syncfifo1_writable = (litepciecore_litepcieendpoint_syncfifo1_level0 != 9'd256);
assign litepciecore_litepcieendpoint_syncfifo1_syncfifo1_readable = (litepciecore_litepcieendpoint_syncfifo1_level0 != 1'd0);
assign litepciecore_litepcieendpoint_syncfifo2_syncfifo2_din = {litepciecore_litepcieendpoint_syncfifo2_fifo_in_last, litepciecore_litepcieendpoint_syncfifo2_fifo_in_first, litepciecore_litepcieendpoint_syncfifo2_fifo_in_payload_user_id, litepciecore_litepcieendpoint_syncfifo2_fifo_in_payload_channel, litepciecore_litepcieendpoint_syncfifo2_fifo_in_payload_dat, litepciecore_litepcieendpoint_syncfifo2_fifo_in_payload_tag, litepciecore_litepcieendpoint_syncfifo2_fifo_in_payload_err, litepciecore_litepcieendpoint_syncfifo2_fifo_in_payload_end, litepciecore_litepcieendpoint_syncfifo2_fifo_in_payload_len, litepciecore_litepcieendpoint_syncfifo2_fifo_in_payload_adr, litepciecore_litepcieendpoint_syncfifo2_fifo_in_payload_cmp_id, litepciecore_litepcieendpoint_syncfifo2_fifo_in_payload_req_id};
assign {litepciecore_litepcieendpoint_syncfifo2_fifo_out_last, litepciecore_litepcieendpoint_syncfifo2_fifo_out_first, litepciecore_litepcieendpoint_syncfifo2_fifo_out_payload_user_id, litepciecore_litepcieendpoint_syncfifo2_fifo_out_payload_channel, litepciecore_litepcieendpoint_syncfifo2_fifo_out_payload_dat, litepciecore_litepcieendpoint_syncfifo2_fifo_out_payload_tag, litepciecore_litepcieendpoint_syncfifo2_fifo_out_payload_err, litepciecore_litepcieendpoint_syncfifo2_fifo_out_payload_end, litepciecore_litepcieendpoint_syncfifo2_fifo_out_payload_len, litepciecore_litepcieendpoint_syncfifo2_fifo_out_payload_adr, litepciecore_litepcieendpoint_syncfifo2_fifo_out_payload_cmp_id, litepciecore_litepcieendpoint_syncfifo2_fifo_out_payload_req_id} = litepciecore_litepcieendpoint_syncfifo2_syncfifo2_dout;
assign litepciecore_litepcieendpoint_syncfifo2_sink_ready = litepciecore_litepcieendpoint_syncfifo2_syncfifo2_writable;
assign litepciecore_litepcieendpoint_syncfifo2_syncfifo2_we = litepciecore_litepcieendpoint_syncfifo2_sink_valid;
assign litepciecore_litepcieendpoint_syncfifo2_fifo_in_first = litepciecore_litepcieendpoint_syncfifo2_sink_first;
assign litepciecore_litepcieendpoint_syncfifo2_fifo_in_last = litepciecore_litepcieendpoint_syncfifo2_sink_last;
assign litepciecore_litepcieendpoint_syncfifo2_fifo_in_payload_req_id = litepciecore_litepcieendpoint_syncfifo2_sink_payload_req_id;
assign litepciecore_litepcieendpoint_syncfifo2_fifo_in_payload_cmp_id = litepciecore_litepcieendpoint_syncfifo2_sink_payload_cmp_id;
assign litepciecore_litepcieendpoint_syncfifo2_fifo_in_payload_adr = litepciecore_litepcieendpoint_syncfifo2_sink_payload_adr;
assign litepciecore_litepcieendpoint_syncfifo2_fifo_in_payload_len = litepciecore_litepcieendpoint_syncfifo2_sink_payload_len;
assign litepciecore_litepcieendpoint_syncfifo2_fifo_in_payload_end = litepciecore_litepcieendpoint_syncfifo2_sink_payload_end;
assign litepciecore_litepcieendpoint_syncfifo2_fifo_in_payload_err = litepciecore_litepcieendpoint_syncfifo2_sink_payload_err;
assign litepciecore_litepcieendpoint_syncfifo2_fifo_in_payload_tag = litepciecore_litepcieendpoint_syncfifo2_sink_payload_tag;
assign litepciecore_litepcieendpoint_syncfifo2_fifo_in_payload_dat = litepciecore_litepcieendpoint_syncfifo2_sink_payload_dat;
assign litepciecore_litepcieendpoint_syncfifo2_fifo_in_payload_channel = litepciecore_litepcieendpoint_syncfifo2_sink_payload_channel;
assign litepciecore_litepcieendpoint_syncfifo2_fifo_in_payload_user_id = litepciecore_litepcieendpoint_syncfifo2_sink_payload_user_id;
assign litepciecore_litepcieendpoint_syncfifo2_source_valid = litepciecore_litepcieendpoint_syncfifo2_readable;
assign litepciecore_litepcieendpoint_syncfifo2_source_first = litepciecore_litepcieendpoint_syncfifo2_fifo_out_first;
assign litepciecore_litepcieendpoint_syncfifo2_source_last = litepciecore_litepcieendpoint_syncfifo2_fifo_out_last;
assign litepciecore_litepcieendpoint_syncfifo2_source_payload_req_id = litepciecore_litepcieendpoint_syncfifo2_fifo_out_payload_req_id;
assign litepciecore_litepcieendpoint_syncfifo2_source_payload_cmp_id = litepciecore_litepcieendpoint_syncfifo2_fifo_out_payload_cmp_id;
assign litepciecore_litepcieendpoint_syncfifo2_source_payload_adr = litepciecore_litepcieendpoint_syncfifo2_fifo_out_payload_adr;
assign litepciecore_litepcieendpoint_syncfifo2_source_payload_len = litepciecore_litepcieendpoint_syncfifo2_fifo_out_payload_len;
assign litepciecore_litepcieendpoint_syncfifo2_source_payload_end = litepciecore_litepcieendpoint_syncfifo2_fifo_out_payload_end;
assign litepciecore_litepcieendpoint_syncfifo2_source_payload_err = litepciecore_litepcieendpoint_syncfifo2_fifo_out_payload_err;
assign litepciecore_litepcieendpoint_syncfifo2_source_payload_tag = litepciecore_litepcieendpoint_syncfifo2_fifo_out_payload_tag;
assign litepciecore_litepcieendpoint_syncfifo2_source_payload_dat = litepciecore_litepcieendpoint_syncfifo2_fifo_out_payload_dat;
assign litepciecore_litepcieendpoint_syncfifo2_source_payload_channel = litepciecore_litepcieendpoint_syncfifo2_fifo_out_payload_channel;
assign litepciecore_litepcieendpoint_syncfifo2_source_payload_user_id = litepciecore_litepcieendpoint_syncfifo2_fifo_out_payload_user_id;
assign litepciecore_litepcieendpoint_syncfifo2_re = litepciecore_litepcieendpoint_syncfifo2_source_ready;
assign litepciecore_litepcieendpoint_syncfifo2_syncfifo2_re = (litepciecore_litepcieendpoint_syncfifo2_syncfifo2_readable & ((~litepciecore_litepcieendpoint_syncfifo2_readable) | litepciecore_litepcieendpoint_syncfifo2_re));
assign litepciecore_litepcieendpoint_syncfifo2_level1 = (litepciecore_litepcieendpoint_syncfifo2_level0 + litepciecore_litepcieendpoint_syncfifo2_readable);
always @(*) begin
    litepciecore_litepcieendpoint_syncfifo2_wrport_adr <= 8'd0;
    if (litepciecore_litepcieendpoint_syncfifo2_replace) begin
        litepciecore_litepcieendpoint_syncfifo2_wrport_adr <= (litepciecore_litepcieendpoint_syncfifo2_produce - 1'd1);
    end else begin
        litepciecore_litepcieendpoint_syncfifo2_wrport_adr <= litepciecore_litepcieendpoint_syncfifo2_produce;
    end
end
assign litepciecore_litepcieendpoint_syncfifo2_wrport_dat_w = litepciecore_litepcieendpoint_syncfifo2_syncfifo2_din;
assign litepciecore_litepcieendpoint_syncfifo2_wrport_we = (litepciecore_litepcieendpoint_syncfifo2_syncfifo2_we & (litepciecore_litepcieendpoint_syncfifo2_syncfifo2_writable | litepciecore_litepcieendpoint_syncfifo2_replace));
assign litepciecore_litepcieendpoint_syncfifo2_do_read = (litepciecore_litepcieendpoint_syncfifo2_syncfifo2_readable & litepciecore_litepcieendpoint_syncfifo2_syncfifo2_re);
assign litepciecore_litepcieendpoint_syncfifo2_rdport_adr = litepciecore_litepcieendpoint_syncfifo2_consume;
assign litepciecore_litepcieendpoint_syncfifo2_syncfifo2_dout = litepciecore_litepcieendpoint_syncfifo2_rdport_dat_r;
assign litepciecore_litepcieendpoint_syncfifo2_rdport_re = litepciecore_litepcieendpoint_syncfifo2_do_read;
assign litepciecore_litepcieendpoint_syncfifo2_syncfifo2_writable = (litepciecore_litepcieendpoint_syncfifo2_level0 != 9'd256);
assign litepciecore_litepcieendpoint_syncfifo2_syncfifo2_readable = (litepciecore_litepcieendpoint_syncfifo2_level0 != 1'd0);
assign litepciecore_litepcieendpoint_syncfifo3_syncfifo3_din = {litepciecore_litepcieendpoint_syncfifo3_fifo_in_last, litepciecore_litepcieendpoint_syncfifo3_fifo_in_first, litepciecore_litepcieendpoint_syncfifo3_fifo_in_payload_user_id, litepciecore_litepcieendpoint_syncfifo3_fifo_in_payload_channel, litepciecore_litepcieendpoint_syncfifo3_fifo_in_payload_dat, litepciecore_litepcieendpoint_syncfifo3_fifo_in_payload_tag, litepciecore_litepcieendpoint_syncfifo3_fifo_in_payload_err, litepciecore_litepcieendpoint_syncfifo3_fifo_in_payload_end, litepciecore_litepcieendpoint_syncfifo3_fifo_in_payload_len, litepciecore_litepcieendpoint_syncfifo3_fifo_in_payload_adr, litepciecore_litepcieendpoint_syncfifo3_fifo_in_payload_cmp_id, litepciecore_litepcieendpoint_syncfifo3_fifo_in_payload_req_id};
assign {litepciecore_litepcieendpoint_syncfifo3_fifo_out_last, litepciecore_litepcieendpoint_syncfifo3_fifo_out_first, litepciecore_litepcieendpoint_syncfifo3_fifo_out_payload_user_id, litepciecore_litepcieendpoint_syncfifo3_fifo_out_payload_channel, litepciecore_litepcieendpoint_syncfifo3_fifo_out_payload_dat, litepciecore_litepcieendpoint_syncfifo3_fifo_out_payload_tag, litepciecore_litepcieendpoint_syncfifo3_fifo_out_payload_err, litepciecore_litepcieendpoint_syncfifo3_fifo_out_payload_end, litepciecore_litepcieendpoint_syncfifo3_fifo_out_payload_len, litepciecore_litepcieendpoint_syncfifo3_fifo_out_payload_adr, litepciecore_litepcieendpoint_syncfifo3_fifo_out_payload_cmp_id, litepciecore_litepcieendpoint_syncfifo3_fifo_out_payload_req_id} = litepciecore_litepcieendpoint_syncfifo3_syncfifo3_dout;
assign litepciecore_litepcieendpoint_syncfifo3_sink_ready = litepciecore_litepcieendpoint_syncfifo3_syncfifo3_writable;
assign litepciecore_litepcieendpoint_syncfifo3_syncfifo3_we = litepciecore_litepcieendpoint_syncfifo3_sink_valid;
assign litepciecore_litepcieendpoint_syncfifo3_fifo_in_first = litepciecore_litepcieendpoint_syncfifo3_sink_first;
assign litepciecore_litepcieendpoint_syncfifo3_fifo_in_last = litepciecore_litepcieendpoint_syncfifo3_sink_last;
assign litepciecore_litepcieendpoint_syncfifo3_fifo_in_payload_req_id = litepciecore_litepcieendpoint_syncfifo3_sink_payload_req_id;
assign litepciecore_litepcieendpoint_syncfifo3_fifo_in_payload_cmp_id = litepciecore_litepcieendpoint_syncfifo3_sink_payload_cmp_id;
assign litepciecore_litepcieendpoint_syncfifo3_fifo_in_payload_adr = litepciecore_litepcieendpoint_syncfifo3_sink_payload_adr;
assign litepciecore_litepcieendpoint_syncfifo3_fifo_in_payload_len = litepciecore_litepcieendpoint_syncfifo3_sink_payload_len;
assign litepciecore_litepcieendpoint_syncfifo3_fifo_in_payload_end = litepciecore_litepcieendpoint_syncfifo3_sink_payload_end;
assign litepciecore_litepcieendpoint_syncfifo3_fifo_in_payload_err = litepciecore_litepcieendpoint_syncfifo3_sink_payload_err;
assign litepciecore_litepcieendpoint_syncfifo3_fifo_in_payload_tag = litepciecore_litepcieendpoint_syncfifo3_sink_payload_tag;
assign litepciecore_litepcieendpoint_syncfifo3_fifo_in_payload_dat = litepciecore_litepcieendpoint_syncfifo3_sink_payload_dat;
assign litepciecore_litepcieendpoint_syncfifo3_fifo_in_payload_channel = litepciecore_litepcieendpoint_syncfifo3_sink_payload_channel;
assign litepciecore_litepcieendpoint_syncfifo3_fifo_in_payload_user_id = litepciecore_litepcieendpoint_syncfifo3_sink_payload_user_id;
assign litepciecore_litepcieendpoint_syncfifo3_source_valid = litepciecore_litepcieendpoint_syncfifo3_readable;
assign litepciecore_litepcieendpoint_syncfifo3_source_first = litepciecore_litepcieendpoint_syncfifo3_fifo_out_first;
assign litepciecore_litepcieendpoint_syncfifo3_source_last = litepciecore_litepcieendpoint_syncfifo3_fifo_out_last;
assign litepciecore_litepcieendpoint_syncfifo3_source_payload_req_id = litepciecore_litepcieendpoint_syncfifo3_fifo_out_payload_req_id;
assign litepciecore_litepcieendpoint_syncfifo3_source_payload_cmp_id = litepciecore_litepcieendpoint_syncfifo3_fifo_out_payload_cmp_id;
assign litepciecore_litepcieendpoint_syncfifo3_source_payload_adr = litepciecore_litepcieendpoint_syncfifo3_fifo_out_payload_adr;
assign litepciecore_litepcieendpoint_syncfifo3_source_payload_len = litepciecore_litepcieendpoint_syncfifo3_fifo_out_payload_len;
assign litepciecore_litepcieendpoint_syncfifo3_source_payload_end = litepciecore_litepcieendpoint_syncfifo3_fifo_out_payload_end;
assign litepciecore_litepcieendpoint_syncfifo3_source_payload_err = litepciecore_litepcieendpoint_syncfifo3_fifo_out_payload_err;
assign litepciecore_litepcieendpoint_syncfifo3_source_payload_tag = litepciecore_litepcieendpoint_syncfifo3_fifo_out_payload_tag;
assign litepciecore_litepcieendpoint_syncfifo3_source_payload_dat = litepciecore_litepcieendpoint_syncfifo3_fifo_out_payload_dat;
assign litepciecore_litepcieendpoint_syncfifo3_source_payload_channel = litepciecore_litepcieendpoint_syncfifo3_fifo_out_payload_channel;
assign litepciecore_litepcieendpoint_syncfifo3_source_payload_user_id = litepciecore_litepcieendpoint_syncfifo3_fifo_out_payload_user_id;
assign litepciecore_litepcieendpoint_syncfifo3_re = litepciecore_litepcieendpoint_syncfifo3_source_ready;
assign litepciecore_litepcieendpoint_syncfifo3_syncfifo3_re = (litepciecore_litepcieendpoint_syncfifo3_syncfifo3_readable & ((~litepciecore_litepcieendpoint_syncfifo3_readable) | litepciecore_litepcieendpoint_syncfifo3_re));
assign litepciecore_litepcieendpoint_syncfifo3_level1 = (litepciecore_litepcieendpoint_syncfifo3_level0 + litepciecore_litepcieendpoint_syncfifo3_readable);
always @(*) begin
    litepciecore_litepcieendpoint_syncfifo3_wrport_adr <= 8'd0;
    if (litepciecore_litepcieendpoint_syncfifo3_replace) begin
        litepciecore_litepcieendpoint_syncfifo3_wrport_adr <= (litepciecore_litepcieendpoint_syncfifo3_produce - 1'd1);
    end else begin
        litepciecore_litepcieendpoint_syncfifo3_wrport_adr <= litepciecore_litepcieendpoint_syncfifo3_produce;
    end
end
assign litepciecore_litepcieendpoint_syncfifo3_wrport_dat_w = litepciecore_litepcieendpoint_syncfifo3_syncfifo3_din;
assign litepciecore_litepcieendpoint_syncfifo3_wrport_we = (litepciecore_litepcieendpoint_syncfifo3_syncfifo3_we & (litepciecore_litepcieendpoint_syncfifo3_syncfifo3_writable | litepciecore_litepcieendpoint_syncfifo3_replace));
assign litepciecore_litepcieendpoint_syncfifo3_do_read = (litepciecore_litepcieendpoint_syncfifo3_syncfifo3_readable & litepciecore_litepcieendpoint_syncfifo3_syncfifo3_re);
assign litepciecore_litepcieendpoint_syncfifo3_rdport_adr = litepciecore_litepcieendpoint_syncfifo3_consume;
assign litepciecore_litepcieendpoint_syncfifo3_syncfifo3_dout = litepciecore_litepcieendpoint_syncfifo3_rdport_dat_r;
assign litepciecore_litepcieendpoint_syncfifo3_rdport_re = litepciecore_litepcieendpoint_syncfifo3_do_read;
assign litepciecore_litepcieendpoint_syncfifo3_syncfifo3_writable = (litepciecore_litepcieendpoint_syncfifo3_level0 != 9'd256);
assign litepciecore_litepcieendpoint_syncfifo3_syncfifo3_readable = (litepciecore_litepcieendpoint_syncfifo3_level0 != 1'd0);
assign litepciecore_litepcieendpoint_syncfifo4_syncfifo4_din = {litepciecore_litepcieendpoint_syncfifo4_fifo_in_last, litepciecore_litepcieendpoint_syncfifo4_fifo_in_first, litepciecore_litepcieendpoint_syncfifo4_fifo_in_payload_user_id, litepciecore_litepcieendpoint_syncfifo4_fifo_in_payload_channel, litepciecore_litepcieendpoint_syncfifo4_fifo_in_payload_dat, litepciecore_litepcieendpoint_syncfifo4_fifo_in_payload_tag, litepciecore_litepcieendpoint_syncfifo4_fifo_in_payload_err, litepciecore_litepcieendpoint_syncfifo4_fifo_in_payload_end, litepciecore_litepcieendpoint_syncfifo4_fifo_in_payload_len, litepciecore_litepcieendpoint_syncfifo4_fifo_in_payload_adr, litepciecore_litepcieendpoint_syncfifo4_fifo_in_payload_cmp_id, litepciecore_litepcieendpoint_syncfifo4_fifo_in_payload_req_id};
assign {litepciecore_litepcieendpoint_syncfifo4_fifo_out_last, litepciecore_litepcieendpoint_syncfifo4_fifo_out_first, litepciecore_litepcieendpoint_syncfifo4_fifo_out_payload_user_id, litepciecore_litepcieendpoint_syncfifo4_fifo_out_payload_channel, litepciecore_litepcieendpoint_syncfifo4_fifo_out_payload_dat, litepciecore_litepcieendpoint_syncfifo4_fifo_out_payload_tag, litepciecore_litepcieendpoint_syncfifo4_fifo_out_payload_err, litepciecore_litepcieendpoint_syncfifo4_fifo_out_payload_end, litepciecore_litepcieendpoint_syncfifo4_fifo_out_payload_len, litepciecore_litepcieendpoint_syncfifo4_fifo_out_payload_adr, litepciecore_litepcieendpoint_syncfifo4_fifo_out_payload_cmp_id, litepciecore_litepcieendpoint_syncfifo4_fifo_out_payload_req_id} = litepciecore_litepcieendpoint_syncfifo4_syncfifo4_dout;
assign litepciecore_litepcieendpoint_syncfifo4_sink_ready = litepciecore_litepcieendpoint_syncfifo4_syncfifo4_writable;
assign litepciecore_litepcieendpoint_syncfifo4_syncfifo4_we = litepciecore_litepcieendpoint_syncfifo4_sink_valid;
assign litepciecore_litepcieendpoint_syncfifo4_fifo_in_first = litepciecore_litepcieendpoint_syncfifo4_sink_first;
assign litepciecore_litepcieendpoint_syncfifo4_fifo_in_last = litepciecore_litepcieendpoint_syncfifo4_sink_last;
assign litepciecore_litepcieendpoint_syncfifo4_fifo_in_payload_req_id = litepciecore_litepcieendpoint_syncfifo4_sink_payload_req_id;
assign litepciecore_litepcieendpoint_syncfifo4_fifo_in_payload_cmp_id = litepciecore_litepcieendpoint_syncfifo4_sink_payload_cmp_id;
assign litepciecore_litepcieendpoint_syncfifo4_fifo_in_payload_adr = litepciecore_litepcieendpoint_syncfifo4_sink_payload_adr;
assign litepciecore_litepcieendpoint_syncfifo4_fifo_in_payload_len = litepciecore_litepcieendpoint_syncfifo4_sink_payload_len;
assign litepciecore_litepcieendpoint_syncfifo4_fifo_in_payload_end = litepciecore_litepcieendpoint_syncfifo4_sink_payload_end;
assign litepciecore_litepcieendpoint_syncfifo4_fifo_in_payload_err = litepciecore_litepcieendpoint_syncfifo4_sink_payload_err;
assign litepciecore_litepcieendpoint_syncfifo4_fifo_in_payload_tag = litepciecore_litepcieendpoint_syncfifo4_sink_payload_tag;
assign litepciecore_litepcieendpoint_syncfifo4_fifo_in_payload_dat = litepciecore_litepcieendpoint_syncfifo4_sink_payload_dat;
assign litepciecore_litepcieendpoint_syncfifo4_fifo_in_payload_channel = litepciecore_litepcieendpoint_syncfifo4_sink_payload_channel;
assign litepciecore_litepcieendpoint_syncfifo4_fifo_in_payload_user_id = litepciecore_litepcieendpoint_syncfifo4_sink_payload_user_id;
assign litepciecore_litepcieendpoint_syncfifo4_source_valid = litepciecore_litepcieendpoint_syncfifo4_readable;
assign litepciecore_litepcieendpoint_syncfifo4_source_first = litepciecore_litepcieendpoint_syncfifo4_fifo_out_first;
assign litepciecore_litepcieendpoint_syncfifo4_source_last = litepciecore_litepcieendpoint_syncfifo4_fifo_out_last;
assign litepciecore_litepcieendpoint_syncfifo4_source_payload_req_id = litepciecore_litepcieendpoint_syncfifo4_fifo_out_payload_req_id;
assign litepciecore_litepcieendpoint_syncfifo4_source_payload_cmp_id = litepciecore_litepcieendpoint_syncfifo4_fifo_out_payload_cmp_id;
assign litepciecore_litepcieendpoint_syncfifo4_source_payload_adr = litepciecore_litepcieendpoint_syncfifo4_fifo_out_payload_adr;
assign litepciecore_litepcieendpoint_syncfifo4_source_payload_len = litepciecore_litepcieendpoint_syncfifo4_fifo_out_payload_len;
assign litepciecore_litepcieendpoint_syncfifo4_source_payload_end = litepciecore_litepcieendpoint_syncfifo4_fifo_out_payload_end;
assign litepciecore_litepcieendpoint_syncfifo4_source_payload_err = litepciecore_litepcieendpoint_syncfifo4_fifo_out_payload_err;
assign litepciecore_litepcieendpoint_syncfifo4_source_payload_tag = litepciecore_litepcieendpoint_syncfifo4_fifo_out_payload_tag;
assign litepciecore_litepcieendpoint_syncfifo4_source_payload_dat = litepciecore_litepcieendpoint_syncfifo4_fifo_out_payload_dat;
assign litepciecore_litepcieendpoint_syncfifo4_source_payload_channel = litepciecore_litepcieendpoint_syncfifo4_fifo_out_payload_channel;
assign litepciecore_litepcieendpoint_syncfifo4_source_payload_user_id = litepciecore_litepcieendpoint_syncfifo4_fifo_out_payload_user_id;
assign litepciecore_litepcieendpoint_syncfifo4_re = litepciecore_litepcieendpoint_syncfifo4_source_ready;
assign litepciecore_litepcieendpoint_syncfifo4_syncfifo4_re = (litepciecore_litepcieendpoint_syncfifo4_syncfifo4_readable & ((~litepciecore_litepcieendpoint_syncfifo4_readable) | litepciecore_litepcieendpoint_syncfifo4_re));
assign litepciecore_litepcieendpoint_syncfifo4_level1 = (litepciecore_litepcieendpoint_syncfifo4_level0 + litepciecore_litepcieendpoint_syncfifo4_readable);
always @(*) begin
    litepciecore_litepcieendpoint_syncfifo4_wrport_adr <= 8'd0;
    if (litepciecore_litepcieendpoint_syncfifo4_replace) begin
        litepciecore_litepcieendpoint_syncfifo4_wrport_adr <= (litepciecore_litepcieendpoint_syncfifo4_produce - 1'd1);
    end else begin
        litepciecore_litepcieendpoint_syncfifo4_wrport_adr <= litepciecore_litepcieendpoint_syncfifo4_produce;
    end
end
assign litepciecore_litepcieendpoint_syncfifo4_wrport_dat_w = litepciecore_litepcieendpoint_syncfifo4_syncfifo4_din;
assign litepciecore_litepcieendpoint_syncfifo4_wrport_we = (litepciecore_litepcieendpoint_syncfifo4_syncfifo4_we & (litepciecore_litepcieendpoint_syncfifo4_syncfifo4_writable | litepciecore_litepcieendpoint_syncfifo4_replace));
assign litepciecore_litepcieendpoint_syncfifo4_do_read = (litepciecore_litepcieendpoint_syncfifo4_syncfifo4_readable & litepciecore_litepcieendpoint_syncfifo4_syncfifo4_re);
assign litepciecore_litepcieendpoint_syncfifo4_rdport_adr = litepciecore_litepcieendpoint_syncfifo4_consume;
assign litepciecore_litepcieendpoint_syncfifo4_syncfifo4_dout = litepciecore_litepcieendpoint_syncfifo4_rdport_dat_r;
assign litepciecore_litepcieendpoint_syncfifo4_rdport_re = litepciecore_litepcieendpoint_syncfifo4_do_read;
assign litepciecore_litepcieendpoint_syncfifo4_syncfifo4_writable = (litepciecore_litepcieendpoint_syncfifo4_level0 != 9'd256);
assign litepciecore_litepcieendpoint_syncfifo4_syncfifo4_readable = (litepciecore_litepcieendpoint_syncfifo4_level0 != 1'd0);
assign litepciecore_litepcieendpoint_syncfifo5_syncfifo5_din = {litepciecore_litepcieendpoint_syncfifo5_fifo_in_last, litepciecore_litepcieendpoint_syncfifo5_fifo_in_first, litepciecore_litepcieendpoint_syncfifo5_fifo_in_payload_user_id, litepciecore_litepcieendpoint_syncfifo5_fifo_in_payload_channel, litepciecore_litepcieendpoint_syncfifo5_fifo_in_payload_dat, litepciecore_litepcieendpoint_syncfifo5_fifo_in_payload_tag, litepciecore_litepcieendpoint_syncfifo5_fifo_in_payload_err, litepciecore_litepcieendpoint_syncfifo5_fifo_in_payload_end, litepciecore_litepcieendpoint_syncfifo5_fifo_in_payload_len, litepciecore_litepcieendpoint_syncfifo5_fifo_in_payload_adr, litepciecore_litepcieendpoint_syncfifo5_fifo_in_payload_cmp_id, litepciecore_litepcieendpoint_syncfifo5_fifo_in_payload_req_id};
assign {litepciecore_litepcieendpoint_syncfifo5_fifo_out_last, litepciecore_litepcieendpoint_syncfifo5_fifo_out_first, litepciecore_litepcieendpoint_syncfifo5_fifo_out_payload_user_id, litepciecore_litepcieendpoint_syncfifo5_fifo_out_payload_channel, litepciecore_litepcieendpoint_syncfifo5_fifo_out_payload_dat, litepciecore_litepcieendpoint_syncfifo5_fifo_out_payload_tag, litepciecore_litepcieendpoint_syncfifo5_fifo_out_payload_err, litepciecore_litepcieendpoint_syncfifo5_fifo_out_payload_end, litepciecore_litepcieendpoint_syncfifo5_fifo_out_payload_len, litepciecore_litepcieendpoint_syncfifo5_fifo_out_payload_adr, litepciecore_litepcieendpoint_syncfifo5_fifo_out_payload_cmp_id, litepciecore_litepcieendpoint_syncfifo5_fifo_out_payload_req_id} = litepciecore_litepcieendpoint_syncfifo5_syncfifo5_dout;
assign litepciecore_litepcieendpoint_syncfifo5_sink_ready = litepciecore_litepcieendpoint_syncfifo5_syncfifo5_writable;
assign litepciecore_litepcieendpoint_syncfifo5_syncfifo5_we = litepciecore_litepcieendpoint_syncfifo5_sink_valid;
assign litepciecore_litepcieendpoint_syncfifo5_fifo_in_first = litepciecore_litepcieendpoint_syncfifo5_sink_first;
assign litepciecore_litepcieendpoint_syncfifo5_fifo_in_last = litepciecore_litepcieendpoint_syncfifo5_sink_last;
assign litepciecore_litepcieendpoint_syncfifo5_fifo_in_payload_req_id = litepciecore_litepcieendpoint_syncfifo5_sink_payload_req_id;
assign litepciecore_litepcieendpoint_syncfifo5_fifo_in_payload_cmp_id = litepciecore_litepcieendpoint_syncfifo5_sink_payload_cmp_id;
assign litepciecore_litepcieendpoint_syncfifo5_fifo_in_payload_adr = litepciecore_litepcieendpoint_syncfifo5_sink_payload_adr;
assign litepciecore_litepcieendpoint_syncfifo5_fifo_in_payload_len = litepciecore_litepcieendpoint_syncfifo5_sink_payload_len;
assign litepciecore_litepcieendpoint_syncfifo5_fifo_in_payload_end = litepciecore_litepcieendpoint_syncfifo5_sink_payload_end;
assign litepciecore_litepcieendpoint_syncfifo5_fifo_in_payload_err = litepciecore_litepcieendpoint_syncfifo5_sink_payload_err;
assign litepciecore_litepcieendpoint_syncfifo5_fifo_in_payload_tag = litepciecore_litepcieendpoint_syncfifo5_sink_payload_tag;
assign litepciecore_litepcieendpoint_syncfifo5_fifo_in_payload_dat = litepciecore_litepcieendpoint_syncfifo5_sink_payload_dat;
assign litepciecore_litepcieendpoint_syncfifo5_fifo_in_payload_channel = litepciecore_litepcieendpoint_syncfifo5_sink_payload_channel;
assign litepciecore_litepcieendpoint_syncfifo5_fifo_in_payload_user_id = litepciecore_litepcieendpoint_syncfifo5_sink_payload_user_id;
assign litepciecore_litepcieendpoint_syncfifo5_source_valid = litepciecore_litepcieendpoint_syncfifo5_readable;
assign litepciecore_litepcieendpoint_syncfifo5_source_first = litepciecore_litepcieendpoint_syncfifo5_fifo_out_first;
assign litepciecore_litepcieendpoint_syncfifo5_source_last = litepciecore_litepcieendpoint_syncfifo5_fifo_out_last;
assign litepciecore_litepcieendpoint_syncfifo5_source_payload_req_id = litepciecore_litepcieendpoint_syncfifo5_fifo_out_payload_req_id;
assign litepciecore_litepcieendpoint_syncfifo5_source_payload_cmp_id = litepciecore_litepcieendpoint_syncfifo5_fifo_out_payload_cmp_id;
assign litepciecore_litepcieendpoint_syncfifo5_source_payload_adr = litepciecore_litepcieendpoint_syncfifo5_fifo_out_payload_adr;
assign litepciecore_litepcieendpoint_syncfifo5_source_payload_len = litepciecore_litepcieendpoint_syncfifo5_fifo_out_payload_len;
assign litepciecore_litepcieendpoint_syncfifo5_source_payload_end = litepciecore_litepcieendpoint_syncfifo5_fifo_out_payload_end;
assign litepciecore_litepcieendpoint_syncfifo5_source_payload_err = litepciecore_litepcieendpoint_syncfifo5_fifo_out_payload_err;
assign litepciecore_litepcieendpoint_syncfifo5_source_payload_tag = litepciecore_litepcieendpoint_syncfifo5_fifo_out_payload_tag;
assign litepciecore_litepcieendpoint_syncfifo5_source_payload_dat = litepciecore_litepcieendpoint_syncfifo5_fifo_out_payload_dat;
assign litepciecore_litepcieendpoint_syncfifo5_source_payload_channel = litepciecore_litepcieendpoint_syncfifo5_fifo_out_payload_channel;
assign litepciecore_litepcieendpoint_syncfifo5_source_payload_user_id = litepciecore_litepcieendpoint_syncfifo5_fifo_out_payload_user_id;
assign litepciecore_litepcieendpoint_syncfifo5_re = litepciecore_litepcieendpoint_syncfifo5_source_ready;
assign litepciecore_litepcieendpoint_syncfifo5_syncfifo5_re = (litepciecore_litepcieendpoint_syncfifo5_syncfifo5_readable & ((~litepciecore_litepcieendpoint_syncfifo5_readable) | litepciecore_litepcieendpoint_syncfifo5_re));
assign litepciecore_litepcieendpoint_syncfifo5_level1 = (litepciecore_litepcieendpoint_syncfifo5_level0 + litepciecore_litepcieendpoint_syncfifo5_readable);
always @(*) begin
    litepciecore_litepcieendpoint_syncfifo5_wrport_adr <= 8'd0;
    if (litepciecore_litepcieendpoint_syncfifo5_replace) begin
        litepciecore_litepcieendpoint_syncfifo5_wrport_adr <= (litepciecore_litepcieendpoint_syncfifo5_produce - 1'd1);
    end else begin
        litepciecore_litepcieendpoint_syncfifo5_wrport_adr <= litepciecore_litepcieendpoint_syncfifo5_produce;
    end
end
assign litepciecore_litepcieendpoint_syncfifo5_wrport_dat_w = litepciecore_litepcieendpoint_syncfifo5_syncfifo5_din;
assign litepciecore_litepcieendpoint_syncfifo5_wrport_we = (litepciecore_litepcieendpoint_syncfifo5_syncfifo5_we & (litepciecore_litepcieendpoint_syncfifo5_syncfifo5_writable | litepciecore_litepcieendpoint_syncfifo5_replace));
assign litepciecore_litepcieendpoint_syncfifo5_do_read = (litepciecore_litepcieendpoint_syncfifo5_syncfifo5_readable & litepciecore_litepcieendpoint_syncfifo5_syncfifo5_re);
assign litepciecore_litepcieendpoint_syncfifo5_rdport_adr = litepciecore_litepcieendpoint_syncfifo5_consume;
assign litepciecore_litepcieendpoint_syncfifo5_syncfifo5_dout = litepciecore_litepcieendpoint_syncfifo5_rdport_dat_r;
assign litepciecore_litepcieendpoint_syncfifo5_rdport_re = litepciecore_litepcieendpoint_syncfifo5_do_read;
assign litepciecore_litepcieendpoint_syncfifo5_syncfifo5_writable = (litepciecore_litepcieendpoint_syncfifo5_level0 != 9'd256);
assign litepciecore_litepcieendpoint_syncfifo5_syncfifo5_readable = (litepciecore_litepcieendpoint_syncfifo5_level0 != 1'd0);
assign litepciecore_litepcieendpoint_syncfifo6_syncfifo6_din = {litepciecore_litepcieendpoint_syncfifo6_fifo_in_last, litepciecore_litepcieendpoint_syncfifo6_fifo_in_first, litepciecore_litepcieendpoint_syncfifo6_fifo_in_payload_user_id, litepciecore_litepcieendpoint_syncfifo6_fifo_in_payload_channel, litepciecore_litepcieendpoint_syncfifo6_fifo_in_payload_dat, litepciecore_litepcieendpoint_syncfifo6_fifo_in_payload_tag, litepciecore_litepcieendpoint_syncfifo6_fifo_in_payload_err, litepciecore_litepcieendpoint_syncfifo6_fifo_in_payload_end, litepciecore_litepcieendpoint_syncfifo6_fifo_in_payload_len, litepciecore_litepcieendpoint_syncfifo6_fifo_in_payload_adr, litepciecore_litepcieendpoint_syncfifo6_fifo_in_payload_cmp_id, litepciecore_litepcieendpoint_syncfifo6_fifo_in_payload_req_id};
assign {litepciecore_litepcieendpoint_syncfifo6_fifo_out_last, litepciecore_litepcieendpoint_syncfifo6_fifo_out_first, litepciecore_litepcieendpoint_syncfifo6_fifo_out_payload_user_id, litepciecore_litepcieendpoint_syncfifo6_fifo_out_payload_channel, litepciecore_litepcieendpoint_syncfifo6_fifo_out_payload_dat, litepciecore_litepcieendpoint_syncfifo6_fifo_out_payload_tag, litepciecore_litepcieendpoint_syncfifo6_fifo_out_payload_err, litepciecore_litepcieendpoint_syncfifo6_fifo_out_payload_end, litepciecore_litepcieendpoint_syncfifo6_fifo_out_payload_len, litepciecore_litepcieendpoint_syncfifo6_fifo_out_payload_adr, litepciecore_litepcieendpoint_syncfifo6_fifo_out_payload_cmp_id, litepciecore_litepcieendpoint_syncfifo6_fifo_out_payload_req_id} = litepciecore_litepcieendpoint_syncfifo6_syncfifo6_dout;
assign litepciecore_litepcieendpoint_syncfifo6_sink_ready = litepciecore_litepcieendpoint_syncfifo6_syncfifo6_writable;
assign litepciecore_litepcieendpoint_syncfifo6_syncfifo6_we = litepciecore_litepcieendpoint_syncfifo6_sink_valid;
assign litepciecore_litepcieendpoint_syncfifo6_fifo_in_first = litepciecore_litepcieendpoint_syncfifo6_sink_first;
assign litepciecore_litepcieendpoint_syncfifo6_fifo_in_last = litepciecore_litepcieendpoint_syncfifo6_sink_last;
assign litepciecore_litepcieendpoint_syncfifo6_fifo_in_payload_req_id = litepciecore_litepcieendpoint_syncfifo6_sink_payload_req_id;
assign litepciecore_litepcieendpoint_syncfifo6_fifo_in_payload_cmp_id = litepciecore_litepcieendpoint_syncfifo6_sink_payload_cmp_id;
assign litepciecore_litepcieendpoint_syncfifo6_fifo_in_payload_adr = litepciecore_litepcieendpoint_syncfifo6_sink_payload_adr;
assign litepciecore_litepcieendpoint_syncfifo6_fifo_in_payload_len = litepciecore_litepcieendpoint_syncfifo6_sink_payload_len;
assign litepciecore_litepcieendpoint_syncfifo6_fifo_in_payload_end = litepciecore_litepcieendpoint_syncfifo6_sink_payload_end;
assign litepciecore_litepcieendpoint_syncfifo6_fifo_in_payload_err = litepciecore_litepcieendpoint_syncfifo6_sink_payload_err;
assign litepciecore_litepcieendpoint_syncfifo6_fifo_in_payload_tag = litepciecore_litepcieendpoint_syncfifo6_sink_payload_tag;
assign litepciecore_litepcieendpoint_syncfifo6_fifo_in_payload_dat = litepciecore_litepcieendpoint_syncfifo6_sink_payload_dat;
assign litepciecore_litepcieendpoint_syncfifo6_fifo_in_payload_channel = litepciecore_litepcieendpoint_syncfifo6_sink_payload_channel;
assign litepciecore_litepcieendpoint_syncfifo6_fifo_in_payload_user_id = litepciecore_litepcieendpoint_syncfifo6_sink_payload_user_id;
assign litepciecore_litepcieendpoint_syncfifo6_source_valid = litepciecore_litepcieendpoint_syncfifo6_readable;
assign litepciecore_litepcieendpoint_syncfifo6_source_first = litepciecore_litepcieendpoint_syncfifo6_fifo_out_first;
assign litepciecore_litepcieendpoint_syncfifo6_source_last = litepciecore_litepcieendpoint_syncfifo6_fifo_out_last;
assign litepciecore_litepcieendpoint_syncfifo6_source_payload_req_id = litepciecore_litepcieendpoint_syncfifo6_fifo_out_payload_req_id;
assign litepciecore_litepcieendpoint_syncfifo6_source_payload_cmp_id = litepciecore_litepcieendpoint_syncfifo6_fifo_out_payload_cmp_id;
assign litepciecore_litepcieendpoint_syncfifo6_source_payload_adr = litepciecore_litepcieendpoint_syncfifo6_fifo_out_payload_adr;
assign litepciecore_litepcieendpoint_syncfifo6_source_payload_len = litepciecore_litepcieendpoint_syncfifo6_fifo_out_payload_len;
assign litepciecore_litepcieendpoint_syncfifo6_source_payload_end = litepciecore_litepcieendpoint_syncfifo6_fifo_out_payload_end;
assign litepciecore_litepcieendpoint_syncfifo6_source_payload_err = litepciecore_litepcieendpoint_syncfifo6_fifo_out_payload_err;
assign litepciecore_litepcieendpoint_syncfifo6_source_payload_tag = litepciecore_litepcieendpoint_syncfifo6_fifo_out_payload_tag;
assign litepciecore_litepcieendpoint_syncfifo6_source_payload_dat = litepciecore_litepcieendpoint_syncfifo6_fifo_out_payload_dat;
assign litepciecore_litepcieendpoint_syncfifo6_source_payload_channel = litepciecore_litepcieendpoint_syncfifo6_fifo_out_payload_channel;
assign litepciecore_litepcieendpoint_syncfifo6_source_payload_user_id = litepciecore_litepcieendpoint_syncfifo6_fifo_out_payload_user_id;
assign litepciecore_litepcieendpoint_syncfifo6_re = litepciecore_litepcieendpoint_syncfifo6_source_ready;
assign litepciecore_litepcieendpoint_syncfifo6_syncfifo6_re = (litepciecore_litepcieendpoint_syncfifo6_syncfifo6_readable & ((~litepciecore_litepcieendpoint_syncfifo6_readable) | litepciecore_litepcieendpoint_syncfifo6_re));
assign litepciecore_litepcieendpoint_syncfifo6_level1 = (litepciecore_litepcieendpoint_syncfifo6_level0 + litepciecore_litepcieendpoint_syncfifo6_readable);
always @(*) begin
    litepciecore_litepcieendpoint_syncfifo6_wrport_adr <= 8'd0;
    if (litepciecore_litepcieendpoint_syncfifo6_replace) begin
        litepciecore_litepcieendpoint_syncfifo6_wrport_adr <= (litepciecore_litepcieendpoint_syncfifo6_produce - 1'd1);
    end else begin
        litepciecore_litepcieendpoint_syncfifo6_wrport_adr <= litepciecore_litepcieendpoint_syncfifo6_produce;
    end
end
assign litepciecore_litepcieendpoint_syncfifo6_wrport_dat_w = litepciecore_litepcieendpoint_syncfifo6_syncfifo6_din;
assign litepciecore_litepcieendpoint_syncfifo6_wrport_we = (litepciecore_litepcieendpoint_syncfifo6_syncfifo6_we & (litepciecore_litepcieendpoint_syncfifo6_syncfifo6_writable | litepciecore_litepcieendpoint_syncfifo6_replace));
assign litepciecore_litepcieendpoint_syncfifo6_do_read = (litepciecore_litepcieendpoint_syncfifo6_syncfifo6_readable & litepciecore_litepcieendpoint_syncfifo6_syncfifo6_re);
assign litepciecore_litepcieendpoint_syncfifo6_rdport_adr = litepciecore_litepcieendpoint_syncfifo6_consume;
assign litepciecore_litepcieendpoint_syncfifo6_syncfifo6_dout = litepciecore_litepcieendpoint_syncfifo6_rdport_dat_r;
assign litepciecore_litepcieendpoint_syncfifo6_rdport_re = litepciecore_litepcieendpoint_syncfifo6_do_read;
assign litepciecore_litepcieendpoint_syncfifo6_syncfifo6_writable = (litepciecore_litepcieendpoint_syncfifo6_level0 != 9'd256);
assign litepciecore_litepcieendpoint_syncfifo6_syncfifo6_readable = (litepciecore_litepcieendpoint_syncfifo6_level0 != 1'd0);
assign litepciecore_litepcieendpoint_syncfifo7_syncfifo7_din = {litepciecore_litepcieendpoint_syncfifo7_fifo_in_last, litepciecore_litepcieendpoint_syncfifo7_fifo_in_first, litepciecore_litepcieendpoint_syncfifo7_fifo_in_payload_user_id, litepciecore_litepcieendpoint_syncfifo7_fifo_in_payload_channel, litepciecore_litepcieendpoint_syncfifo7_fifo_in_payload_dat, litepciecore_litepcieendpoint_syncfifo7_fifo_in_payload_tag, litepciecore_litepcieendpoint_syncfifo7_fifo_in_payload_err, litepciecore_litepcieendpoint_syncfifo7_fifo_in_payload_end, litepciecore_litepcieendpoint_syncfifo7_fifo_in_payload_len, litepciecore_litepcieendpoint_syncfifo7_fifo_in_payload_adr, litepciecore_litepcieendpoint_syncfifo7_fifo_in_payload_cmp_id, litepciecore_litepcieendpoint_syncfifo7_fifo_in_payload_req_id};
assign {litepciecore_litepcieendpoint_syncfifo7_fifo_out_last, litepciecore_litepcieendpoint_syncfifo7_fifo_out_first, litepciecore_litepcieendpoint_syncfifo7_fifo_out_payload_user_id, litepciecore_litepcieendpoint_syncfifo7_fifo_out_payload_channel, litepciecore_litepcieendpoint_syncfifo7_fifo_out_payload_dat, litepciecore_litepcieendpoint_syncfifo7_fifo_out_payload_tag, litepciecore_litepcieendpoint_syncfifo7_fifo_out_payload_err, litepciecore_litepcieendpoint_syncfifo7_fifo_out_payload_end, litepciecore_litepcieendpoint_syncfifo7_fifo_out_payload_len, litepciecore_litepcieendpoint_syncfifo7_fifo_out_payload_adr, litepciecore_litepcieendpoint_syncfifo7_fifo_out_payload_cmp_id, litepciecore_litepcieendpoint_syncfifo7_fifo_out_payload_req_id} = litepciecore_litepcieendpoint_syncfifo7_syncfifo7_dout;
assign litepciecore_litepcieendpoint_syncfifo7_sink_ready = litepciecore_litepcieendpoint_syncfifo7_syncfifo7_writable;
assign litepciecore_litepcieendpoint_syncfifo7_syncfifo7_we = litepciecore_litepcieendpoint_syncfifo7_sink_valid;
assign litepciecore_litepcieendpoint_syncfifo7_fifo_in_first = litepciecore_litepcieendpoint_syncfifo7_sink_first;
assign litepciecore_litepcieendpoint_syncfifo7_fifo_in_last = litepciecore_litepcieendpoint_syncfifo7_sink_last;
assign litepciecore_litepcieendpoint_syncfifo7_fifo_in_payload_req_id = litepciecore_litepcieendpoint_syncfifo7_sink_payload_req_id;
assign litepciecore_litepcieendpoint_syncfifo7_fifo_in_payload_cmp_id = litepciecore_litepcieendpoint_syncfifo7_sink_payload_cmp_id;
assign litepciecore_litepcieendpoint_syncfifo7_fifo_in_payload_adr = litepciecore_litepcieendpoint_syncfifo7_sink_payload_adr;
assign litepciecore_litepcieendpoint_syncfifo7_fifo_in_payload_len = litepciecore_litepcieendpoint_syncfifo7_sink_payload_len;
assign litepciecore_litepcieendpoint_syncfifo7_fifo_in_payload_end = litepciecore_litepcieendpoint_syncfifo7_sink_payload_end;
assign litepciecore_litepcieendpoint_syncfifo7_fifo_in_payload_err = litepciecore_litepcieendpoint_syncfifo7_sink_payload_err;
assign litepciecore_litepcieendpoint_syncfifo7_fifo_in_payload_tag = litepciecore_litepcieendpoint_syncfifo7_sink_payload_tag;
assign litepciecore_litepcieendpoint_syncfifo7_fifo_in_payload_dat = litepciecore_litepcieendpoint_syncfifo7_sink_payload_dat;
assign litepciecore_litepcieendpoint_syncfifo7_fifo_in_payload_channel = litepciecore_litepcieendpoint_syncfifo7_sink_payload_channel;
assign litepciecore_litepcieendpoint_syncfifo7_fifo_in_payload_user_id = litepciecore_litepcieendpoint_syncfifo7_sink_payload_user_id;
assign litepciecore_litepcieendpoint_syncfifo7_source_valid = litepciecore_litepcieendpoint_syncfifo7_readable;
assign litepciecore_litepcieendpoint_syncfifo7_source_first = litepciecore_litepcieendpoint_syncfifo7_fifo_out_first;
assign litepciecore_litepcieendpoint_syncfifo7_source_last = litepciecore_litepcieendpoint_syncfifo7_fifo_out_last;
assign litepciecore_litepcieendpoint_syncfifo7_source_payload_req_id = litepciecore_litepcieendpoint_syncfifo7_fifo_out_payload_req_id;
assign litepciecore_litepcieendpoint_syncfifo7_source_payload_cmp_id = litepciecore_litepcieendpoint_syncfifo7_fifo_out_payload_cmp_id;
assign litepciecore_litepcieendpoint_syncfifo7_source_payload_adr = litepciecore_litepcieendpoint_syncfifo7_fifo_out_payload_adr;
assign litepciecore_litepcieendpoint_syncfifo7_source_payload_len = litepciecore_litepcieendpoint_syncfifo7_fifo_out_payload_len;
assign litepciecore_litepcieendpoint_syncfifo7_source_payload_end = litepciecore_litepcieendpoint_syncfifo7_fifo_out_payload_end;
assign litepciecore_litepcieendpoint_syncfifo7_source_payload_err = litepciecore_litepcieendpoint_syncfifo7_fifo_out_payload_err;
assign litepciecore_litepcieendpoint_syncfifo7_source_payload_tag = litepciecore_litepcieendpoint_syncfifo7_fifo_out_payload_tag;
assign litepciecore_litepcieendpoint_syncfifo7_source_payload_dat = litepciecore_litepcieendpoint_syncfifo7_fifo_out_payload_dat;
assign litepciecore_litepcieendpoint_syncfifo7_source_payload_channel = litepciecore_litepcieendpoint_syncfifo7_fifo_out_payload_channel;
assign litepciecore_litepcieendpoint_syncfifo7_source_payload_user_id = litepciecore_litepcieendpoint_syncfifo7_fifo_out_payload_user_id;
assign litepciecore_litepcieendpoint_syncfifo7_re = litepciecore_litepcieendpoint_syncfifo7_source_ready;
assign litepciecore_litepcieendpoint_syncfifo7_syncfifo7_re = (litepciecore_litepcieendpoint_syncfifo7_syncfifo7_readable & ((~litepciecore_litepcieendpoint_syncfifo7_readable) | litepciecore_litepcieendpoint_syncfifo7_re));
assign litepciecore_litepcieendpoint_syncfifo7_level1 = (litepciecore_litepcieendpoint_syncfifo7_level0 + litepciecore_litepcieendpoint_syncfifo7_readable);
always @(*) begin
    litepciecore_litepcieendpoint_syncfifo7_wrport_adr <= 8'd0;
    if (litepciecore_litepcieendpoint_syncfifo7_replace) begin
        litepciecore_litepcieendpoint_syncfifo7_wrport_adr <= (litepciecore_litepcieendpoint_syncfifo7_produce - 1'd1);
    end else begin
        litepciecore_litepcieendpoint_syncfifo7_wrport_adr <= litepciecore_litepcieendpoint_syncfifo7_produce;
    end
end
assign litepciecore_litepcieendpoint_syncfifo7_wrport_dat_w = litepciecore_litepcieendpoint_syncfifo7_syncfifo7_din;
assign litepciecore_litepcieendpoint_syncfifo7_wrport_we = (litepciecore_litepcieendpoint_syncfifo7_syncfifo7_we & (litepciecore_litepcieendpoint_syncfifo7_syncfifo7_writable | litepciecore_litepcieendpoint_syncfifo7_replace));
assign litepciecore_litepcieendpoint_syncfifo7_do_read = (litepciecore_litepcieendpoint_syncfifo7_syncfifo7_readable & litepciecore_litepcieendpoint_syncfifo7_syncfifo7_re);
assign litepciecore_litepcieendpoint_syncfifo7_rdport_adr = litepciecore_litepcieendpoint_syncfifo7_consume;
assign litepciecore_litepcieendpoint_syncfifo7_syncfifo7_dout = litepciecore_litepcieendpoint_syncfifo7_rdport_dat_r;
assign litepciecore_litepcieendpoint_syncfifo7_rdport_re = litepciecore_litepcieendpoint_syncfifo7_do_read;
assign litepciecore_litepcieendpoint_syncfifo7_syncfifo7_writable = (litepciecore_litepcieendpoint_syncfifo7_level0 != 9'd256);
assign litepciecore_litepcieendpoint_syncfifo7_syncfifo7_readable = (litepciecore_litepcieendpoint_syncfifo7_level0 != 1'd0);
always @(*) begin
    litepciecore_litepcieendpoint_cmp_reorder_valid <= 1'd0;
    litepciecore_litepcieendpoint_fill_tag_litepciecrossbar_next_value <= 3'd0;
    litepciecore_litepcieendpoint_fill_tag_litepciecrossbar_next_value_ce <= 1'd0;
    litepciecore_litepcieendpoint_fsm1_next_state <= 2'd0;
    litepciecore_litepcieendpoint_master_out_source_ready <= 1'd0;
    litepciecore_litepcieendpoint_tag_queue_sink_payload_tag <= 3'd0;
    litepciecore_litepcieendpoint_tag_queue_sink_valid <= 1'd0;
    litepciecore_litepcieendpoint_fsm1_next_state <= litepciecore_litepcieendpoint_fsm1_state;
    case (litepciecore_litepcieendpoint_fsm1_state)
        1'd1: begin
            if ((litepciecore_litepcieendpoint_master_out_source_valid & litepciecore_litepcieendpoint_master_out_source_first)) begin
                litepciecore_litepcieendpoint_fsm1_next_state <= 2'd2;
            end else begin
                litepciecore_litepcieendpoint_master_out_source_ready <= 1'd1;
            end
        end
        2'd2: begin
            litepciecore_litepcieendpoint_cmp_reorder_valid <= litepciecore_litepcieendpoint_master_out_source_valid;
            litepciecore_litepcieendpoint_master_out_source_ready <= litepciecore_litepcieendpoint_cmp_reorder_ready;
            if (((litepciecore_litepcieendpoint_master_out_source_valid & litepciecore_litepcieendpoint_master_out_source_ready) & litepciecore_litepcieendpoint_master_out_source_last)) begin
                if (litepciecore_litepcieendpoint_master_out_source_payload_end) begin
                    litepciecore_litepcieendpoint_tag_queue_sink_valid <= 1'd1;
                    litepciecore_litepcieendpoint_tag_queue_sink_payload_tag <= litepciecore_litepcieendpoint_master_out_source_payload_tag;
                end
                litepciecore_litepcieendpoint_fsm1_next_state <= 1'd1;
            end
        end
        default: begin
            litepciecore_litepcieendpoint_tag_queue_sink_valid <= 1'd1;
            litepciecore_litepcieendpoint_tag_queue_sink_payload_tag <= litepciecore_litepcieendpoint_fill_tag;
            litepciecore_litepcieendpoint_fill_tag_litepciecrossbar_next_value <= (litepciecore_litepcieendpoint_fill_tag + 1'd1);
            litepciecore_litepcieendpoint_fill_tag_litepciecrossbar_next_value_ce <= 1'd1;
            if ((litepciecore_litepcieendpoint_fill_tag == 3'd7)) begin
                litepciecore_litepcieendpoint_fsm1_next_state <= 1'd1;
            end
        end
    endcase
end
always @(*) begin
    litepciecore_litepcieendpoint_arbiter0_request <= 3'd0;
    litepciecore_litepcieendpoint_arbiter0_request[0] <= litepciecore_litepcieendpoint_arbiter0_status0_ongoing0;
    litepciecore_litepcieendpoint_arbiter0_request[1] <= litepciecore_litepcieendpoint_arbiter0_status1_ongoing0;
    litepciecore_litepcieendpoint_arbiter0_request[2] <= litepciecore_litepcieendpoint_arbiter0_status2_ongoing0;
end
always @(*) begin
    litepciecore_litepcieendpoint_master_in_sink_first <= 1'd0;
    litepciecore_litepcieendpoint_master_in_sink_last <= 1'd0;
    litepciecore_litepcieendpoint_master_in_sink_payload_adr <= 32'd0;
    litepciecore_litepcieendpoint_master_in_sink_payload_channel <= 8'd0;
    litepciecore_litepcieendpoint_master_in_sink_payload_dat <= 64'd0;
    litepciecore_litepcieendpoint_master_in_sink_payload_len <= 10'd0;
    litepciecore_litepcieendpoint_master_in_sink_payload_req_id <= 16'd0;
    litepciecore_litepcieendpoint_master_in_sink_payload_tag <= 8'd0;
    litepciecore_litepcieendpoint_master_in_sink_payload_user_id <= 8'd0;
    litepciecore_litepcieendpoint_master_in_sink_payload_we <= 1'd0;
    litepciecore_litepcieendpoint_master_in_sink_valid <= 1'd0;
    litepciedma_litepciemasterinternalport1_sink_ready <= 1'd0;
    pcie_msi_sink_ready <= 1'd0;
    pcie_wishbone_slave_sink_ready <= 1'd0;
    case (litepciecore_litepcieendpoint_arbiter0_grant)
        1'd0: begin
            litepciecore_litepcieendpoint_master_in_sink_valid <= litepciedma_litepciemasterinternalport1_sink_valid;
            litepciedma_litepciemasterinternalport1_sink_ready <= litepciecore_litepcieendpoint_master_in_sink_ready;
            litepciecore_litepcieendpoint_master_in_sink_first <= litepciedma_litepciemasterinternalport1_sink_first;
            litepciecore_litepcieendpoint_master_in_sink_last <= litepciedma_litepciemasterinternalport1_sink_last;
            litepciecore_litepcieendpoint_master_in_sink_payload_req_id <= litepciedma_litepciemasterinternalport1_sink_payload_req_id;
            litepciecore_litepcieendpoint_master_in_sink_payload_we <= litepciedma_litepciemasterinternalport1_sink_payload_we;
            litepciecore_litepcieendpoint_master_in_sink_payload_adr <= litepciedma_litepciemasterinternalport1_sink_payload_adr;
            litepciecore_litepcieendpoint_master_in_sink_payload_len <= litepciedma_litepciemasterinternalport1_sink_payload_len;
            litepciecore_litepcieendpoint_master_in_sink_payload_tag <= litepciedma_litepciemasterinternalport1_sink_payload_tag;
            litepciecore_litepcieendpoint_master_in_sink_payload_dat <= litepciedma_litepciemasterinternalport1_sink_payload_dat;
            litepciecore_litepcieendpoint_master_in_sink_payload_channel <= litepciedma_litepciemasterinternalport1_sink_payload_channel;
            litepciecore_litepcieendpoint_master_in_sink_payload_user_id <= litepciedma_litepciemasterinternalport1_sink_payload_user_id;
        end
        1'd1: begin
            litepciecore_litepcieendpoint_master_in_sink_valid <= pcie_wishbone_slave_sink_valid;
            pcie_wishbone_slave_sink_ready <= litepciecore_litepcieendpoint_master_in_sink_ready;
            litepciecore_litepcieendpoint_master_in_sink_first <= pcie_wishbone_slave_sink_first;
            litepciecore_litepcieendpoint_master_in_sink_last <= pcie_wishbone_slave_sink_last;
            litepciecore_litepcieendpoint_master_in_sink_payload_req_id <= pcie_wishbone_slave_sink_payload_req_id;
            litepciecore_litepcieendpoint_master_in_sink_payload_we <= pcie_wishbone_slave_sink_payload_we;
            litepciecore_litepcieendpoint_master_in_sink_payload_adr <= pcie_wishbone_slave_sink_payload_adr;
            litepciecore_litepcieendpoint_master_in_sink_payload_len <= pcie_wishbone_slave_sink_payload_len;
            litepciecore_litepcieendpoint_master_in_sink_payload_tag <= pcie_wishbone_slave_sink_payload_tag;
            litepciecore_litepcieendpoint_master_in_sink_payload_dat <= pcie_wishbone_slave_sink_payload_dat;
            litepciecore_litepcieendpoint_master_in_sink_payload_channel <= pcie_wishbone_slave_sink_payload_channel;
            litepciecore_litepcieendpoint_master_in_sink_payload_user_id <= pcie_wishbone_slave_sink_payload_user_id;
        end
        2'd2: begin
            litepciecore_litepcieendpoint_master_in_sink_valid <= pcie_msi_sink_valid;
            pcie_msi_sink_ready <= litepciecore_litepcieendpoint_master_in_sink_ready;
            litepciecore_litepcieendpoint_master_in_sink_first <= pcie_msi_sink_first;
            litepciecore_litepcieendpoint_master_in_sink_last <= pcie_msi_sink_last;
            litepciecore_litepcieendpoint_master_in_sink_payload_req_id <= pcie_msi_sink_payload_req_id;
            litepciecore_litepcieendpoint_master_in_sink_payload_we <= pcie_msi_sink_payload_we;
            litepciecore_litepcieendpoint_master_in_sink_payload_adr <= pcie_msi_sink_payload_adr;
            litepciecore_litepcieendpoint_master_in_sink_payload_len <= pcie_msi_sink_payload_len;
            litepciecore_litepcieendpoint_master_in_sink_payload_tag <= pcie_msi_sink_payload_tag;
            litepciecore_litepcieendpoint_master_in_sink_payload_dat <= pcie_msi_sink_payload_dat;
            litepciecore_litepcieendpoint_master_in_sink_payload_channel <= pcie_msi_sink_payload_channel;
            litepciecore_litepcieendpoint_master_in_sink_payload_user_id <= pcie_msi_sink_payload_user_id;
        end
    endcase
end
always @(*) begin
    litepciecore_litepcieendpoint_arbiter0_status0_last <= 1'd0;
    if (litepciedma_litepciemasterinternalport1_sink_valid) begin
        litepciecore_litepcieendpoint_arbiter0_status0_last <= (litepciedma_litepciemasterinternalport1_sink_last & litepciedma_litepciemasterinternalport1_sink_ready);
    end
end
assign litepciecore_litepcieendpoint_arbiter0_status0_ongoing0 = ((litepciedma_litepciemasterinternalport1_sink_valid | litepciecore_litepcieendpoint_arbiter0_status0_ongoing1) & (~litepciecore_litepcieendpoint_arbiter0_status0_last));
always @(*) begin
    litepciecore_litepcieendpoint_arbiter0_status1_last <= 1'd0;
    if (pcie_wishbone_slave_sink_valid) begin
        litepciecore_litepcieendpoint_arbiter0_status1_last <= (pcie_wishbone_slave_sink_last & pcie_wishbone_slave_sink_ready);
    end
end
assign litepciecore_litepcieendpoint_arbiter0_status1_ongoing0 = ((pcie_wishbone_slave_sink_valid | litepciecore_litepcieendpoint_arbiter0_status1_ongoing1) & (~litepciecore_litepcieendpoint_arbiter0_status1_last));
always @(*) begin
    litepciecore_litepcieendpoint_arbiter0_status2_last <= 1'd0;
    if (pcie_msi_sink_valid) begin
        litepciecore_litepcieendpoint_arbiter0_status2_last <= (pcie_msi_sink_last & pcie_msi_sink_ready);
    end
end
assign litepciecore_litepcieendpoint_arbiter0_status2_ongoing0 = ((pcie_msi_sink_valid | litepciecore_litepcieendpoint_arbiter0_status2_ongoing1) & (~litepciecore_litepcieendpoint_arbiter0_status2_last));
always @(*) begin
    litepciecore_litepcieendpoint_dispatcher0_sel1 <= 3'd0;
    if (litepciecore_litepcieendpoint_dispatcher0_first) begin
        litepciecore_litepcieendpoint_dispatcher0_sel1 <= litepciecore_litepcieendpoint_dispatcher0_sel0;
    end else begin
        litepciecore_litepcieendpoint_dispatcher0_sel1 <= litepciecore_litepcieendpoint_dispatcher0_sel_ongoing;
    end
end
always @(*) begin
    litepciecore_litepcieendpoint_master_in_source_ready <= 1'd0;
    litepciedma_litepciemasterinternalport1_source_first <= 1'd0;
    litepciedma_litepciemasterinternalport1_source_last <= 1'd0;
    litepciedma_litepciemasterinternalport1_source_payload_adr <= 32'd0;
    litepciedma_litepciemasterinternalport1_source_payload_channel <= 8'd0;
    litepciedma_litepciemasterinternalport1_source_payload_cmp_id <= 16'd0;
    litepciedma_litepciemasterinternalport1_source_payload_dat <= 64'd0;
    litepciedma_litepciemasterinternalport1_source_payload_end <= 1'd0;
    litepciedma_litepciemasterinternalport1_source_payload_err <= 1'd0;
    litepciedma_litepciemasterinternalport1_source_payload_len <= 10'd0;
    litepciedma_litepciemasterinternalport1_source_payload_req_id <= 16'd0;
    litepciedma_litepciemasterinternalport1_source_payload_tag <= 8'd0;
    litepciedma_litepciemasterinternalport1_source_payload_user_id <= 8'd0;
    litepciedma_litepciemasterinternalport1_source_valid <= 1'd0;
    pcie_msi_source_first <= 1'd0;
    pcie_msi_source_last <= 1'd0;
    pcie_msi_source_payload_adr <= 32'd0;
    pcie_msi_source_payload_channel <= 8'd0;
    pcie_msi_source_payload_cmp_id <= 16'd0;
    pcie_msi_source_payload_dat <= 64'd0;
    pcie_msi_source_payload_end <= 1'd0;
    pcie_msi_source_payload_err <= 1'd0;
    pcie_msi_source_payload_len <= 10'd0;
    pcie_msi_source_payload_req_id <= 16'd0;
    pcie_msi_source_payload_tag <= 8'd0;
    pcie_msi_source_payload_user_id <= 8'd0;
    pcie_msi_source_valid <= 1'd0;
    pcie_wishbone_slave_source_first <= 1'd0;
    pcie_wishbone_slave_source_last <= 1'd0;
    pcie_wishbone_slave_source_payload_adr <= 32'd0;
    pcie_wishbone_slave_source_payload_channel <= 8'd0;
    pcie_wishbone_slave_source_payload_cmp_id <= 16'd0;
    pcie_wishbone_slave_source_payload_dat <= 64'd0;
    pcie_wishbone_slave_source_payload_end <= 1'd0;
    pcie_wishbone_slave_source_payload_err <= 1'd0;
    pcie_wishbone_slave_source_payload_len <= 10'd0;
    pcie_wishbone_slave_source_payload_req_id <= 16'd0;
    pcie_wishbone_slave_source_payload_tag <= 8'd0;
    pcie_wishbone_slave_source_payload_user_id <= 8'd0;
    pcie_wishbone_slave_source_valid <= 1'd0;
    case (litepciecore_litepcieendpoint_dispatcher0_sel1)
        1'd1: begin
            litepciedma_litepciemasterinternalport1_source_valid <= litepciecore_litepcieendpoint_master_in_source_valid;
            litepciecore_litepcieendpoint_master_in_source_ready <= litepciedma_litepciemasterinternalport1_source_ready;
            litepciedma_litepciemasterinternalport1_source_first <= litepciecore_litepcieendpoint_master_in_source_first;
            litepciedma_litepciemasterinternalport1_source_last <= litepciecore_litepcieendpoint_master_in_source_last;
            litepciedma_litepciemasterinternalport1_source_payload_req_id <= litepciecore_litepcieendpoint_master_in_source_payload_req_id;
            litepciedma_litepciemasterinternalport1_source_payload_cmp_id <= litepciecore_litepcieendpoint_master_in_source_payload_cmp_id;
            litepciedma_litepciemasterinternalport1_source_payload_adr <= litepciecore_litepcieendpoint_master_in_source_payload_adr;
            litepciedma_litepciemasterinternalport1_source_payload_len <= litepciecore_litepcieendpoint_master_in_source_payload_len;
            litepciedma_litepciemasterinternalport1_source_payload_end <= litepciecore_litepcieendpoint_master_in_source_payload_end;
            litepciedma_litepciemasterinternalport1_source_payload_err <= litepciecore_litepcieendpoint_master_in_source_payload_err;
            litepciedma_litepciemasterinternalport1_source_payload_tag <= litepciecore_litepcieendpoint_master_in_source_payload_tag;
            litepciedma_litepciemasterinternalport1_source_payload_dat <= litepciecore_litepcieendpoint_master_in_source_payload_dat;
            litepciedma_litepciemasterinternalport1_source_payload_channel <= litepciecore_litepcieendpoint_master_in_source_payload_channel;
            litepciedma_litepciemasterinternalport1_source_payload_user_id <= litepciecore_litepcieendpoint_master_in_source_payload_user_id;
        end
        2'd2: begin
            pcie_wishbone_slave_source_valid <= litepciecore_litepcieendpoint_master_in_source_valid;
            litepciecore_litepcieendpoint_master_in_source_ready <= pcie_wishbone_slave_source_ready;
            pcie_wishbone_slave_source_first <= litepciecore_litepcieendpoint_master_in_source_first;
            pcie_wishbone_slave_source_last <= litepciecore_litepcieendpoint_master_in_source_last;
            pcie_wishbone_slave_source_payload_req_id <= litepciecore_litepcieendpoint_master_in_source_payload_req_id;
            pcie_wishbone_slave_source_payload_cmp_id <= litepciecore_litepcieendpoint_master_in_source_payload_cmp_id;
            pcie_wishbone_slave_source_payload_adr <= litepciecore_litepcieendpoint_master_in_source_payload_adr;
            pcie_wishbone_slave_source_payload_len <= litepciecore_litepcieendpoint_master_in_source_payload_len;
            pcie_wishbone_slave_source_payload_end <= litepciecore_litepcieendpoint_master_in_source_payload_end;
            pcie_wishbone_slave_source_payload_err <= litepciecore_litepcieendpoint_master_in_source_payload_err;
            pcie_wishbone_slave_source_payload_tag <= litepciecore_litepcieendpoint_master_in_source_payload_tag;
            pcie_wishbone_slave_source_payload_dat <= litepciecore_litepcieendpoint_master_in_source_payload_dat;
            pcie_wishbone_slave_source_payload_channel <= litepciecore_litepcieendpoint_master_in_source_payload_channel;
            pcie_wishbone_slave_source_payload_user_id <= litepciecore_litepcieendpoint_master_in_source_payload_user_id;
        end
        3'd4: begin
            pcie_msi_source_valid <= litepciecore_litepcieendpoint_master_in_source_valid;
            litepciecore_litepcieendpoint_master_in_source_ready <= pcie_msi_source_ready;
            pcie_msi_source_first <= litepciecore_litepcieendpoint_master_in_source_first;
            pcie_msi_source_last <= litepciecore_litepcieendpoint_master_in_source_last;
            pcie_msi_source_payload_req_id <= litepciecore_litepcieendpoint_master_in_source_payload_req_id;
            pcie_msi_source_payload_cmp_id <= litepciecore_litepcieendpoint_master_in_source_payload_cmp_id;
            pcie_msi_source_payload_adr <= litepciecore_litepcieendpoint_master_in_source_payload_adr;
            pcie_msi_source_payload_len <= litepciecore_litepcieendpoint_master_in_source_payload_len;
            pcie_msi_source_payload_end <= litepciecore_litepcieendpoint_master_in_source_payload_end;
            pcie_msi_source_payload_err <= litepciecore_litepcieendpoint_master_in_source_payload_err;
            pcie_msi_source_payload_tag <= litepciecore_litepcieendpoint_master_in_source_payload_tag;
            pcie_msi_source_payload_dat <= litepciecore_litepcieendpoint_master_in_source_payload_dat;
            pcie_msi_source_payload_channel <= litepciecore_litepcieendpoint_master_in_source_payload_channel;
            pcie_msi_source_payload_user_id <= litepciecore_litepcieendpoint_master_in_source_payload_user_id;
        end
        default: begin
            litepciecore_litepcieendpoint_master_in_source_ready <= 1'd1;
        end
    endcase
end
always @(*) begin
    litepciecore_litepcieendpoint_dispatcher0_last <= 1'd0;
    if (litepciecore_litepcieendpoint_master_in_source_valid) begin
        litepciecore_litepcieendpoint_dispatcher0_last <= (litepciecore_litepcieendpoint_master_in_source_last & litepciecore_litepcieendpoint_master_in_source_ready);
    end
end
assign litepciecore_litepcieendpoint_dispatcher0_ongoing0 = ((litepciecore_litepcieendpoint_master_in_source_valid | litepciecore_litepcieendpoint_dispatcher0_ongoing1) & (~litepciecore_litepcieendpoint_dispatcher0_last));
assign litepciecore_litepcieendpoint_sink_valid = litepciedma_litepciemasterinternalport0_sink_valid;
assign litepciedma_litepciemasterinternalport0_sink_ready = litepciecore_litepcieendpoint_sink_ready;
assign litepciecore_litepcieendpoint_sink_first = litepciedma_litepciemasterinternalport0_sink_first;
assign litepciecore_litepcieendpoint_sink_last = litepciedma_litepciemasterinternalport0_sink_last;
assign litepciecore_litepcieendpoint_sink_payload_req_id = litepciedma_litepciemasterinternalport0_sink_payload_req_id;
assign litepciecore_litepcieendpoint_sink_payload_we = litepciedma_litepciemasterinternalport0_sink_payload_we;
assign litepciecore_litepcieendpoint_sink_payload_adr = litepciedma_litepciemasterinternalport0_sink_payload_adr;
assign litepciecore_litepcieendpoint_sink_payload_len = litepciedma_litepciemasterinternalport0_sink_payload_len;
assign litepciecore_litepcieendpoint_sink_payload_tag = litepciedma_litepciemasterinternalport0_sink_payload_tag;
assign litepciecore_litepcieendpoint_sink_payload_dat = litepciedma_litepciemasterinternalport0_sink_payload_dat;
assign litepciecore_litepcieendpoint_sink_payload_channel = litepciedma_litepciemasterinternalport0_sink_payload_channel;
assign litepciecore_litepcieendpoint_sink_payload_user_id = litepciedma_litepciemasterinternalport0_sink_payload_user_id;
always @(*) begin
    litepciecore_litepcieendpoint_dispatcher1_sel1 <= 1'd0;
    if (litepciecore_litepcieendpoint_dispatcher1_first) begin
        litepciecore_litepcieendpoint_dispatcher1_sel1 <= litepciecore_litepcieendpoint_dispatcher1_sel0;
    end else begin
        litepciecore_litepcieendpoint_dispatcher1_sel1 <= litepciecore_litepcieendpoint_dispatcher1_sel_ongoing;
    end
end
always @(*) begin
    litepciecore_litepcieendpoint_source_ready <= 1'd0;
    litepciedma_litepciemasterinternalport0_source_first <= 1'd0;
    litepciedma_litepciemasterinternalport0_source_last <= 1'd0;
    litepciedma_litepciemasterinternalport0_source_payload_adr <= 32'd0;
    litepciedma_litepciemasterinternalport0_source_payload_channel <= 8'd0;
    litepciedma_litepciemasterinternalport0_source_payload_cmp_id <= 16'd0;
    litepciedma_litepciemasterinternalport0_source_payload_dat <= 64'd0;
    litepciedma_litepciemasterinternalport0_source_payload_end <= 1'd0;
    litepciedma_litepciemasterinternalport0_source_payload_err <= 1'd0;
    litepciedma_litepciemasterinternalport0_source_payload_len <= 10'd0;
    litepciedma_litepciemasterinternalport0_source_payload_req_id <= 16'd0;
    litepciedma_litepciemasterinternalport0_source_payload_tag <= 8'd0;
    litepciedma_litepciemasterinternalport0_source_payload_user_id <= 8'd0;
    litepciedma_litepciemasterinternalport0_source_valid <= 1'd0;
    case (litepciecore_litepcieendpoint_dispatcher1_sel1)
        1'd1: begin
            litepciedma_litepciemasterinternalport0_source_valid <= litepciecore_litepcieendpoint_source_valid;
            litepciecore_litepcieendpoint_source_ready <= litepciedma_litepciemasterinternalport0_source_ready;
            litepciedma_litepciemasterinternalport0_source_first <= litepciecore_litepcieendpoint_source_first;
            litepciedma_litepciemasterinternalport0_source_last <= litepciecore_litepcieendpoint_source_last;
            litepciedma_litepciemasterinternalport0_source_payload_req_id <= litepciecore_litepcieendpoint_source_payload_req_id;
            litepciedma_litepciemasterinternalport0_source_payload_cmp_id <= litepciecore_litepcieendpoint_source_payload_cmp_id;
            litepciedma_litepciemasterinternalport0_source_payload_adr <= litepciecore_litepcieendpoint_source_payload_adr;
            litepciedma_litepciemasterinternalport0_source_payload_len <= litepciecore_litepcieendpoint_source_payload_len;
            litepciedma_litepciemasterinternalport0_source_payload_end <= litepciecore_litepcieendpoint_source_payload_end;
            litepciedma_litepciemasterinternalport0_source_payload_err <= litepciecore_litepcieendpoint_source_payload_err;
            litepciedma_litepciemasterinternalport0_source_payload_tag <= litepciecore_litepcieendpoint_source_payload_tag;
            litepciedma_litepciemasterinternalport0_source_payload_dat <= litepciecore_litepcieendpoint_source_payload_dat;
            litepciedma_litepciemasterinternalport0_source_payload_channel <= litepciecore_litepcieendpoint_source_payload_channel;
            litepciedma_litepciemasterinternalport0_source_payload_user_id <= litepciecore_litepcieendpoint_source_payload_user_id;
        end
        default: begin
            litepciecore_litepcieendpoint_source_ready <= 1'd1;
        end
    endcase
end
always @(*) begin
    litepciecore_litepcieendpoint_dispatcher1_last <= 1'd0;
    if (litepciecore_litepcieendpoint_source_valid) begin
        litepciecore_litepcieendpoint_dispatcher1_last <= (litepciecore_litepcieendpoint_source_last & litepciecore_litepcieendpoint_source_ready);
    end
end
assign litepciecore_litepcieendpoint_dispatcher1_ongoing0 = ((litepciecore_litepcieendpoint_source_valid | litepciecore_litepcieendpoint_dispatcher1_ongoing1) & (~litepciecore_litepcieendpoint_dispatcher1_last));
always @(*) begin
    litepciecore_litepcieendpoint_arbiter1_request <= 2'd0;
    litepciecore_litepcieendpoint_arbiter1_request[0] <= litepciecore_litepcieendpoint_arbiter1_status3_ongoing0;
    litepciecore_litepcieendpoint_arbiter1_request[1] <= litepciecore_litepcieendpoint_arbiter1_status4_ongoing0;
end
always @(*) begin
    litepciecore_litepcieendpoint_master_out_sink_ready <= 1'd0;
    litepciecore_litepcieendpoint_sink_ready <= 1'd0;
    master_sink_first <= 1'd0;
    master_sink_last <= 1'd0;
    master_sink_payload_adr <= 32'd0;
    master_sink_payload_channel <= 8'd0;
    master_sink_payload_dat <= 64'd0;
    master_sink_payload_len <= 10'd0;
    master_sink_payload_req_id <= 16'd0;
    master_sink_payload_tag <= 8'd0;
    master_sink_payload_user_id <= 8'd0;
    master_sink_payload_we <= 1'd0;
    master_sink_valid <= 1'd0;
    case (litepciecore_litepcieendpoint_arbiter1_grant)
        1'd0: begin
            master_sink_valid <= litepciecore_litepcieendpoint_master_out_sink_valid;
            litepciecore_litepcieendpoint_master_out_sink_ready <= master_sink_ready;
            master_sink_first <= litepciecore_litepcieendpoint_master_out_sink_first;
            master_sink_last <= litepciecore_litepcieendpoint_master_out_sink_last;
            master_sink_payload_req_id <= litepciecore_litepcieendpoint_master_out_sink_payload_req_id;
            master_sink_payload_we <= litepciecore_litepcieendpoint_master_out_sink_payload_we;
            master_sink_payload_adr <= litepciecore_litepcieendpoint_master_out_sink_payload_adr;
            master_sink_payload_len <= litepciecore_litepcieendpoint_master_out_sink_payload_len;
            master_sink_payload_tag <= litepciecore_litepcieendpoint_master_out_sink_payload_tag;
            master_sink_payload_dat <= litepciecore_litepcieendpoint_master_out_sink_payload_dat;
            master_sink_payload_channel <= litepciecore_litepcieendpoint_master_out_sink_payload_channel;
            master_sink_payload_user_id <= litepciecore_litepcieendpoint_master_out_sink_payload_user_id;
        end
        1'd1: begin
            master_sink_valid <= litepciecore_litepcieendpoint_sink_valid;
            litepciecore_litepcieendpoint_sink_ready <= master_sink_ready;
            master_sink_first <= litepciecore_litepcieendpoint_sink_first;
            master_sink_last <= litepciecore_litepcieendpoint_sink_last;
            master_sink_payload_req_id <= litepciecore_litepcieendpoint_sink_payload_req_id;
            master_sink_payload_we <= litepciecore_litepcieendpoint_sink_payload_we;
            master_sink_payload_adr <= litepciecore_litepcieendpoint_sink_payload_adr;
            master_sink_payload_len <= litepciecore_litepcieendpoint_sink_payload_len;
            master_sink_payload_tag <= litepciecore_litepcieendpoint_sink_payload_tag;
            master_sink_payload_dat <= litepciecore_litepcieendpoint_sink_payload_dat;
            master_sink_payload_channel <= litepciecore_litepcieendpoint_sink_payload_channel;
            master_sink_payload_user_id <= litepciecore_litepcieendpoint_sink_payload_user_id;
        end
    endcase
end
always @(*) begin
    litepciecore_litepcieendpoint_arbiter1_status3_last <= 1'd0;
    if (litepciecore_litepcieendpoint_master_out_sink_valid) begin
        litepciecore_litepcieendpoint_arbiter1_status3_last <= (litepciecore_litepcieendpoint_master_out_sink_last & litepciecore_litepcieendpoint_master_out_sink_ready);
    end
end
assign litepciecore_litepcieendpoint_arbiter1_status3_ongoing0 = ((litepciecore_litepcieendpoint_master_out_sink_valid | litepciecore_litepcieendpoint_arbiter1_status3_ongoing1) & (~litepciecore_litepcieendpoint_arbiter1_status3_last));
always @(*) begin
    litepciecore_litepcieendpoint_arbiter1_status4_last <= 1'd0;
    if (litepciecore_litepcieendpoint_sink_valid) begin
        litepciecore_litepcieendpoint_arbiter1_status4_last <= (litepciecore_litepcieendpoint_sink_last & litepciecore_litepcieendpoint_sink_ready);
    end
end
assign litepciecore_litepcieendpoint_arbiter1_status4_ongoing0 = ((litepciecore_litepcieendpoint_sink_valid | litepciecore_litepcieendpoint_arbiter1_status4_ongoing1) & (~litepciecore_litepcieendpoint_arbiter1_status4_last));
always @(*) begin
    litepciecore_litepciewishbonemaster_next_state <= 2'd0;
    pcie_wishbone_master_sink_valid <= 1'd0;
    pcie_wishbone_master_source_ready <= 1'd0;
    pcie_wishbone_master_update_dat <= 1'd0;
    pcie_wishbone_master_wishbone_cyc <= 1'd0;
    pcie_wishbone_master_wishbone_stb <= 1'd0;
    pcie_wishbone_master_wishbone_we <= 1'd0;
    litepciecore_litepciewishbonemaster_next_state <= litepciecore_litepciewishbonemaster_state;
    case (litepciecore_litepciewishbonemaster_state)
        1'd1: begin
            pcie_wishbone_master_wishbone_stb <= 1'd1;
            pcie_wishbone_master_wishbone_we <= 1'd1;
            pcie_wishbone_master_wishbone_cyc <= 1'd1;
            if (pcie_wishbone_master_wishbone_ack) begin
                pcie_wishbone_master_source_ready <= 1'd1;
                litepciecore_litepciewishbonemaster_next_state <= 1'd0;
            end
        end
        2'd2: begin
            pcie_wishbone_master_wishbone_stb <= 1'd1;
            pcie_wishbone_master_wishbone_we <= 1'd0;
            pcie_wishbone_master_wishbone_cyc <= 1'd1;
            if (pcie_wishbone_master_wishbone_ack) begin
                pcie_wishbone_master_update_dat <= 1'd1;
                litepciecore_litepciewishbonemaster_next_state <= 2'd3;
            end
        end
        2'd3: begin
            pcie_wishbone_master_sink_valid <= 1'd1;
            if (pcie_wishbone_master_sink_ready) begin
                pcie_wishbone_master_source_ready <= 1'd1;
                litepciecore_litepciewishbonemaster_next_state <= 1'd0;
            end
        end
        default: begin
            if ((pcie_wishbone_master_source_valid & pcie_wishbone_master_source_first)) begin
                if (pcie_wishbone_master_source_payload_we) begin
                    litepciecore_litepciewishbonemaster_next_state <= 1'd1;
                end else begin
                    litepciecore_litepciewishbonemaster_next_state <= 2'd2;
                end
            end else begin
                pcie_wishbone_master_source_ready <= 1'd1;
            end
        end
    endcase
end
assign addr = (interface0_wb_adr - 1'd0);
always @(*) begin
    axiliteinterface0_ar_payload_addr <= 32'd0;
    axiliteinterface0_ar_valid <= 1'd0;
    axiliteinterface0_aw_payload_addr <= 32'd0;
    axiliteinterface0_aw_valid <= 1'd0;
    axiliteinterface0_b_ready <= 1'd0;
    axiliteinterface0_r_ready <= 1'd0;
    axiliteinterface0_w_payload_data <= 32'd0;
    axiliteinterface0_w_payload_strb <= 4'd0;
    axiliteinterface0_w_valid <= 1'd0;
    cmd_done_wishbone2axilite_next_value0 <= 1'd0;
    cmd_done_wishbone2axilite_next_value_ce0 <= 1'd0;
    data_done_wishbone2axilite_next_value1 <= 1'd0;
    data_done_wishbone2axilite_next_value_ce1 <= 1'd0;
    interface0_wb_ack <= 1'd0;
    interface0_wb_dat_r <= 32'd0;
    interface0_wb_err <= 1'd0;
    litepciecore_wishbone2axilite_next_state <= 2'd0;
    litepciecore_wishbone2axilite_next_state <= litepciecore_wishbone2axilite_state;
    case (litepciecore_wishbone2axilite_state)
        1'd1: begin
            axiliteinterface0_aw_valid <= (~cmd_done);
            axiliteinterface0_aw_payload_addr[31:2] <= addr;
            if ((axiliteinterface0_aw_valid & axiliteinterface0_aw_ready)) begin
                cmd_done_wishbone2axilite_next_value0 <= 1'd1;
                cmd_done_wishbone2axilite_next_value_ce0 <= 1'd1;
            end
            axiliteinterface0_w_valid <= (~data_done);
            axiliteinterface0_w_payload_data <= interface0_wb_dat_w;
            axiliteinterface0_w_payload_strb <= interface0_wb_sel;
            if ((axiliteinterface0_w_valid & axiliteinterface0_w_ready)) begin
                data_done_wishbone2axilite_next_value1 <= 1'd1;
                data_done_wishbone2axilite_next_value_ce1 <= 1'd1;
            end
            axiliteinterface0_b_ready <= (cmd_done & data_done);
            if ((axiliteinterface0_b_valid & axiliteinterface0_b_ready)) begin
                if ((axiliteinterface0_b_payload_resp == 1'd0)) begin
                    interface0_wb_ack <= 1'd1;
                    litepciecore_wishbone2axilite_next_state <= 1'd0;
                end else begin
                    litepciecore_wishbone2axilite_next_state <= 2'd3;
                end
            end
        end
        2'd2: begin
            axiliteinterface0_ar_valid <= (~cmd_done);
            axiliteinterface0_ar_payload_addr[31:2] <= addr;
            if ((axiliteinterface0_ar_valid & axiliteinterface0_ar_ready)) begin
                cmd_done_wishbone2axilite_next_value0 <= 1'd1;
                cmd_done_wishbone2axilite_next_value_ce0 <= 1'd1;
            end
            axiliteinterface0_r_ready <= cmd_done;
            if ((axiliteinterface0_r_valid & axiliteinterface0_r_ready)) begin
                if ((axiliteinterface0_r_payload_resp == 1'd0)) begin
                    interface0_wb_dat_r <= axiliteinterface0_r_payload_data;
                    interface0_wb_ack <= 1'd1;
                    litepciecore_wishbone2axilite_next_state <= 1'd0;
                end else begin
                    litepciecore_wishbone2axilite_next_state <= 2'd3;
                end
            end
        end
        2'd3: begin
            interface0_wb_ack <= 1'd1;
            interface0_wb_err <= 1'd1;
            litepciecore_wishbone2axilite_next_state <= 1'd0;
        end
        default: begin
            cmd_done_wishbone2axilite_next_value0 <= 1'd0;
            cmd_done_wishbone2axilite_next_value_ce0 <= 1'd1;
            data_done_wishbone2axilite_next_value1 <= 1'd0;
            data_done_wishbone2axilite_next_value_ce1 <= 1'd1;
            if ((interface0_wb_stb & interface0_wb_cyc)) begin
                if (interface0_wb_we) begin
                    litepciecore_wishbone2axilite_next_state <= 1'd1;
                end else begin
                    litepciecore_wishbone2axilite_next_state <= 2'd2;
                end
            end
        end
    endcase
end
assign r_addr = (axiliteinterface1_ar_payload_addr - 1'd0);
assign w_addr = (axiliteinterface1_aw_payload_addr - 1'd0);
always @(*) begin
    axiliteinterface1_ar_ready <= 1'd0;
    axiliteinterface1_aw_ready <= 1'd0;
    axiliteinterface1_b_payload_resp <= 2'd0;
    axiliteinterface1_b_valid <= 1'd0;
    axiliteinterface1_r_payload_data <= 32'd0;
    axiliteinterface1_r_payload_resp <= 2'd0;
    axiliteinterface1_r_valid <= 1'd0;
    axiliteinterface1_w_ready <= 1'd0;
    data_axilite2wishbone_next_value1 <= 32'd0;
    data_axilite2wishbone_next_value_ce1 <= 1'd0;
    interface1_wb_adr <= 30'd0;
    interface1_wb_cyc <= 1'd0;
    interface1_wb_dat_w <= 32'd0;
    interface1_wb_sel <= 4'd0;
    interface1_wb_stb <= 1'd0;
    interface1_wb_we <= 1'd0;
    last_ar_aw_n_axilite2wishbone_next_value0 <= 1'd0;
    last_ar_aw_n_axilite2wishbone_next_value_ce0 <= 1'd0;
    litepciecore_axilite2wishbone_next_state <= 3'd0;
    litepciecore_axilite2wishbone_next_state <= litepciecore_axilite2wishbone_state;
    case (litepciecore_axilite2wishbone_state)
        1'd1: begin
            interface1_wb_stb <= 1'd1;
            interface1_wb_cyc <= 1'd1;
            interface1_wb_adr <= r_addr[31:2];
            interface1_wb_sel <= 4'd15;
            if (interface1_wb_ack) begin
                axiliteinterface1_ar_ready <= 1'd1;
                data_axilite2wishbone_next_value1 <= interface1_wb_dat_r;
                data_axilite2wishbone_next_value_ce1 <= 1'd1;
                litepciecore_axilite2wishbone_next_state <= 2'd2;
            end
        end
        2'd2: begin
            axiliteinterface1_r_valid <= 1'd1;
            axiliteinterface1_r_payload_resp <= 1'd0;
            axiliteinterface1_r_payload_data <= data;
            if (axiliteinterface1_r_ready) begin
                litepciecore_axilite2wishbone_next_state <= 1'd0;
            end
        end
        2'd3: begin
            interface1_wb_stb <= axiliteinterface1_w_valid;
            interface1_wb_cyc <= axiliteinterface1_w_valid;
            interface1_wb_we <= 1'd1;
            interface1_wb_adr <= w_addr[31:2];
            interface1_wb_sel <= axiliteinterface1_w_payload_strb;
            interface1_wb_dat_w <= axiliteinterface1_w_payload_data;
            if (interface1_wb_ack) begin
                axiliteinterface1_aw_ready <= 1'd1;
                axiliteinterface1_w_ready <= 1'd1;
                litepciecore_axilite2wishbone_next_state <= 3'd4;
            end
        end
        3'd4: begin
            axiliteinterface1_b_valid <= 1'd1;
            axiliteinterface1_b_payload_resp <= 1'd0;
            if (axiliteinterface1_b_ready) begin
                litepciecore_axilite2wishbone_next_state <= 1'd0;
            end
        end
        default: begin
            if ((axiliteinterface1_ar_valid & axiliteinterface1_aw_valid)) begin
                if (last_ar_aw_n) begin
                    last_ar_aw_n_axilite2wishbone_next_value0 <= 1'd0;
                    last_ar_aw_n_axilite2wishbone_next_value_ce0 <= 1'd1;
                    litepciecore_axilite2wishbone_next_state <= 2'd3;
                end else begin
                    last_ar_aw_n_axilite2wishbone_next_value0 <= 1'd1;
                    last_ar_aw_n_axilite2wishbone_next_value_ce0 <= 1'd1;
                    litepciecore_axilite2wishbone_next_state <= 1'd1;
                end
            end else begin
                if (axiliteinterface1_ar_valid) begin
                    last_ar_aw_n_axilite2wishbone_next_value0 <= 1'd1;
                    last_ar_aw_n_axilite2wishbone_next_value_ce0 <= 1'd1;
                    litepciecore_axilite2wishbone_next_state <= 1'd1;
                end else begin
                    if (axiliteinterface1_aw_valid) begin
                        last_ar_aw_n_axilite2wishbone_next_value0 <= 1'd0;
                        last_ar_aw_n_axilite2wishbone_next_value_ce0 <= 1'd1;
                        litepciecore_axilite2wishbone_next_state <= 2'd3;
                    end
                end
            end
        end
    endcase
end
assign pcie_wishbone_slave_sink_payload_channel = 1'd0;
assign pcie_wishbone_slave_sink_first = 1'd1;
assign pcie_wishbone_slave_sink_last = 1'd1;
always @(*) begin
    pcie_wishbone_slave_sink_payload_adr <= 32'd0;
    pcie_wishbone_slave_sink_payload_adr[31:2] <= pcie_wishbone_slave_wishbone_adr;
end
assign pcie_wishbone_slave_sink_payload_req_id = s7pciephy_id;
assign pcie_wishbone_slave_sink_payload_tag = 1'd0;
assign pcie_wishbone_slave_sink_payload_len = 1'd1;
assign pcie_wishbone_slave_sink_payload_dat = pcie_wishbone_slave_wishbone_dat_w;
always @(*) begin
    litepciecore_litepciewishboneslave_next_state <= 2'd0;
    pcie_wishbone_slave_sink_payload_we <= 1'd0;
    pcie_wishbone_slave_sink_valid <= 1'd0;
    pcie_wishbone_slave_source_ready <= 1'd0;
    pcie_wishbone_slave_wishbone_ack <= 1'd0;
    pcie_wishbone_slave_wishbone_dat_r <= 32'd0;
    litepciecore_litepciewishboneslave_next_state <= litepciecore_litepciewishboneslave_state;
    case (litepciecore_litepciewishboneslave_state)
        1'd1: begin
            pcie_wishbone_slave_sink_valid <= 1'd1;
            pcie_wishbone_slave_sink_payload_we <= 1'd1;
            if (pcie_wishbone_slave_sink_ready) begin
                pcie_wishbone_slave_wishbone_ack <= 1'd1;
                litepciecore_litepciewishboneslave_next_state <= 1'd0;
            end
        end
        2'd2: begin
            pcie_wishbone_slave_sink_valid <= 1'd1;
            pcie_wishbone_slave_sink_payload_we <= 1'd0;
            if (pcie_wishbone_slave_sink_ready) begin
                litepciecore_litepciewishboneslave_next_state <= 2'd3;
            end
        end
        2'd3: begin
            pcie_wishbone_slave_source_ready <= 1'd1;
            if ((pcie_wishbone_slave_source_valid & pcie_wishbone_slave_source_first)) begin
                if (1'd0) begin
                    if (pcie_wishbone_slave_source_payload_adr[2]) begin
                        pcie_wishbone_slave_wishbone_dat_r <= pcie_wishbone_slave_source_payload_dat[31:0];
                    end else begin
                        pcie_wishbone_slave_wishbone_dat_r <= pcie_wishbone_slave_source_payload_dat[63:32];
                    end
                end else begin
                    pcie_wishbone_slave_wishbone_dat_r <= pcie_wishbone_slave_source_payload_dat[31:0];
                end
                pcie_wishbone_slave_wishbone_ack <= 1'd1;
                litepciecore_litepciewishboneslave_next_state <= 1'd0;
            end
        end
        default: begin
            if ((pcie_wishbone_slave_wishbone_stb & pcie_wishbone_slave_wishbone_cyc)) begin
                if (pcie_wishbone_slave_wishbone_we) begin
                    litepciecore_litepciewishboneslave_next_state <= 1'd1;
                end else begin
                    litepciecore_litepciewishboneslave_next_state <= 2'd2;
                end
            end
        end
    endcase
end
assign litepciedma_writer_sink_sink_valid = litepciedma_sink_sink_valid;
assign litepciedma_sink_sink_ready = litepciedma_writer_sink_sink_ready;
assign litepciedma_writer_sink_sink_first = litepciedma_sink_sink_first;
assign litepciedma_writer_sink_sink_last = litepciedma_sink_sink_last;
assign litepciedma_writer_sink_sink_payload_data = litepciedma_sink_sink_payload_data;
assign litepciedma_source_source_valid = litepciedma_reader_source_source_valid;
assign litepciedma_reader_source_source_ready = litepciedma_source_source_ready;
assign litepciedma_source_source_first = litepciedma_reader_source_source_first;
assign litepciedma_source_source_last = litepciedma_reader_source_source_last;
assign litepciedma_source_source_payload_data = litepciedma_reader_source_source_payload_data;
assign litepciedma_loopback_sink_valid = litepciedma_source_source_valid;
assign litepciedma_source_source_ready = litepciedma_loopback_sink_ready;
assign litepciedma_loopback_sink_first = litepciedma_source_source_first;
assign litepciedma_loopback_sink_last = litepciedma_source_source_last;
assign litepciedma_loopback_sink_payload_data = litepciedma_source_source_payload_data;
assign litepciedma_sink_sink_valid = litepciedma_loopback_source_valid;
assign litepciedma_loopback_source_ready = litepciedma_sink_sink_ready;
assign litepciedma_sink_sink_first = litepciedma_loopback_source_first;
assign litepciedma_sink_sink_last = litepciedma_loopback_source_last;
assign litepciedma_sink_sink_payload_data = litepciedma_loopback_source_payload_data;
assign litepciedma_synchronizer_sink_valid = litepciedma_loopback_next_source_valid;
assign litepciedma_loopback_next_source_ready = litepciedma_synchronizer_sink_ready;
assign litepciedma_synchronizer_sink_first = litepciedma_loopback_next_source_first;
assign litepciedma_synchronizer_sink_last = litepciedma_loopback_next_source_last;
assign litepciedma_synchronizer_sink_payload_data = litepciedma_loopback_next_source_payload_data;
assign litepciedma_loopback_next_sink_valid = litepciedma_synchronizer_source_valid;
assign litepciedma_synchronizer_source_ready = litepciedma_loopback_next_sink_ready;
assign litepciedma_loopback_next_sink_first = litepciedma_synchronizer_source_first;
assign litepciedma_loopback_next_sink_last = litepciedma_synchronizer_source_last;
assign litepciedma_loopback_next_sink_payload_data = litepciedma_synchronizer_source_payload_data;
assign litepciedma_buffering_sink_sink_valid = litepciedma_synchronizer_next_source_valid;
assign litepciedma_synchronizer_next_source_ready = litepciedma_buffering_sink_sink_ready;
assign litepciedma_buffering_sink_sink_first = litepciedma_synchronizer_next_source_first;
assign litepciedma_buffering_sink_sink_last = litepciedma_synchronizer_next_source_last;
assign litepciedma_buffering_sink_sink_payload_data = litepciedma_synchronizer_next_source_payload_data;
assign litepciedma_synchronizer_next_sink_valid = litepciedma_buffering_source_source_valid;
assign litepciedma_buffering_source_source_ready = litepciedma_synchronizer_next_sink_ready;
assign litepciedma_synchronizer_next_sink_first = litepciedma_buffering_source_source_first;
assign litepciedma_synchronizer_next_sink_last = litepciedma_buffering_source_source_last;
assign litepciedma_synchronizer_next_sink_payload_data = litepciedma_buffering_source_source_payload_data;
assign litepciedma_buffering_next_sink_valid = bufferizeendpoints0_source_source_valid;
assign bufferizeendpoints0_source_source_ready = litepciedma_buffering_next_sink_ready;
assign litepciedma_buffering_next_sink_first = bufferizeendpoints0_source_source_first;
assign litepciedma_buffering_next_sink_last = bufferizeendpoints0_source_source_last;
assign litepciedma_buffering_next_sink_payload_data = bufferizeendpoints0_source_source_payload_data;
assign bufferizeendpoints1_sink_sink_valid = litepciedma_buffering_next_source_valid;
assign litepciedma_buffering_next_source_ready = bufferizeendpoints1_sink_sink_ready;
assign bufferizeendpoints1_sink_sink_first = litepciedma_buffering_next_source_first;
assign bufferizeendpoints1_sink_sink_last = litepciedma_buffering_next_source_last;
assign bufferizeendpoints1_sink_sink_payload_data = litepciedma_buffering_next_source_payload_data;
assign litepciedma_writer_splitter_sink_valid = litepciedma_writer_table_source_source_valid;
assign litepciedma_writer_table_source_source_ready = litepciedma_writer_splitter_sink_ready;
assign litepciedma_writer_splitter_sink_first = litepciedma_writer_table_source_source_first;
assign litepciedma_writer_splitter_sink_last = litepciedma_writer_table_source_source_last;
assign litepciedma_writer_splitter_sink_payload_address = litepciedma_writer_table_source_source_payload_address;
assign litepciedma_writer_splitter_sink_payload_length = litepciedma_writer_table_source_source_payload_length;
assign litepciedma_writer_splitter_sink_payload_irq_disable = litepciedma_writer_table_source_source_payload_irq_disable;
assign litepciedma_writer_splitter_sink_payload_last_disable = litepciedma_writer_table_source_source_payload_last_disable;
assign litepciedma_writer_data_conv_converter_sink_valid = litepciedma_writer_sink_sink_valid;
assign litepciedma_writer_sink_sink_ready = litepciedma_writer_data_conv_converter_sink_ready;
assign litepciedma_writer_data_conv_converter_sink_first = litepciedma_writer_sink_sink_first;
assign litepciedma_writer_data_conv_converter_sink_last = litepciedma_writer_sink_sink_last;
assign litepciedma_writer_data_conv_converter_sink_payload_data = litepciedma_writer_sink_sink_payload_data;
always @(*) begin
    litepciedma_writer_data_conv_source_source_ready <= 1'd0;
    litepciedma_writer_data_fifo_sink_first <= 1'd0;
    litepciedma_writer_data_fifo_sink_last <= 1'd0;
    litepciedma_writer_data_fifo_sink_payload_data <= 64'd0;
    litepciedma_writer_data_fifo_sink_valid <= 1'd0;
    litepciedma_writer_data_conv_source_source_ready <= 1'd1;
    if (litepciedma_writer_enable_storage[0]) begin
        litepciedma_writer_data_fifo_sink_valid <= litepciedma_writer_data_conv_source_source_valid;
        litepciedma_writer_data_conv_source_source_ready <= litepciedma_writer_data_fifo_sink_ready;
        litepciedma_writer_data_fifo_sink_first <= litepciedma_writer_data_conv_source_source_first;
        litepciedma_writer_data_fifo_sink_last <= litepciedma_writer_data_conv_source_source_last;
        litepciedma_writer_data_fifo_sink_payload_data <= litepciedma_writer_data_conv_source_source_payload_data;
    end
end
assign litepciedma_litepciemasterinternalport0_sink_payload_channel = 1'd1;
assign litepciedma_litepciemasterinternalport0_sink_payload_user_id = litepciedma_writer_splitter_source_payload_user_id;
assign litepciedma_litepciemasterinternalport0_sink_first = (litepciedma_writer_req_count == 1'd0);
assign litepciedma_litepciemasterinternalport0_sink_last = (litepciedma_writer_req_count == (litepciedma_writer_splitter_source_payload_length[23:3] - 1'd1));
assign litepciedma_litepciemasterinternalport0_sink_payload_we = 1'd1;
assign litepciedma_litepciemasterinternalport0_sink_payload_adr = litepciedma_writer_splitter_source_payload_address;
assign litepciedma_litepciemasterinternalport0_sink_payload_req_id = s7pciephy_id;
assign litepciedma_litepciemasterinternalport0_sink_payload_tag = 1'd0;
assign litepciedma_litepciemasterinternalport0_sink_payload_len = litepciedma_writer_splitter_source_payload_length[23:2];
assign litepciedma_litepciemasterinternalport0_sink_payload_dat = litepciedma_writer_data_fifo_source_payload_data;
assign litepciedma_writer_splitter_terminate = (litepciedma_writer_data_fifo_source_last & (~litepciedma_writer_splitter_source_payload_last_disable));
always @(*) begin
    litepciedma_writer_irq <= 1'd0;
    if (((litepciedma_writer_splitter_source_valid & litepciedma_writer_splitter_source_ready) & litepciedma_writer_splitter_source_last)) begin
        litepciedma_writer_irq <= (~litepciedma_writer_splitter_source_payload_irq_disable);
    end
end
assign litepciedma_writer_table_table_reset = (litepciedma_writer_table_reset_storage & litepciedma_writer_table_reset_re);
assign litepciedma_writer_table_level_status = litepciedma_writer_table_table_level;
assign litepciedma_writer_table_source_source_valid = litepciedma_writer_table_table_source_valid;
assign litepciedma_writer_table_table_source_ready = litepciedma_writer_table_source_source_ready;
assign litepciedma_writer_table_source_source_first = litepciedma_writer_table_table_source_first;
assign litepciedma_writer_table_source_source_last = litepciedma_writer_table_table_source_last;
assign litepciedma_writer_table_source_source_payload_address = litepciedma_writer_table_table_source_payload_address;
assign litepciedma_writer_table_source_source_payload_length = litepciedma_writer_table_table_source_payload_length;
assign litepciedma_writer_table_source_source_payload_irq_disable = litepciedma_writer_table_table_source_payload_irq_disable;
assign litepciedma_writer_table_source_source_payload_last_disable = litepciedma_writer_table_table_source_payload_last_disable;
assign litepciedma_writer_table_table_syncfifo_din = {litepciedma_writer_table_table_fifo_in_last, litepciedma_writer_table_table_fifo_in_first, litepciedma_writer_table_table_fifo_in_payload_last_disable, litepciedma_writer_table_table_fifo_in_payload_irq_disable, litepciedma_writer_table_table_fifo_in_payload_length, litepciedma_writer_table_table_fifo_in_payload_address};
assign {litepciedma_writer_table_table_fifo_out_last, litepciedma_writer_table_table_fifo_out_first, litepciedma_writer_table_table_fifo_out_payload_last_disable, litepciedma_writer_table_table_fifo_out_payload_irq_disable, litepciedma_writer_table_table_fifo_out_payload_length, litepciedma_writer_table_table_fifo_out_payload_address} = litepciedma_writer_table_table_syncfifo_dout;
assign litepciedma_writer_table_table_sink_ready = litepciedma_writer_table_table_syncfifo_writable;
assign litepciedma_writer_table_table_syncfifo_we = litepciedma_writer_table_table_sink_valid;
assign litepciedma_writer_table_table_fifo_in_first = litepciedma_writer_table_table_sink_first;
assign litepciedma_writer_table_table_fifo_in_last = litepciedma_writer_table_table_sink_last;
assign litepciedma_writer_table_table_fifo_in_payload_address = litepciedma_writer_table_table_sink_payload_address;
assign litepciedma_writer_table_table_fifo_in_payload_length = litepciedma_writer_table_table_sink_payload_length;
assign litepciedma_writer_table_table_fifo_in_payload_irq_disable = litepciedma_writer_table_table_sink_payload_irq_disable;
assign litepciedma_writer_table_table_fifo_in_payload_last_disable = litepciedma_writer_table_table_sink_payload_last_disable;
assign litepciedma_writer_table_table_source_valid = litepciedma_writer_table_table_syncfifo_readable;
assign litepciedma_writer_table_table_source_first = litepciedma_writer_table_table_fifo_out_first;
assign litepciedma_writer_table_table_source_last = litepciedma_writer_table_table_fifo_out_last;
assign litepciedma_writer_table_table_source_payload_address = litepciedma_writer_table_table_fifo_out_payload_address;
assign litepciedma_writer_table_table_source_payload_length = litepciedma_writer_table_table_fifo_out_payload_length;
assign litepciedma_writer_table_table_source_payload_irq_disable = litepciedma_writer_table_table_fifo_out_payload_irq_disable;
assign litepciedma_writer_table_table_source_payload_last_disable = litepciedma_writer_table_table_fifo_out_payload_last_disable;
assign litepciedma_writer_table_table_syncfifo_re = litepciedma_writer_table_table_source_ready;
always @(*) begin
    litepciedma_writer_table_table_wrport_adr <= 8'd0;
    if (litepciedma_writer_table_table_replace) begin
        litepciedma_writer_table_table_wrport_adr <= (litepciedma_writer_table_table_produce - 1'd1);
    end else begin
        litepciedma_writer_table_table_wrport_adr <= litepciedma_writer_table_table_produce;
    end
end
assign litepciedma_writer_table_table_wrport_dat_w = litepciedma_writer_table_table_syncfifo_din;
assign litepciedma_writer_table_table_wrport_we = (litepciedma_writer_table_table_syncfifo_we & (litepciedma_writer_table_table_syncfifo_writable | litepciedma_writer_table_table_replace));
assign litepciedma_writer_table_table_do_read = (litepciedma_writer_table_table_syncfifo_readable & litepciedma_writer_table_table_syncfifo_re);
assign litepciedma_writer_table_table_rdport_adr = litepciedma_writer_table_table_consume;
assign litepciedma_writer_table_table_syncfifo_dout = litepciedma_writer_table_table_rdport_dat_r;
assign litepciedma_writer_table_table_syncfifo_writable = (litepciedma_writer_table_table_level != 9'd256);
assign litepciedma_writer_table_table_syncfifo_readable = (litepciedma_writer_table_table_level != 1'd0);
assign litepciedma_writer_splitter_source_payload_address = (litepciedma_writer_splitter_sink_payload_address + litepciedma_writer_splitter_desc_offset);
assign litepciedma_writer_splitter_source_payload_irq_disable = litepciedma_writer_splitter_sink_payload_irq_disable;
assign litepciedma_writer_splitter_source_payload_last_disable = litepciedma_writer_splitter_sink_payload_last_disable;
assign litepciedma_writer_splitter_source_payload_user_id = litepciedma_writer_splitter_desc_id;
always @(*) begin
    litepciecore_litepciedmawriter_resetinserter_next_state <= 1'd0;
    litepciedma_writer_splitter_desc_id_bufferizeendpoints_resetinserter_next_value2 <= 32'd0;
    litepciedma_writer_splitter_desc_id_bufferizeendpoints_resetinserter_next_value_ce2 <= 1'd0;
    litepciedma_writer_splitter_desc_length_bufferizeendpoints_resetinserter_next_value1 <= 32'd0;
    litepciedma_writer_splitter_desc_length_bufferizeendpoints_resetinserter_next_value_ce1 <= 1'd0;
    litepciedma_writer_splitter_desc_offset_bufferizeendpoints_resetinserter_next_value0 <= 32'd0;
    litepciedma_writer_splitter_desc_offset_bufferizeendpoints_resetinserter_next_value_ce0 <= 1'd0;
    litepciedma_writer_splitter_sink_ready <= 1'd0;
    litepciedma_writer_splitter_source_first <= 1'd0;
    litepciedma_writer_splitter_source_last <= 1'd0;
    litepciedma_writer_splitter_source_payload_length <= 24'd0;
    litepciedma_writer_splitter_source_valid <= 1'd0;
    litepciecore_litepciedmawriter_resetinserter_next_state <= litepciecore_litepciedmawriter_resetinserter_state;
    case (litepciecore_litepciedmawriter_resetinserter_state)
        1'd1: begin
            litepciedma_writer_splitter_source_valid <= 1'd1;
            litepciedma_writer_splitter_source_first <= (litepciedma_writer_splitter_desc_offset == 1'd0);
            if ((litepciedma_writer_splitter_desc_length > s7pciephy_max_payload_size)) begin
                litepciedma_writer_splitter_source_last <= litepciedma_writer_splitter_terminate;
                litepciedma_writer_splitter_source_payload_length <= s7pciephy_max_payload_size;
            end else begin
                litepciedma_writer_splitter_source_last <= 1'd1;
                litepciedma_writer_splitter_source_payload_length <= litepciedma_writer_splitter_desc_length;
            end
            if (litepciedma_writer_splitter_source_ready) begin
                litepciedma_writer_splitter_desc_offset_bufferizeendpoints_resetinserter_next_value0 <= (litepciedma_writer_splitter_desc_offset + s7pciephy_max_payload_size);
                litepciedma_writer_splitter_desc_offset_bufferizeendpoints_resetinserter_next_value_ce0 <= 1'd1;
                litepciedma_writer_splitter_desc_length_bufferizeendpoints_resetinserter_next_value1 <= (litepciedma_writer_splitter_desc_length - s7pciephy_max_payload_size);
                litepciedma_writer_splitter_desc_length_bufferizeendpoints_resetinserter_next_value_ce1 <= 1'd1;
                if (litepciedma_writer_splitter_source_last) begin
                    litepciedma_writer_splitter_sink_ready <= 1'd1;
                    litepciedma_writer_splitter_desc_id_bufferizeendpoints_resetinserter_next_value2 <= (litepciedma_writer_splitter_desc_id + 1'd1);
                    litepciedma_writer_splitter_desc_id_bufferizeendpoints_resetinserter_next_value_ce2 <= 1'd1;
                    litepciecore_litepciedmawriter_resetinserter_next_state <= 1'd0;
                end
            end
        end
        default: begin
            litepciedma_writer_splitter_desc_offset_bufferizeendpoints_resetinserter_next_value0 <= 1'd0;
            litepciedma_writer_splitter_desc_offset_bufferizeendpoints_resetinserter_next_value_ce0 <= 1'd1;
            litepciedma_writer_splitter_desc_length_bufferizeendpoints_resetinserter_next_value1 <= litepciedma_writer_splitter_sink_payload_length;
            litepciedma_writer_splitter_desc_length_bufferizeendpoints_resetinserter_next_value_ce1 <= 1'd1;
            if (litepciedma_writer_splitter_sink_valid) begin
                litepciecore_litepciedmawriter_resetinserter_next_state <= 1'd1;
            end
        end
    endcase
end
assign litepciedma_writer_data_conv_source_source_valid = litepciedma_writer_data_conv_converter_source_valid;
assign litepciedma_writer_data_conv_converter_source_ready = litepciedma_writer_data_conv_source_source_ready;
assign litepciedma_writer_data_conv_source_source_first = litepciedma_writer_data_conv_converter_source_first;
assign litepciedma_writer_data_conv_source_source_last = litepciedma_writer_data_conv_converter_source_last;
assign litepciedma_writer_data_conv_source_source_payload_data = litepciedma_writer_data_conv_converter_source_payload_data;
assign litepciedma_writer_data_conv_converter_source_valid = litepciedma_writer_data_conv_converter_sink_valid;
assign litepciedma_writer_data_conv_converter_sink_ready = litepciedma_writer_data_conv_converter_source_ready;
assign litepciedma_writer_data_conv_converter_source_first = litepciedma_writer_data_conv_converter_sink_first;
assign litepciedma_writer_data_conv_converter_source_last = litepciedma_writer_data_conv_converter_sink_last;
assign litepciedma_writer_data_conv_converter_source_payload_data = litepciedma_writer_data_conv_converter_sink_payload_data;
assign litepciedma_writer_data_conv_converter_source_payload_valid_token_count = 1'd1;
assign litepciedma_writer_data_fifo_syncfifo_din = {litepciedma_writer_data_fifo_fifo_in_last, litepciedma_writer_data_fifo_fifo_in_first, litepciedma_writer_data_fifo_fifo_in_payload_data};
assign {litepciedma_writer_data_fifo_fifo_out_last, litepciedma_writer_data_fifo_fifo_out_first, litepciedma_writer_data_fifo_fifo_out_payload_data} = litepciedma_writer_data_fifo_syncfifo_dout;
assign litepciedma_writer_data_fifo_sink_ready = litepciedma_writer_data_fifo_syncfifo_writable;
assign litepciedma_writer_data_fifo_syncfifo_we = litepciedma_writer_data_fifo_sink_valid;
assign litepciedma_writer_data_fifo_fifo_in_first = litepciedma_writer_data_fifo_sink_first;
assign litepciedma_writer_data_fifo_fifo_in_last = litepciedma_writer_data_fifo_sink_last;
assign litepciedma_writer_data_fifo_fifo_in_payload_data = litepciedma_writer_data_fifo_sink_payload_data;
assign litepciedma_writer_data_fifo_source_valid = litepciedma_writer_data_fifo_readable;
assign litepciedma_writer_data_fifo_source_first = litepciedma_writer_data_fifo_fifo_out_first;
assign litepciedma_writer_data_fifo_source_last = litepciedma_writer_data_fifo_fifo_out_last;
assign litepciedma_writer_data_fifo_source_payload_data = litepciedma_writer_data_fifo_fifo_out_payload_data;
assign litepciedma_writer_data_fifo_re = litepciedma_writer_data_fifo_source_ready;
assign litepciedma_writer_data_fifo_syncfifo_re = (litepciedma_writer_data_fifo_syncfifo_readable & ((~litepciedma_writer_data_fifo_readable) | litepciedma_writer_data_fifo_re));
assign litepciedma_writer_data_fifo_level1 = (litepciedma_writer_data_fifo_level0 + litepciedma_writer_data_fifo_readable);
always @(*) begin
    litepciedma_writer_data_fifo_wrport_adr <= 8'd0;
    if (litepciedma_writer_data_fifo_replace) begin
        litepciedma_writer_data_fifo_wrport_adr <= (litepciedma_writer_data_fifo_produce - 1'd1);
    end else begin
        litepciedma_writer_data_fifo_wrport_adr <= litepciedma_writer_data_fifo_produce;
    end
end
assign litepciedma_writer_data_fifo_wrport_dat_w = litepciedma_writer_data_fifo_syncfifo_din;
assign litepciedma_writer_data_fifo_wrport_we = (litepciedma_writer_data_fifo_syncfifo_we & (litepciedma_writer_data_fifo_syncfifo_writable | litepciedma_writer_data_fifo_replace));
assign litepciedma_writer_data_fifo_do_read = (litepciedma_writer_data_fifo_syncfifo_readable & litepciedma_writer_data_fifo_syncfifo_re);
assign litepciedma_writer_data_fifo_rdport_adr = litepciedma_writer_data_fifo_consume;
assign litepciedma_writer_data_fifo_syncfifo_dout = litepciedma_writer_data_fifo_rdport_dat_r;
assign litepciedma_writer_data_fifo_rdport_re = litepciedma_writer_data_fifo_do_read;
assign litepciedma_writer_data_fifo_syncfifo_writable = (litepciedma_writer_data_fifo_level0 != 9'd256);
assign litepciedma_writer_data_fifo_syncfifo_readable = (litepciedma_writer_data_fifo_level0 != 1'd0);
always @(*) begin
    litepciecore_litepciedmawriter_fsm_next_state <= 1'd0;
    litepciedma_litepciemasterinternalport0_sink_valid <= 1'd0;
    litepciedma_writer_data_fifo_reset <= 1'd0;
    litepciedma_writer_data_fifo_source_ready <= 1'd0;
    litepciedma_writer_is_ongoing <= 1'd0;
    litepciedma_writer_req_count_bufferizeendpoints_fsm_next_value <= 24'd0;
    litepciedma_writer_req_count_bufferizeendpoints_fsm_next_value_ce <= 1'd0;
    litepciedma_writer_splitter_reset <= 1'd0;
    litepciedma_writer_splitter_source_ready <= 1'd0;
    litepciecore_litepciedmawriter_fsm_next_state <= litepciecore_litepciedmawriter_fsm_state;
    case (litepciecore_litepciedmawriter_fsm_state)
        1'd1: begin
            litepciedma_litepciemasterinternalport0_sink_valid <= 1'd1;
            if (litepciedma_litepciemasterinternalport0_sink_ready) begin
                litepciedma_writer_req_count_bufferizeendpoints_fsm_next_value <= (litepciedma_writer_req_count + 1'd1);
                litepciedma_writer_req_count_bufferizeendpoints_fsm_next_value_ce <= 1'd1;
                litepciedma_writer_data_fifo_source_ready <= (~litepciedma_writer_splitter_terminate);
                if (litepciedma_litepciemasterinternalport0_sink_last) begin
                    litepciedma_writer_splitter_source_ready <= 1'd1;
                    litepciedma_writer_data_fifo_source_ready <= 1'd1;
                    litepciecore_litepciedmawriter_fsm_next_state <= 1'd0;
                end
            end
        end
        default: begin
            litepciedma_writer_req_count_bufferizeendpoints_fsm_next_value <= 1'd0;
            litepciedma_writer_req_count_bufferizeendpoints_fsm_next_value_ce <= 1'd1;
            if ((~litepciedma_writer_enable_storage[0])) begin
                litepciedma_writer_splitter_reset <= 1'd1;
                litepciedma_writer_data_fifo_reset <= 1'd1;
            end else begin
                if ((litepciedma_writer_splitter_source_valid & (litepciedma_writer_data_fifo_level1 >= litepciedma_writer_splitter_source_payload_length[23:3]))) begin
                    litepciecore_litepciedmawriter_fsm_next_state <= 1'd1;
                end
            end
            litepciedma_writer_is_ongoing <= 1'd1;
        end
    endcase
end
assign litepciedma_reader_splitter_sink_valid = litepciedma_reader_table_source_source_valid;
assign litepciedma_reader_table_source_source_ready = litepciedma_reader_splitter_sink_ready;
assign litepciedma_reader_splitter_sink_first = litepciedma_reader_table_source_source_first;
assign litepciedma_reader_splitter_sink_last = litepciedma_reader_table_source_source_last;
assign litepciedma_reader_splitter_sink_payload_address = litepciedma_reader_table_source_source_payload_address;
assign litepciedma_reader_splitter_sink_payload_length = litepciedma_reader_table_source_source_payload_length;
assign litepciedma_reader_splitter_sink_payload_irq_disable = litepciedma_reader_table_source_source_payload_irq_disable;
assign litepciedma_reader_splitter_sink_payload_last_disable = litepciedma_reader_table_source_source_payload_last_disable;
assign litepciedma_reader_source_source_valid = litepciedma_reader_data_conv_source_source_valid;
assign litepciedma_reader_data_conv_source_source_ready = litepciedma_reader_source_source_ready;
assign litepciedma_reader_source_source_first = litepciedma_reader_data_conv_source_source_first;
assign litepciedma_reader_source_source_last = litepciedma_reader_data_conv_source_source_last;
assign litepciedma_reader_source_source_payload_data = litepciedma_reader_data_conv_source_source_payload_data;
assign litepciedma_reader_data_conv_converter_sink_valid = litepciedma_reader_data_fifo_source_valid;
assign litepciedma_reader_data_fifo_source_ready = litepciedma_reader_data_conv_converter_sink_ready;
assign litepciedma_reader_data_conv_converter_sink_first = litepciedma_reader_data_fifo_source_first;
assign litepciedma_reader_data_conv_converter_sink_last = litepciedma_reader_data_fifo_source_last;
assign litepciedma_reader_data_conv_converter_sink_payload_data = litepciedma_reader_data_fifo_source_payload_data;
always @(*) begin
    litepciedma_litepciemasterinternalport1_source_ready <= 1'd0;
    litepciedma_reader_data_fifo_sink_first <= 1'd0;
    litepciedma_reader_data_fifo_sink_payload_data <= 64'd0;
    litepciedma_reader_data_fifo_sink_valid <= 1'd0;
    if (litepciedma_reader_enable_storage[0]) begin
        litepciedma_reader_data_fifo_sink_valid <= litepciedma_litepciemasterinternalport1_source_valid;
        litepciedma_litepciemasterinternalport1_source_ready <= litepciedma_reader_data_fifo_sink_ready;
        litepciedma_reader_data_fifo_sink_payload_data <= litepciedma_litepciemasterinternalport1_source_payload_dat;
        litepciedma_reader_data_fifo_sink_first <= (litepciedma_litepciemasterinternalport1_source_first & (litepciedma_litepciemasterinternalport1_source_payload_user_id != litepciedma_reader_last_user_id));
    end else begin
        litepciedma_litepciemasterinternalport1_source_ready <= 1'd1;
    end
end
always @(*) begin
    litepciedma_reader_pending_words_queue <= 12'd0;
    if ((litepciedma_reader_splitter_source_source_valid & litepciedma_reader_splitter_source_source_ready)) begin
        litepciedma_reader_pending_words_queue <= litepciedma_reader_splitter_source_source_payload_length[23:3];
    end
end
always @(*) begin
    litepciedma_reader_pending_words_dequeue <= 12'd0;
    if ((litepciedma_reader_data_fifo_source_valid & litepciedma_reader_data_fifo_source_ready)) begin
        litepciedma_reader_pending_words_dequeue <= 1'd1;
    end
end
assign litepciedma_litepciemasterinternalport1_sink_payload_channel = 2'd2;
assign litepciedma_litepciemasterinternalport1_sink_payload_user_id = litepciedma_reader_splitter_source_source_payload_user_id;
assign litepciedma_litepciemasterinternalport1_sink_first = 1'd1;
assign litepciedma_litepciemasterinternalport1_sink_last = 1'd1;
assign litepciedma_litepciemasterinternalport1_sink_payload_we = 1'd0;
assign litepciedma_litepciemasterinternalport1_sink_payload_adr = litepciedma_reader_splitter_source_source_payload_address;
assign litepciedma_litepciemasterinternalport1_sink_payload_len = litepciedma_reader_splitter_source_source_payload_length[23:2];
assign litepciedma_litepciemasterinternalport1_sink_payload_req_id = s7pciephy_id;
assign litepciedma_litepciemasterinternalport1_sink_payload_dat = 1'd0;
always @(*) begin
    litepciedma_reader_irq <= 1'd0;
    if (((litepciedma_reader_splitter_source_source_valid & litepciedma_reader_splitter_source_source_ready) & litepciedma_reader_splitter_source_source_last)) begin
        litepciedma_reader_irq <= (~litepciedma_reader_splitter_source_source_payload_irq_disable);
    end
end
assign litepciedma_reader_table_table_reset = (litepciedma_reader_table_reset_storage & litepciedma_reader_table_reset_re);
assign litepciedma_reader_table_level_status = litepciedma_reader_table_table_level;
assign litepciedma_reader_table_source_source_valid = litepciedma_reader_table_table_source_valid;
assign litepciedma_reader_table_table_source_ready = litepciedma_reader_table_source_source_ready;
assign litepciedma_reader_table_source_source_first = litepciedma_reader_table_table_source_first;
assign litepciedma_reader_table_source_source_last = litepciedma_reader_table_table_source_last;
assign litepciedma_reader_table_source_source_payload_address = litepciedma_reader_table_table_source_payload_address;
assign litepciedma_reader_table_source_source_payload_length = litepciedma_reader_table_table_source_payload_length;
assign litepciedma_reader_table_source_source_payload_irq_disable = litepciedma_reader_table_table_source_payload_irq_disable;
assign litepciedma_reader_table_source_source_payload_last_disable = litepciedma_reader_table_table_source_payload_last_disable;
assign litepciedma_reader_table_table_syncfifo_din = {litepciedma_reader_table_table_fifo_in_last, litepciedma_reader_table_table_fifo_in_first, litepciedma_reader_table_table_fifo_in_payload_last_disable, litepciedma_reader_table_table_fifo_in_payload_irq_disable, litepciedma_reader_table_table_fifo_in_payload_length, litepciedma_reader_table_table_fifo_in_payload_address};
assign {litepciedma_reader_table_table_fifo_out_last, litepciedma_reader_table_table_fifo_out_first, litepciedma_reader_table_table_fifo_out_payload_last_disable, litepciedma_reader_table_table_fifo_out_payload_irq_disable, litepciedma_reader_table_table_fifo_out_payload_length, litepciedma_reader_table_table_fifo_out_payload_address} = litepciedma_reader_table_table_syncfifo_dout;
assign litepciedma_reader_table_table_sink_ready = litepciedma_reader_table_table_syncfifo_writable;
assign litepciedma_reader_table_table_syncfifo_we = litepciedma_reader_table_table_sink_valid;
assign litepciedma_reader_table_table_fifo_in_first = litepciedma_reader_table_table_sink_first;
assign litepciedma_reader_table_table_fifo_in_last = litepciedma_reader_table_table_sink_last;
assign litepciedma_reader_table_table_fifo_in_payload_address = litepciedma_reader_table_table_sink_payload_address;
assign litepciedma_reader_table_table_fifo_in_payload_length = litepciedma_reader_table_table_sink_payload_length;
assign litepciedma_reader_table_table_fifo_in_payload_irq_disable = litepciedma_reader_table_table_sink_payload_irq_disable;
assign litepciedma_reader_table_table_fifo_in_payload_last_disable = litepciedma_reader_table_table_sink_payload_last_disable;
assign litepciedma_reader_table_table_source_valid = litepciedma_reader_table_table_syncfifo_readable;
assign litepciedma_reader_table_table_source_first = litepciedma_reader_table_table_fifo_out_first;
assign litepciedma_reader_table_table_source_last = litepciedma_reader_table_table_fifo_out_last;
assign litepciedma_reader_table_table_source_payload_address = litepciedma_reader_table_table_fifo_out_payload_address;
assign litepciedma_reader_table_table_source_payload_length = litepciedma_reader_table_table_fifo_out_payload_length;
assign litepciedma_reader_table_table_source_payload_irq_disable = litepciedma_reader_table_table_fifo_out_payload_irq_disable;
assign litepciedma_reader_table_table_source_payload_last_disable = litepciedma_reader_table_table_fifo_out_payload_last_disable;
assign litepciedma_reader_table_table_syncfifo_re = litepciedma_reader_table_table_source_ready;
always @(*) begin
    litepciedma_reader_table_table_wrport_adr <= 8'd0;
    if (litepciedma_reader_table_table_replace) begin
        litepciedma_reader_table_table_wrport_adr <= (litepciedma_reader_table_table_produce - 1'd1);
    end else begin
        litepciedma_reader_table_table_wrport_adr <= litepciedma_reader_table_table_produce;
    end
end
assign litepciedma_reader_table_table_wrport_dat_w = litepciedma_reader_table_table_syncfifo_din;
assign litepciedma_reader_table_table_wrport_we = (litepciedma_reader_table_table_syncfifo_we & (litepciedma_reader_table_table_syncfifo_writable | litepciedma_reader_table_table_replace));
assign litepciedma_reader_table_table_do_read = (litepciedma_reader_table_table_syncfifo_readable & litepciedma_reader_table_table_syncfifo_re);
assign litepciedma_reader_table_table_rdport_adr = litepciedma_reader_table_table_consume;
assign litepciedma_reader_table_table_syncfifo_dout = litepciedma_reader_table_table_rdport_dat_r;
assign litepciedma_reader_table_table_syncfifo_writable = (litepciedma_reader_table_table_level != 9'd256);
assign litepciedma_reader_table_table_syncfifo_readable = (litepciedma_reader_table_table_level != 1'd0);
assign litepciedma_reader_splitter_source_payload_address = (litepciedma_reader_splitter_sink_payload_address + litepciedma_reader_splitter_desc_offset);
assign litepciedma_reader_splitter_source_payload_irq_disable = litepciedma_reader_splitter_sink_payload_irq_disable;
assign litepciedma_reader_splitter_source_payload_last_disable = litepciedma_reader_splitter_sink_payload_last_disable;
assign litepciedma_reader_splitter_source_payload_user_id = litepciedma_reader_splitter_desc_id;
assign litepciedma_reader_splitter_sink_sink_valid = litepciedma_reader_splitter_source_valid;
assign litepciedma_reader_splitter_source_ready = litepciedma_reader_splitter_sink_sink_ready;
assign litepciedma_reader_splitter_sink_sink_first = litepciedma_reader_splitter_source_first;
assign litepciedma_reader_splitter_sink_sink_last = litepciedma_reader_splitter_source_last;
assign litepciedma_reader_splitter_sink_sink_payload_address = litepciedma_reader_splitter_source_payload_address;
assign litepciedma_reader_splitter_sink_sink_payload_length = litepciedma_reader_splitter_source_payload_length;
assign litepciedma_reader_splitter_sink_sink_payload_irq_disable = litepciedma_reader_splitter_source_payload_irq_disable;
assign litepciedma_reader_splitter_sink_sink_payload_last_disable = litepciedma_reader_splitter_source_payload_last_disable;
assign litepciedma_reader_splitter_sink_sink_payload_user_id = litepciedma_reader_splitter_source_payload_user_id;
always @(*) begin
    litepciecore_litepciedmareader_bufferizeendpoints_next_state <= 1'd0;
    litepciedma_reader_splitter_desc_id_bufferizeendpoints_next_value2 <= 32'd0;
    litepciedma_reader_splitter_desc_id_bufferizeendpoints_next_value_ce2 <= 1'd0;
    litepciedma_reader_splitter_desc_length_bufferizeendpoints_next_value1 <= 32'd0;
    litepciedma_reader_splitter_desc_length_bufferizeendpoints_next_value_ce1 <= 1'd0;
    litepciedma_reader_splitter_desc_offset_bufferizeendpoints_next_value0 <= 32'd0;
    litepciedma_reader_splitter_desc_offset_bufferizeendpoints_next_value_ce0 <= 1'd0;
    litepciedma_reader_splitter_sink_ready <= 1'd0;
    litepciedma_reader_splitter_source_first <= 1'd0;
    litepciedma_reader_splitter_source_last <= 1'd0;
    litepciedma_reader_splitter_source_payload_length <= 24'd0;
    litepciedma_reader_splitter_source_valid <= 1'd0;
    litepciecore_litepciedmareader_bufferizeendpoints_next_state <= litepciecore_litepciedmareader_bufferizeendpoints_state;
    case (litepciecore_litepciedmareader_bufferizeendpoints_state)
        1'd1: begin
            litepciedma_reader_splitter_source_valid <= 1'd1;
            litepciedma_reader_splitter_source_first <= (litepciedma_reader_splitter_desc_offset == 1'd0);
            if ((litepciedma_reader_splitter_desc_length > s7pciephy_max_request_size)) begin
                litepciedma_reader_splitter_source_last <= litepciedma_reader_splitter_terminate;
                litepciedma_reader_splitter_source_payload_length <= s7pciephy_max_request_size;
            end else begin
                litepciedma_reader_splitter_source_last <= 1'd1;
                litepciedma_reader_splitter_source_payload_length <= litepciedma_reader_splitter_desc_length;
            end
            if (litepciedma_reader_splitter_source_ready) begin
                litepciedma_reader_splitter_desc_offset_bufferizeendpoints_next_value0 <= (litepciedma_reader_splitter_desc_offset + s7pciephy_max_request_size);
                litepciedma_reader_splitter_desc_offset_bufferizeendpoints_next_value_ce0 <= 1'd1;
                litepciedma_reader_splitter_desc_length_bufferizeendpoints_next_value1 <= (litepciedma_reader_splitter_desc_length - s7pciephy_max_request_size);
                litepciedma_reader_splitter_desc_length_bufferizeendpoints_next_value_ce1 <= 1'd1;
                if (litepciedma_reader_splitter_source_last) begin
                    litepciedma_reader_splitter_sink_ready <= 1'd1;
                    litepciedma_reader_splitter_desc_id_bufferizeendpoints_next_value2 <= (litepciedma_reader_splitter_desc_id + 1'd1);
                    litepciedma_reader_splitter_desc_id_bufferizeendpoints_next_value_ce2 <= 1'd1;
                    litepciecore_litepciedmareader_bufferizeendpoints_next_state <= 1'd0;
                end
            end
        end
        default: begin
            litepciedma_reader_splitter_desc_offset_bufferizeendpoints_next_value0 <= 1'd0;
            litepciedma_reader_splitter_desc_offset_bufferizeendpoints_next_value_ce0 <= 1'd1;
            litepciedma_reader_splitter_desc_length_bufferizeendpoints_next_value1 <= litepciedma_reader_splitter_sink_payload_length;
            litepciedma_reader_splitter_desc_length_bufferizeendpoints_next_value_ce1 <= 1'd1;
            if (litepciedma_reader_splitter_sink_valid) begin
                litepciecore_litepciedmareader_bufferizeendpoints_next_state <= 1'd1;
            end
        end
    endcase
end
assign litepciedma_reader_splitter_pipe_valid_sink_ready = ((~litepciedma_reader_splitter_pipe_valid_source_valid) | litepciedma_reader_splitter_pipe_valid_source_ready);
assign litepciedma_reader_splitter_pipe_valid_sink_valid = litepciedma_reader_splitter_sink_sink_valid;
assign litepciedma_reader_splitter_sink_sink_ready = litepciedma_reader_splitter_pipe_valid_sink_ready;
assign litepciedma_reader_splitter_pipe_valid_sink_first = litepciedma_reader_splitter_sink_sink_first;
assign litepciedma_reader_splitter_pipe_valid_sink_last = litepciedma_reader_splitter_sink_sink_last;
assign litepciedma_reader_splitter_pipe_valid_sink_payload_address = litepciedma_reader_splitter_sink_sink_payload_address;
assign litepciedma_reader_splitter_pipe_valid_sink_payload_length = litepciedma_reader_splitter_sink_sink_payload_length;
assign litepciedma_reader_splitter_pipe_valid_sink_payload_irq_disable = litepciedma_reader_splitter_sink_sink_payload_irq_disable;
assign litepciedma_reader_splitter_pipe_valid_sink_payload_last_disable = litepciedma_reader_splitter_sink_sink_payload_last_disable;
assign litepciedma_reader_splitter_pipe_valid_sink_payload_user_id = litepciedma_reader_splitter_sink_sink_payload_user_id;
assign litepciedma_reader_splitter_source_source_valid = litepciedma_reader_splitter_pipe_valid_source_valid;
assign litepciedma_reader_splitter_pipe_valid_source_ready = litepciedma_reader_splitter_source_source_ready;
assign litepciedma_reader_splitter_source_source_first = litepciedma_reader_splitter_pipe_valid_source_first;
assign litepciedma_reader_splitter_source_source_last = litepciedma_reader_splitter_pipe_valid_source_last;
assign litepciedma_reader_splitter_source_source_payload_address = litepciedma_reader_splitter_pipe_valid_source_payload_address;
assign litepciedma_reader_splitter_source_source_payload_length = litepciedma_reader_splitter_pipe_valid_source_payload_length;
assign litepciedma_reader_splitter_source_source_payload_irq_disable = litepciedma_reader_splitter_pipe_valid_source_payload_irq_disable;
assign litepciedma_reader_splitter_source_source_payload_last_disable = litepciedma_reader_splitter_pipe_valid_source_payload_last_disable;
assign litepciedma_reader_splitter_source_source_payload_user_id = litepciedma_reader_splitter_pipe_valid_source_payload_user_id;
assign litepciedma_reader_data_conv_source_source_valid = litepciedma_reader_data_conv_converter_source_valid;
assign litepciedma_reader_data_conv_converter_source_ready = litepciedma_reader_data_conv_source_source_ready;
assign litepciedma_reader_data_conv_source_source_first = litepciedma_reader_data_conv_converter_source_first;
assign litepciedma_reader_data_conv_source_source_last = litepciedma_reader_data_conv_converter_source_last;
assign litepciedma_reader_data_conv_source_source_payload_data = litepciedma_reader_data_conv_converter_source_payload_data;
assign litepciedma_reader_data_conv_converter_source_valid = litepciedma_reader_data_conv_converter_sink_valid;
assign litepciedma_reader_data_conv_converter_sink_ready = litepciedma_reader_data_conv_converter_source_ready;
assign litepciedma_reader_data_conv_converter_source_first = litepciedma_reader_data_conv_converter_sink_first;
assign litepciedma_reader_data_conv_converter_source_last = litepciedma_reader_data_conv_converter_sink_last;
assign litepciedma_reader_data_conv_converter_source_payload_data = litepciedma_reader_data_conv_converter_sink_payload_data;
assign litepciedma_reader_data_conv_converter_source_payload_valid_token_count = 1'd1;
assign litepciedma_reader_data_fifo_syncfifo_din = {litepciedma_reader_data_fifo_fifo_in_last, litepciedma_reader_data_fifo_fifo_in_first, litepciedma_reader_data_fifo_fifo_in_payload_data};
assign {litepciedma_reader_data_fifo_fifo_out_last, litepciedma_reader_data_fifo_fifo_out_first, litepciedma_reader_data_fifo_fifo_out_payload_data} = litepciedma_reader_data_fifo_syncfifo_dout;
assign litepciedma_reader_data_fifo_sink_ready = litepciedma_reader_data_fifo_syncfifo_writable;
assign litepciedma_reader_data_fifo_syncfifo_we = litepciedma_reader_data_fifo_sink_valid;
assign litepciedma_reader_data_fifo_fifo_in_first = litepciedma_reader_data_fifo_sink_first;
assign litepciedma_reader_data_fifo_fifo_in_last = litepciedma_reader_data_fifo_sink_last;
assign litepciedma_reader_data_fifo_fifo_in_payload_data = litepciedma_reader_data_fifo_sink_payload_data;
assign litepciedma_reader_data_fifo_source_valid = litepciedma_reader_data_fifo_readable;
assign litepciedma_reader_data_fifo_source_first = litepciedma_reader_data_fifo_fifo_out_first;
assign litepciedma_reader_data_fifo_source_last = litepciedma_reader_data_fifo_fifo_out_last;
assign litepciedma_reader_data_fifo_source_payload_data = litepciedma_reader_data_fifo_fifo_out_payload_data;
assign litepciedma_reader_data_fifo_re = litepciedma_reader_data_fifo_source_ready;
assign litepciedma_reader_data_fifo_syncfifo_re = (litepciedma_reader_data_fifo_syncfifo_readable & ((~litepciedma_reader_data_fifo_readable) | litepciedma_reader_data_fifo_re));
assign litepciedma_reader_data_fifo_level1 = (litepciedma_reader_data_fifo_level0 + litepciedma_reader_data_fifo_readable);
always @(*) begin
    litepciedma_reader_data_fifo_wrport_adr <= 11'd0;
    if (litepciedma_reader_data_fifo_replace) begin
        litepciedma_reader_data_fifo_wrport_adr <= (litepciedma_reader_data_fifo_produce - 1'd1);
    end else begin
        litepciedma_reader_data_fifo_wrport_adr <= litepciedma_reader_data_fifo_produce;
    end
end
assign litepciedma_reader_data_fifo_wrport_dat_w = litepciedma_reader_data_fifo_syncfifo_din;
assign litepciedma_reader_data_fifo_wrport_we = (litepciedma_reader_data_fifo_syncfifo_we & (litepciedma_reader_data_fifo_syncfifo_writable | litepciedma_reader_data_fifo_replace));
assign litepciedma_reader_data_fifo_do_read = (litepciedma_reader_data_fifo_syncfifo_readable & litepciedma_reader_data_fifo_syncfifo_re);
assign litepciedma_reader_data_fifo_rdport_adr = litepciedma_reader_data_fifo_consume;
assign litepciedma_reader_data_fifo_syncfifo_dout = litepciedma_reader_data_fifo_rdport_dat_r;
assign litepciedma_reader_data_fifo_rdport_re = litepciedma_reader_data_fifo_do_read;
assign litepciedma_reader_data_fifo_syncfifo_writable = (litepciedma_reader_data_fifo_level0 != 12'd2048);
assign litepciedma_reader_data_fifo_syncfifo_readable = (litepciedma_reader_data_fifo_level0 != 1'd0);
always @(*) begin
    litepciecore_litepciedmareader_fsm_next_state <= 1'd0;
    litepciedma_litepciemasterinternalport1_sink_valid <= 1'd0;
    litepciedma_reader_data_fifo_reset <= 1'd0;
    litepciedma_reader_is_ongoing <= 1'd0;
    litepciedma_reader_splitter_reset <= 1'd0;
    litepciedma_reader_splitter_source_source_ready <= 1'd0;
    litepciecore_litepciedmareader_fsm_next_state <= litepciecore_litepciedmareader_fsm_state;
    case (litepciecore_litepciedmareader_fsm_state)
        1'd1: begin
            litepciedma_litepciemasterinternalport1_sink_valid <= 1'd1;
            if (litepciedma_litepciemasterinternalport1_sink_ready) begin
                litepciedma_reader_splitter_source_source_ready <= 1'd1;
                litepciecore_litepciedmareader_fsm_next_state <= 1'd0;
            end
        end
        default: begin
            if ((~litepciedma_reader_enable_storage[0])) begin
                litepciedma_reader_splitter_reset <= 1'd1;
                litepciedma_reader_data_fifo_reset <= 1'd1;
            end else begin
                if ((litepciedma_reader_splitter_source_source_valid & (litepciedma_reader_pending_words < 11'd1984))) begin
                    litepciecore_litepciedmareader_fsm_next_state <= 1'd1;
                end
            end
            litepciedma_reader_is_ongoing <= 1'd1;
        end
    endcase
end
always @(*) begin
    litepciedma_loopback_next_sink_ready <= 1'd0;
    litepciedma_loopback_next_source_first <= 1'd0;
    litepciedma_loopback_next_source_last <= 1'd0;
    litepciedma_loopback_next_source_payload_data <= 64'd0;
    litepciedma_loopback_next_source_valid <= 1'd0;
    litepciedma_loopback_sink_ready <= 1'd0;
    litepciedma_loopback_source_first <= 1'd0;
    litepciedma_loopback_source_last <= 1'd0;
    litepciedma_loopback_source_payload_data <= 64'd0;
    litepciedma_loopback_source_valid <= 1'd0;
    if (litepciedma_loopback_storage) begin
        litepciedma_loopback_source_valid <= litepciedma_loopback_sink_valid;
        litepciedma_loopback_sink_ready <= litepciedma_loopback_source_ready;
        litepciedma_loopback_source_first <= litepciedma_loopback_sink_first;
        litepciedma_loopback_source_last <= litepciedma_loopback_sink_last;
        litepciedma_loopback_source_payload_data <= litepciedma_loopback_sink_payload_data;
    end else begin
        litepciedma_loopback_next_source_valid <= litepciedma_loopback_sink_valid;
        litepciedma_loopback_sink_ready <= litepciedma_loopback_next_source_ready;
        litepciedma_loopback_next_source_first <= litepciedma_loopback_sink_first;
        litepciedma_loopback_next_source_last <= litepciedma_loopback_sink_last;
        litepciedma_loopback_next_source_payload_data <= litepciedma_loopback_sink_payload_data;
        litepciedma_loopback_source_valid <= litepciedma_loopback_next_sink_valid;
        litepciedma_loopback_next_sink_ready <= litepciedma_loopback_source_ready;
        litepciedma_loopback_source_first <= litepciedma_loopback_next_sink_first;
        litepciedma_loopback_source_last <= litepciedma_loopback_next_sink_last;
        litepciedma_loopback_source_payload_data <= litepciedma_loopback_next_sink_payload_data;
    end
end
always @(*) begin
    litepciedma_synchronizer_next_sink_ready <= 1'd0;
    litepciedma_synchronizer_next_source_first <= 1'd0;
    litepciedma_synchronizer_next_source_last <= 1'd0;
    litepciedma_synchronizer_next_source_payload_data <= 64'd0;
    litepciedma_synchronizer_next_source_valid <= 1'd0;
    litepciedma_synchronizer_sink_ready <= 1'd0;
    litepciedma_synchronizer_source_first <= 1'd0;
    litepciedma_synchronizer_source_last <= 1'd0;
    litepciedma_synchronizer_source_payload_data <= 64'd0;
    litepciedma_synchronizer_source_valid <= 1'd0;
    if (litepciedma_synchronizer_synced) begin
        litepciedma_synchronizer_next_source_valid <= litepciedma_synchronizer_sink_valid;
        litepciedma_synchronizer_sink_ready <= litepciedma_synchronizer_next_source_ready;
        litepciedma_synchronizer_next_source_first <= litepciedma_synchronizer_sink_first;
        litepciedma_synchronizer_next_source_last <= litepciedma_synchronizer_sink_last;
        litepciedma_synchronizer_next_source_payload_data <= litepciedma_synchronizer_sink_payload_data;
        litepciedma_synchronizer_source_valid <= litepciedma_synchronizer_next_sink_valid;
        litepciedma_synchronizer_next_sink_ready <= litepciedma_synchronizer_source_ready;
        litepciedma_synchronizer_source_first <= litepciedma_synchronizer_next_sink_first;
        litepciedma_synchronizer_source_last <= litepciedma_synchronizer_next_sink_last;
        litepciedma_synchronizer_source_payload_data <= litepciedma_synchronizer_next_sink_payload_data;
    end else begin
        litepciedma_synchronizer_next_source_valid <= 1'd0;
        litepciedma_synchronizer_sink_ready <= 1'd0;
        litepciedma_synchronizer_source_valid <= 1'd0;
        litepciedma_synchronizer_next_sink_ready <= 1'd1;
    end
end
assign litepciedma_buffering_reader_fifo_sink_first = litepciedma_buffering_sink_sink_first;
assign litepciedma_buffering_reader_fifo_sink_last = litepciedma_buffering_sink_sink_last;
assign litepciedma_buffering_reader_fifo_sink_payload_data = litepciedma_buffering_sink_sink_payload_data;
always @(*) begin
    litepciedma_buffering_reader_fifo_sink_valid <= 1'd0;
    litepciedma_buffering_sink_sink_ready <= 1'd0;
    if (((litepciedma_buffering_reader_fifo_level1 < litepciedma_buffering_csrfield_depth0[23:3]) | 1'd0)) begin
        litepciedma_buffering_reader_fifo_sink_valid <= litepciedma_buffering_sink_sink_valid;
        litepciedma_buffering_sink_sink_ready <= litepciedma_buffering_reader_fifo_sink_ready;
    end
end
assign litepciedma_buffering_next_source_valid = litepciedma_buffering_reader_fifo_source_valid;
assign litepciedma_buffering_reader_fifo_source_ready = litepciedma_buffering_next_source_ready;
assign litepciedma_buffering_next_source_first = litepciedma_buffering_reader_fifo_source_first;
assign litepciedma_buffering_next_source_last = litepciedma_buffering_reader_fifo_source_last;
assign litepciedma_buffering_next_source_payload_data = litepciedma_buffering_reader_fifo_source_payload_data;
always @(*) begin
    litepciedma_buffering_csrfield_level0 <= 24'd0;
    if ((litepciedma_buffering_csrfield_level_mode0 == 1'd0)) begin
        litepciedma_buffering_csrfield_level0[23:3] <= litepciedma_buffering_reader_fifo_level1;
    end else begin
        litepciedma_buffering_csrfield_level0[23:3] <= litepciedma_buffering_reader_fifo_level_min;
    end
end
assign litepciedma_buffering_writer_fifo_sink_first = litepciedma_buffering_next_sink_first;
assign litepciedma_buffering_writer_fifo_sink_last = litepciedma_buffering_next_sink_last;
assign litepciedma_buffering_writer_fifo_sink_payload_data = litepciedma_buffering_next_sink_payload_data;
always @(*) begin
    litepciedma_buffering_next_sink_ready <= 1'd0;
    litepciedma_buffering_writer_fifo_sink_valid <= 1'd0;
    if (((litepciedma_buffering_writer_fifo_level1 < litepciedma_buffering_csrfield_depth1[23:3]) | 1'd0)) begin
        litepciedma_buffering_writer_fifo_sink_valid <= litepciedma_buffering_next_sink_valid;
        litepciedma_buffering_next_sink_ready <= litepciedma_buffering_writer_fifo_sink_ready;
    end
end
assign litepciedma_buffering_source_source_valid = litepciedma_buffering_writer_fifo_source_valid;
assign litepciedma_buffering_writer_fifo_source_ready = litepciedma_buffering_source_source_ready;
assign litepciedma_buffering_source_source_first = litepciedma_buffering_writer_fifo_source_first;
assign litepciedma_buffering_source_source_last = litepciedma_buffering_writer_fifo_source_last;
assign litepciedma_buffering_source_source_payload_data = litepciedma_buffering_writer_fifo_source_payload_data;
always @(*) begin
    litepciedma_buffering_csrfield_level1 <= 24'd0;
    if ((litepciedma_buffering_csrfield_level_mode1 == 1'd0)) begin
        litepciedma_buffering_csrfield_level1[23:3] <= litepciedma_buffering_writer_fifo_level1;
    end else begin
        litepciedma_buffering_csrfield_level1[23:3] <= litepciedma_buffering_writer_fifo_level_max;
    end
end
assign litepciedma_buffering_reader_fifo_syncfifo_din = {litepciedma_buffering_reader_fifo_fifo_in_last, litepciedma_buffering_reader_fifo_fifo_in_first, litepciedma_buffering_reader_fifo_fifo_in_payload_data};
assign {litepciedma_buffering_reader_fifo_fifo_out_last, litepciedma_buffering_reader_fifo_fifo_out_first, litepciedma_buffering_reader_fifo_fifo_out_payload_data} = litepciedma_buffering_reader_fifo_syncfifo_dout;
assign litepciedma_buffering_reader_fifo_sink_ready = litepciedma_buffering_reader_fifo_syncfifo_writable;
assign litepciedma_buffering_reader_fifo_syncfifo_we = litepciedma_buffering_reader_fifo_sink_valid;
assign litepciedma_buffering_reader_fifo_fifo_in_first = litepciedma_buffering_reader_fifo_sink_first;
assign litepciedma_buffering_reader_fifo_fifo_in_last = litepciedma_buffering_reader_fifo_sink_last;
assign litepciedma_buffering_reader_fifo_fifo_in_payload_data = litepciedma_buffering_reader_fifo_sink_payload_data;
assign litepciedma_buffering_reader_fifo_source_valid = litepciedma_buffering_reader_fifo_readable;
assign litepciedma_buffering_reader_fifo_source_first = litepciedma_buffering_reader_fifo_fifo_out_first;
assign litepciedma_buffering_reader_fifo_source_last = litepciedma_buffering_reader_fifo_fifo_out_last;
assign litepciedma_buffering_reader_fifo_source_payload_data = litepciedma_buffering_reader_fifo_fifo_out_payload_data;
assign litepciedma_buffering_reader_fifo_re = litepciedma_buffering_reader_fifo_source_ready;
assign litepciedma_buffering_reader_fifo_syncfifo_re = (litepciedma_buffering_reader_fifo_syncfifo_readable & ((~litepciedma_buffering_reader_fifo_readable) | litepciedma_buffering_reader_fifo_re));
assign litepciedma_buffering_reader_fifo_level1 = (litepciedma_buffering_reader_fifo_level0 + litepciedma_buffering_reader_fifo_readable);
always @(*) begin
    litepciedma_buffering_reader_fifo_wrport_adr <= 10'd0;
    if (litepciedma_buffering_reader_fifo_replace) begin
        litepciedma_buffering_reader_fifo_wrport_adr <= (litepciedma_buffering_reader_fifo_produce - 1'd1);
    end else begin
        litepciedma_buffering_reader_fifo_wrport_adr <= litepciedma_buffering_reader_fifo_produce;
    end
end
assign litepciedma_buffering_reader_fifo_wrport_dat_w = litepciedma_buffering_reader_fifo_syncfifo_din;
assign litepciedma_buffering_reader_fifo_wrport_we = (litepciedma_buffering_reader_fifo_syncfifo_we & (litepciedma_buffering_reader_fifo_syncfifo_writable | litepciedma_buffering_reader_fifo_replace));
assign litepciedma_buffering_reader_fifo_do_read = (litepciedma_buffering_reader_fifo_syncfifo_readable & litepciedma_buffering_reader_fifo_syncfifo_re);
assign litepciedma_buffering_reader_fifo_rdport_adr = litepciedma_buffering_reader_fifo_consume;
assign litepciedma_buffering_reader_fifo_syncfifo_dout = litepciedma_buffering_reader_fifo_rdport_dat_r;
assign litepciedma_buffering_reader_fifo_rdport_re = litepciedma_buffering_reader_fifo_do_read;
assign litepciedma_buffering_reader_fifo_syncfifo_writable = (litepciedma_buffering_reader_fifo_level0 != 11'd1024);
assign litepciedma_buffering_reader_fifo_syncfifo_readable = (litepciedma_buffering_reader_fifo_level0 != 1'd0);
assign litepciedma_buffering_writer_fifo_syncfifo_din = {litepciedma_buffering_writer_fifo_fifo_in_last, litepciedma_buffering_writer_fifo_fifo_in_first, litepciedma_buffering_writer_fifo_fifo_in_payload_data};
assign {litepciedma_buffering_writer_fifo_fifo_out_last, litepciedma_buffering_writer_fifo_fifo_out_first, litepciedma_buffering_writer_fifo_fifo_out_payload_data} = litepciedma_buffering_writer_fifo_syncfifo_dout;
assign litepciedma_buffering_writer_fifo_sink_ready = litepciedma_buffering_writer_fifo_syncfifo_writable;
assign litepciedma_buffering_writer_fifo_syncfifo_we = litepciedma_buffering_writer_fifo_sink_valid;
assign litepciedma_buffering_writer_fifo_fifo_in_first = litepciedma_buffering_writer_fifo_sink_first;
assign litepciedma_buffering_writer_fifo_fifo_in_last = litepciedma_buffering_writer_fifo_sink_last;
assign litepciedma_buffering_writer_fifo_fifo_in_payload_data = litepciedma_buffering_writer_fifo_sink_payload_data;
assign litepciedma_buffering_writer_fifo_source_valid = litepciedma_buffering_writer_fifo_readable;
assign litepciedma_buffering_writer_fifo_source_first = litepciedma_buffering_writer_fifo_fifo_out_first;
assign litepciedma_buffering_writer_fifo_source_last = litepciedma_buffering_writer_fifo_fifo_out_last;
assign litepciedma_buffering_writer_fifo_source_payload_data = litepciedma_buffering_writer_fifo_fifo_out_payload_data;
assign litepciedma_buffering_writer_fifo_re = litepciedma_buffering_writer_fifo_source_ready;
assign litepciedma_buffering_writer_fifo_syncfifo_re = (litepciedma_buffering_writer_fifo_syncfifo_readable & ((~litepciedma_buffering_writer_fifo_readable) | litepciedma_buffering_writer_fifo_re));
assign litepciedma_buffering_writer_fifo_level1 = (litepciedma_buffering_writer_fifo_level0 + litepciedma_buffering_writer_fifo_readable);
always @(*) begin
    litepciedma_buffering_writer_fifo_wrport_adr <= 10'd0;
    if (litepciedma_buffering_writer_fifo_replace) begin
        litepciedma_buffering_writer_fifo_wrport_adr <= (litepciedma_buffering_writer_fifo_produce - 1'd1);
    end else begin
        litepciedma_buffering_writer_fifo_wrport_adr <= litepciedma_buffering_writer_fifo_produce;
    end
end
assign litepciedma_buffering_writer_fifo_wrport_dat_w = litepciedma_buffering_writer_fifo_syncfifo_din;
assign litepciedma_buffering_writer_fifo_wrport_we = (litepciedma_buffering_writer_fifo_syncfifo_we & (litepciedma_buffering_writer_fifo_syncfifo_writable | litepciedma_buffering_writer_fifo_replace));
assign litepciedma_buffering_writer_fifo_do_read = (litepciedma_buffering_writer_fifo_syncfifo_readable & litepciedma_buffering_writer_fifo_syncfifo_re);
assign litepciedma_buffering_writer_fifo_rdport_adr = litepciedma_buffering_writer_fifo_consume;
assign litepciedma_buffering_writer_fifo_syncfifo_dout = litepciedma_buffering_writer_fifo_rdport_dat_r;
assign litepciedma_buffering_writer_fifo_rdport_re = litepciedma_buffering_writer_fifo_do_read;
assign litepciedma_buffering_writer_fifo_syncfifo_writable = (litepciedma_buffering_writer_fifo_level0 != 11'd1024);
assign litepciedma_buffering_writer_fifo_syncfifo_readable = (litepciedma_buffering_writer_fifo_level0 != 1'd0);
assign litepciedma_writer_monitor_reset1 = (litepciedma_writer_monitor_reset_reset_re | litepciedma_writer_monitor_reset0);
assign litepciedma_writer_monitor_latch1 = (litepciedma_writer_monitor_latch_latch_re | litepciedma_writer_monitor_latch0);
assign litepciedma_reader_monitor_reset1 = (litepciedma_reader_monitor_reset_reset_re | litepciedma_reader_monitor_reset0);
assign litepciedma_reader_monitor_latch1 = (litepciedma_reader_monitor_latch_latch_re | litepciedma_reader_monitor_latch0);
assign bufferizeendpoints0_pipe_valid_sink_ready = ((~bufferizeendpoints0_pipe_valid_source_valid) | bufferizeendpoints0_pipe_valid_source_ready);
assign bufferizeendpoints0_pipe_valid_sink_valid = bufferizeendpoints0_sink_sink_valid;
assign bufferizeendpoints0_sink_sink_ready = bufferizeendpoints0_pipe_valid_sink_ready;
assign bufferizeendpoints0_pipe_valid_sink_first = bufferizeendpoints0_sink_sink_first;
assign bufferizeendpoints0_pipe_valid_sink_last = bufferizeendpoints0_sink_sink_last;
assign bufferizeendpoints0_pipe_valid_sink_payload_data = bufferizeendpoints0_sink_sink_payload_data;
assign bufferizeendpoints0_source_source_valid = bufferizeendpoints0_pipe_valid_source_valid;
assign bufferizeendpoints0_pipe_valid_source_ready = bufferizeendpoints0_source_source_ready;
assign bufferizeendpoints0_source_source_first = bufferizeendpoints0_pipe_valid_source_first;
assign bufferizeendpoints0_source_source_last = bufferizeendpoints0_pipe_valid_source_last;
assign bufferizeendpoints0_source_source_payload_data = bufferizeendpoints0_pipe_valid_source_payload_data;
assign bufferizeendpoints1_pipe_valid_sink_ready = ((~bufferizeendpoints1_pipe_valid_source_valid) | bufferizeendpoints1_pipe_valid_source_ready);
assign bufferizeendpoints1_pipe_valid_sink_valid = bufferizeendpoints1_sink_sink_valid;
assign bufferizeendpoints1_sink_sink_ready = bufferizeendpoints1_pipe_valid_sink_ready;
assign bufferizeendpoints1_pipe_valid_sink_first = bufferizeendpoints1_sink_sink_first;
assign bufferizeendpoints1_pipe_valid_sink_last = bufferizeendpoints1_sink_sink_last;
assign bufferizeendpoints1_pipe_valid_sink_payload_data = bufferizeendpoints1_sink_sink_payload_data;
assign bufferizeendpoints1_source_source_valid = bufferizeendpoints1_pipe_valid_source_valid;
assign bufferizeendpoints1_pipe_valid_source_ready = bufferizeendpoints1_source_source_ready;
assign bufferizeendpoints1_source_source_first = bufferizeendpoints1_pipe_valid_source_first;
assign bufferizeendpoints1_source_source_last = bufferizeendpoints1_pipe_valid_source_last;
assign bufferizeendpoints1_source_source_payload_data = bufferizeendpoints1_pipe_valid_source_payload_data;
assign pcie_msi_enable = pcie_msi_enable_storage;
assign pcie_msi_pba_status = pcie_msi_vector;
always @(*) begin
    pcie_msi_clear <= 64'd0;
    pcie_msi_msix_num <= 6'd0;
    pcie_msi_msix_valid <= 1'd0;
    if (pcie_msi_vector[63]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 6'd63;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 64'd9223372036854775808;
        end
    end
    if (pcie_msi_vector[62]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 6'd62;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 63'd4611686018427387904;
        end
    end
    if (pcie_msi_vector[61]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 6'd61;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 62'd2305843009213693952;
        end
    end
    if (pcie_msi_vector[60]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 6'd60;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 61'd1152921504606846976;
        end
    end
    if (pcie_msi_vector[59]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 6'd59;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 60'd576460752303423488;
        end
    end
    if (pcie_msi_vector[58]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 6'd58;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 59'd288230376151711744;
        end
    end
    if (pcie_msi_vector[57]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 6'd57;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 58'd144115188075855872;
        end
    end
    if (pcie_msi_vector[56]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 6'd56;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 57'd72057594037927936;
        end
    end
    if (pcie_msi_vector[55]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 6'd55;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 56'd36028797018963968;
        end
    end
    if (pcie_msi_vector[54]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 6'd54;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 55'd18014398509481984;
        end
    end
    if (pcie_msi_vector[53]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 6'd53;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 54'd9007199254740992;
        end
    end
    if (pcie_msi_vector[52]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 6'd52;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 53'd4503599627370496;
        end
    end
    if (pcie_msi_vector[51]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 6'd51;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 52'd2251799813685248;
        end
    end
    if (pcie_msi_vector[50]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 6'd50;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 51'd1125899906842624;
        end
    end
    if (pcie_msi_vector[49]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 6'd49;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 50'd562949953421312;
        end
    end
    if (pcie_msi_vector[48]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 6'd48;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 49'd281474976710656;
        end
    end
    if (pcie_msi_vector[47]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 6'd47;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 48'd140737488355328;
        end
    end
    if (pcie_msi_vector[46]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 6'd46;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 47'd70368744177664;
        end
    end
    if (pcie_msi_vector[45]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 6'd45;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 46'd35184372088832;
        end
    end
    if (pcie_msi_vector[44]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 6'd44;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 45'd17592186044416;
        end
    end
    if (pcie_msi_vector[43]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 6'd43;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 44'd8796093022208;
        end
    end
    if (pcie_msi_vector[42]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 6'd42;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 43'd4398046511104;
        end
    end
    if (pcie_msi_vector[41]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 6'd41;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 42'd2199023255552;
        end
    end
    if (pcie_msi_vector[40]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 6'd40;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 41'd1099511627776;
        end
    end
    if (pcie_msi_vector[39]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 6'd39;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 40'd549755813888;
        end
    end
    if (pcie_msi_vector[38]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 6'd38;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 39'd274877906944;
        end
    end
    if (pcie_msi_vector[37]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 6'd37;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 38'd137438953472;
        end
    end
    if (pcie_msi_vector[36]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 6'd36;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 37'd68719476736;
        end
    end
    if (pcie_msi_vector[35]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 6'd35;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 36'd34359738368;
        end
    end
    if (pcie_msi_vector[34]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 6'd34;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 35'd17179869184;
        end
    end
    if (pcie_msi_vector[33]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 6'd33;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 34'd8589934592;
        end
    end
    if (pcie_msi_vector[32]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 6'd32;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 33'd4294967296;
        end
    end
    if (pcie_msi_vector[31]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 5'd31;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 32'd2147483648;
        end
    end
    if (pcie_msi_vector[30]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 5'd30;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 31'd1073741824;
        end
    end
    if (pcie_msi_vector[29]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 5'd29;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 30'd536870912;
        end
    end
    if (pcie_msi_vector[28]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 5'd28;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 29'd268435456;
        end
    end
    if (pcie_msi_vector[27]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 5'd27;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 28'd134217728;
        end
    end
    if (pcie_msi_vector[26]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 5'd26;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 27'd67108864;
        end
    end
    if (pcie_msi_vector[25]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 5'd25;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 26'd33554432;
        end
    end
    if (pcie_msi_vector[24]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 5'd24;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 25'd16777216;
        end
    end
    if (pcie_msi_vector[23]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 5'd23;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 24'd8388608;
        end
    end
    if (pcie_msi_vector[22]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 5'd22;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 23'd4194304;
        end
    end
    if (pcie_msi_vector[21]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 5'd21;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 22'd2097152;
        end
    end
    if (pcie_msi_vector[20]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 5'd20;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 21'd1048576;
        end
    end
    if (pcie_msi_vector[19]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 5'd19;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 20'd524288;
        end
    end
    if (pcie_msi_vector[18]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 5'd18;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 19'd262144;
        end
    end
    if (pcie_msi_vector[17]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 5'd17;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 18'd131072;
        end
    end
    if (pcie_msi_vector[16]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 5'd16;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 17'd65536;
        end
    end
    if (pcie_msi_vector[15]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 4'd15;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 16'd32768;
        end
    end
    if (pcie_msi_vector[14]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 4'd14;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 15'd16384;
        end
    end
    if (pcie_msi_vector[13]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 4'd13;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 14'd8192;
        end
    end
    if (pcie_msi_vector[12]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 4'd12;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 13'd4096;
        end
    end
    if (pcie_msi_vector[11]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 4'd11;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 12'd2048;
        end
    end
    if (pcie_msi_vector[10]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 4'd10;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 11'd1024;
        end
    end
    if (pcie_msi_vector[9]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 4'd9;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 10'd512;
        end
    end
    if (pcie_msi_vector[8]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 4'd8;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 9'd256;
        end
    end
    if (pcie_msi_vector[7]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 3'd7;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 8'd128;
        end
    end
    if (pcie_msi_vector[6]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 3'd6;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 7'd64;
        end
    end
    if (pcie_msi_vector[5]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 3'd5;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 6'd32;
        end
    end
    if (pcie_msi_vector[4]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 3'd4;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 5'd16;
        end
    end
    if (pcie_msi_vector[3]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 2'd3;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 4'd8;
        end
    end
    if (pcie_msi_vector[2]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 2'd2;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 3'd4;
        end
    end
    if (pcie_msi_vector[1]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 1'd1;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 2'd2;
        end
    end
    if (pcie_msi_vector[0]) begin
        pcie_msi_msix_valid <= 1'd1;
        pcie_msi_msix_num <= 1'd0;
        if (pcie_msi_msix_ready) begin
            pcie_msi_clear <= 1'd1;
        end
    end
end
assign pcie_msi_sink_payload_channel = 2'd3;
assign pcie_msi_sink_first = 1'd1;
assign pcie_msi_sink_last = 1'd1;
assign pcie_msi_sink_payload_adr = pcie_msi_table_port_dat_r[127:96];
assign pcie_msi_sink_payload_req_id = s7pciephy_id;
assign pcie_msi_sink_payload_tag = 1'd0;
assign pcie_msi_sink_payload_len = 1'd1;
assign pcie_msi_sink_payload_dat = pcie_msi_table_port_dat_r[63:32];
always @(*) begin
    litepciecore_litepciemsix_next_state <= 1'd0;
    pcie_msi_msix_ready <= 1'd0;
    pcie_msi_sink_payload_we <= 1'd0;
    pcie_msi_sink_valid <= 1'd0;
    pcie_msi_table_port_adr <= 6'd0;
    pcie_msi_table_port_re <= 1'd0;
    litepciecore_litepciemsix_next_state <= litepciecore_litepciemsix_state;
    case (litepciecore_litepciemsix_state)
        1'd1: begin
            pcie_msi_sink_valid <= 1'd1;
            pcie_msi_sink_payload_we <= 1'd1;
            if (pcie_msi_sink_ready) begin
                pcie_msi_msix_ready <= 1'd1;
                litepciecore_litepciemsix_next_state <= 1'd0;
            end
        end
        default: begin
            pcie_msi_table_port_adr <= pcie_msi_msix_num;
            pcie_msi_table_port_re <= 1'd1;
            if (pcie_msi_msix_valid) begin
                litepciecore_litepciemsix_next_state <= 1'd1;
            end
        end
    endcase
end
assign sniffer_clk = sniffer_clk_1;
assign sniffer_rst = (~sniffer_rst_n);
assign pcie_ptm_sniffer_rawdatapath_sink_sink_valid = 1'd1;
assign pcie_ptm_sniffer_rawdatapath_sink_sink_payload_data = sniffer_rx_data;
assign pcie_ptm_sniffer_rawdatapath_sink_sink_payload_ctrl = sniffer_rx_ctl;
assign pcie_ptm_sniffer_rawdescrambler_sink_sink_valid = pcie_ptm_sniffer_rawdatapath_source_source_valid;
assign pcie_ptm_sniffer_rawdatapath_source_source_ready = pcie_ptm_sniffer_rawdescrambler_sink_sink_ready;
assign pcie_ptm_sniffer_rawdescrambler_sink_sink_first = pcie_ptm_sniffer_rawdatapath_source_source_first;
assign pcie_ptm_sniffer_rawdescrambler_sink_sink_last = pcie_ptm_sniffer_rawdatapath_source_source_last;
assign pcie_ptm_sniffer_rawdescrambler_sink_sink_payload_data = pcie_ptm_sniffer_rawdatapath_source_source_payload_data;
assign pcie_ptm_sniffer_rawdescrambler_sink_sink_payload_ctrl = pcie_ptm_sniffer_rawdatapath_source_source_payload_ctrl;
assign pcie_ptm_sniffer_litepcietlpdepacketizer_sink_sink_valid = pcie_ptm_sniffer_tlpfilterformater_source_source_valid;
assign pcie_ptm_sniffer_tlpfilterformater_source_source_ready = pcie_ptm_sniffer_litepcietlpdepacketizer_sink_sink_ready;
assign pcie_ptm_sniffer_litepcietlpdepacketizer_sink_sink_first = pcie_ptm_sniffer_tlpfilterformater_source_source_first;
assign pcie_ptm_sniffer_litepcietlpdepacketizer_sink_sink_last = pcie_ptm_sniffer_tlpfilterformater_source_source_last;
assign pcie_ptm_sniffer_litepcietlpdepacketizer_sink_sink_payload_dat = pcie_ptm_sniffer_tlpfilterformater_source_source_payload_dat;
assign pcie_ptm_sniffer_litepcietlpdepacketizer_sink_sink_payload_be = pcie_ptm_sniffer_tlpfilterformater_source_source_payload_be;
assign pcie_ptm_sniffer_cdc_sink_sink_valid = pcie_ptm_sniffer_litepcietlpdepacketizer_ptm_source_valid;
assign pcie_ptm_sniffer_litepcietlpdepacketizer_ptm_source_ready = pcie_ptm_sniffer_cdc_sink_sink_ready;
assign pcie_ptm_sniffer_cdc_sink_sink_payload_message_code = pcie_ptm_sniffer_litepcietlpdepacketizer_ptm_source_payload_message_code;
always @(*) begin
    pcie_ptm_sniffer_cdc_sink_sink_payload_master_time <= 64'd0;
    pcie_ptm_sniffer_cdc_sink_sink_payload_master_time <= pcie_ptm_sniffer_litepcietlpdepacketizer_ptm_source_payload_master_time;
    pcie_ptm_sniffer_cdc_sink_sink_payload_master_time[31:0] <= pcie_ptm_sniffer_litepcietlpdepacketizer_ptm_source_payload_master_time[63:32];
    pcie_ptm_sniffer_cdc_sink_sink_payload_master_time[63:32] <= pcie_ptm_sniffer_litepcietlpdepacketizer_ptm_source_payload_master_time[31:0];
end
assign pcie_ptm_sniffer_cdc_sink_sink_payload_link_delay = {rhs_slice_proxy83[7:0], rhs_slice_proxy82[15:8], rhs_slice_proxy81[23:16], rhs_slice_proxy80[31:24]};
assign pcie_ptm_sniffer_source_source_valid = pcie_ptm_sniffer_cdc_source_source_valid;
assign pcie_ptm_sniffer_cdc_source_source_ready = pcie_ptm_sniffer_source_source_ready;
assign pcie_ptm_sniffer_source_source_first = pcie_ptm_sniffer_cdc_source_source_first;
assign pcie_ptm_sniffer_source_source_last = pcie_ptm_sniffer_cdc_source_source_last;
assign pcie_ptm_sniffer_source_source_payload_message_code = pcie_ptm_sniffer_cdc_source_source_payload_message_code;
assign pcie_ptm_sniffer_source_source_payload_master_time = pcie_ptm_sniffer_cdc_source_source_payload_master_time;
assign pcie_ptm_sniffer_source_source_payload_link_delay = pcie_ptm_sniffer_cdc_source_source_payload_link_delay;
assign pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_sink_valid = pcie_ptm_sniffer_rawdatapath_converter_strideconverter_sink_valid;
assign pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_sink_first = pcie_ptm_sniffer_rawdatapath_converter_strideconverter_sink_first;
assign pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_sink_last = pcie_ptm_sniffer_rawdatapath_converter_strideconverter_sink_last;
assign pcie_ptm_sniffer_rawdatapath_converter_strideconverter_sink_ready = pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_sink_ready;
assign pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_sink_payload_data = {pcie_ptm_sniffer_rawdatapath_converter_strideconverter_sink_payload_ctrl, pcie_ptm_sniffer_rawdatapath_converter_strideconverter_sink_payload_data};
assign pcie_ptm_sniffer_rawdatapath_converter_strideconverter_source_valid = pcie_ptm_sniffer_rawdatapath_converter_strideconverter_source_source_valid;
assign pcie_ptm_sniffer_rawdatapath_converter_strideconverter_source_first = pcie_ptm_sniffer_rawdatapath_converter_strideconverter_source_source_first;
assign pcie_ptm_sniffer_rawdatapath_converter_strideconverter_source_last = pcie_ptm_sniffer_rawdatapath_converter_strideconverter_source_source_last;
assign pcie_ptm_sniffer_rawdatapath_converter_strideconverter_source_source_ready = pcie_ptm_sniffer_rawdatapath_converter_strideconverter_source_ready;
always @(*) begin
    pcie_ptm_sniffer_rawdatapath_converter_strideconverter_source_payload_data <= 32'd0;
    pcie_ptm_sniffer_rawdatapath_converter_strideconverter_source_payload_data[15:0] <= pcie_ptm_sniffer_rawdatapath_converter_strideconverter_source_source_payload_data[15:0];
    pcie_ptm_sniffer_rawdatapath_converter_strideconverter_source_payload_data[31:16] <= pcie_ptm_sniffer_rawdatapath_converter_strideconverter_source_source_payload_data[33:18];
end
always @(*) begin
    pcie_ptm_sniffer_rawdatapath_converter_strideconverter_source_payload_ctrl <= 4'd0;
    pcie_ptm_sniffer_rawdatapath_converter_strideconverter_source_payload_ctrl[1:0] <= pcie_ptm_sniffer_rawdatapath_converter_strideconverter_source_source_payload_data[17:16];
    pcie_ptm_sniffer_rawdatapath_converter_strideconverter_source_payload_ctrl[3:2] <= pcie_ptm_sniffer_rawdatapath_converter_strideconverter_source_source_payload_data[35:34];
end
assign pcie_ptm_sniffer_rawdatapath_converter_strideconverter_sink_valid = pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_source_source_valid;
assign pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_source_source_ready = pcie_ptm_sniffer_rawdatapath_converter_strideconverter_sink_ready;
assign pcie_ptm_sniffer_rawdatapath_converter_strideconverter_sink_first = pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_source_source_first;
assign pcie_ptm_sniffer_rawdatapath_converter_strideconverter_sink_last = pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_source_source_last;
assign pcie_ptm_sniffer_rawdatapath_converter_strideconverter_sink_payload_data = pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_source_source_payload_data;
assign pcie_ptm_sniffer_rawdatapath_converter_strideconverter_sink_payload_ctrl = pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_source_source_payload_ctrl;
assign pcie_ptm_sniffer_rawdatapath_converter_strideconverter_source_source_valid = pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_source_valid;
assign pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_source_ready = pcie_ptm_sniffer_rawdatapath_converter_strideconverter_source_source_ready;
assign pcie_ptm_sniffer_rawdatapath_converter_strideconverter_source_source_first = pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_source_first;
assign pcie_ptm_sniffer_rawdatapath_converter_strideconverter_source_source_last = pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_source_last;
assign pcie_ptm_sniffer_rawdatapath_converter_strideconverter_source_source_payload_data = pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_source_payload_data;
assign pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_sink_ready = ((~pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_strobe_all) | pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_source_ready);
assign pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_source_valid = pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_strobe_all;
assign pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_load_part = (pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_sink_valid & pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_sink_ready);
assign pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_pipe_valid_sink_ready = ((~pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_pipe_valid_source_valid) | pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_pipe_valid_source_ready);
assign pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_pipe_valid_sink_valid = pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_sink_sink_valid;
assign pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_sink_sink_ready = pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_pipe_valid_sink_ready;
assign pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_pipe_valid_sink_first = pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_sink_sink_first;
assign pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_pipe_valid_sink_last = pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_sink_sink_last;
assign pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_pipe_valid_sink_payload_data = pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_sink_sink_payload_data;
assign pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_pipe_valid_sink_payload_ctrl = pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_sink_sink_payload_ctrl;
assign pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_source_source_valid = pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_pipe_valid_source_valid;
assign pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_pipe_valid_source_ready = pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_source_source_ready;
assign pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_source_source_first = pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_pipe_valid_source_first;
assign pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_source_source_last = pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_pipe_valid_source_last;
assign pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_source_source_payload_data = pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_pipe_valid_source_payload_data;
assign pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_source_source_payload_ctrl = pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_pipe_valid_source_payload_ctrl;
assign pcie_ptm_sniffer_rawdatapath_cdc_asyncfifo_din = {pcie_ptm_sniffer_rawdatapath_cdc_fifo_in_last, pcie_ptm_sniffer_rawdatapath_cdc_fifo_in_first, pcie_ptm_sniffer_rawdatapath_cdc_fifo_in_payload_ctrl, pcie_ptm_sniffer_rawdatapath_cdc_fifo_in_payload_data};
assign {pcie_ptm_sniffer_rawdatapath_cdc_fifo_out_last, pcie_ptm_sniffer_rawdatapath_cdc_fifo_out_first, pcie_ptm_sniffer_rawdatapath_cdc_fifo_out_payload_ctrl, pcie_ptm_sniffer_rawdatapath_cdc_fifo_out_payload_data} = pcie_ptm_sniffer_rawdatapath_cdc_dout;
assign pcie_ptm_sniffer_rawdatapath_cdc_sink_ready = pcie_ptm_sniffer_rawdatapath_cdc_asyncfifo_writable;
assign pcie_ptm_sniffer_rawdatapath_cdc_asyncfifo_we = pcie_ptm_sniffer_rawdatapath_cdc_sink_valid;
assign pcie_ptm_sniffer_rawdatapath_cdc_fifo_in_first = pcie_ptm_sniffer_rawdatapath_cdc_sink_first;
assign pcie_ptm_sniffer_rawdatapath_cdc_fifo_in_last = pcie_ptm_sniffer_rawdatapath_cdc_sink_last;
assign pcie_ptm_sniffer_rawdatapath_cdc_fifo_in_payload_data = pcie_ptm_sniffer_rawdatapath_cdc_sink_payload_data;
assign pcie_ptm_sniffer_rawdatapath_cdc_fifo_in_payload_ctrl = pcie_ptm_sniffer_rawdatapath_cdc_sink_payload_ctrl;
assign pcie_ptm_sniffer_rawdatapath_cdc_source_valid = pcie_ptm_sniffer_rawdatapath_cdc_readable;
assign pcie_ptm_sniffer_rawdatapath_cdc_source_first = pcie_ptm_sniffer_rawdatapath_cdc_fifo_out_first;
assign pcie_ptm_sniffer_rawdatapath_cdc_source_last = pcie_ptm_sniffer_rawdatapath_cdc_fifo_out_last;
assign pcie_ptm_sniffer_rawdatapath_cdc_source_payload_data = pcie_ptm_sniffer_rawdatapath_cdc_fifo_out_payload_data;
assign pcie_ptm_sniffer_rawdatapath_cdc_source_payload_ctrl = pcie_ptm_sniffer_rawdatapath_cdc_fifo_out_payload_ctrl;
assign pcie_ptm_sniffer_rawdatapath_cdc_re = pcie_ptm_sniffer_rawdatapath_cdc_source_ready;
assign pcie_ptm_sniffer_rawdatapath_cdc_asyncfifo_re = (pcie_ptm_sniffer_rawdatapath_cdc_re | (~pcie_ptm_sniffer_rawdatapath_cdc_readable));
assign pcie_ptm_sniffer_rawdatapath_cdc_graycounter0_ce = (pcie_ptm_sniffer_rawdatapath_cdc_asyncfifo_writable & pcie_ptm_sniffer_rawdatapath_cdc_asyncfifo_we);
assign pcie_ptm_sniffer_rawdatapath_cdc_graycounter1_ce = (pcie_ptm_sniffer_rawdatapath_cdc_asyncfifo_readable & pcie_ptm_sniffer_rawdatapath_cdc_asyncfifo_re);
assign pcie_ptm_sniffer_rawdatapath_cdc_asyncfifo_writable = (((pcie_ptm_sniffer_rawdatapath_cdc_graycounter0_q[3] == pcie_ptm_sniffer_rawdatapath_cdc_consume_wdomain[3]) | (pcie_ptm_sniffer_rawdatapath_cdc_graycounter0_q[2] == pcie_ptm_sniffer_rawdatapath_cdc_consume_wdomain[2])) | (pcie_ptm_sniffer_rawdatapath_cdc_graycounter0_q[1:0] != pcie_ptm_sniffer_rawdatapath_cdc_consume_wdomain[1:0]));
assign pcie_ptm_sniffer_rawdatapath_cdc_asyncfifo_readable = (pcie_ptm_sniffer_rawdatapath_cdc_graycounter1_q != pcie_ptm_sniffer_rawdatapath_cdc_produce_rdomain);
assign pcie_ptm_sniffer_rawdatapath_cdc_wrport_adr = pcie_ptm_sniffer_rawdatapath_cdc_graycounter0_q_binary[2:0];
assign pcie_ptm_sniffer_rawdatapath_cdc_wrport_dat_w = pcie_ptm_sniffer_rawdatapath_cdc_asyncfifo_din;
assign pcie_ptm_sniffer_rawdatapath_cdc_wrport_we = pcie_ptm_sniffer_rawdatapath_cdc_graycounter0_ce;
assign pcie_ptm_sniffer_rawdatapath_cdc_rdport_adr = pcie_ptm_sniffer_rawdatapath_cdc_graycounter1_q_next_binary[2:0];
assign pcie_ptm_sniffer_rawdatapath_cdc_asyncfifo_dout = pcie_ptm_sniffer_rawdatapath_cdc_rdport_dat_r;
always @(*) begin
    pcie_ptm_sniffer_rawdatapath_cdc_graycounter0_q_next_binary <= 4'd0;
    if (pcie_ptm_sniffer_rawdatapath_cdc_graycounter0_ce) begin
        pcie_ptm_sniffer_rawdatapath_cdc_graycounter0_q_next_binary <= (pcie_ptm_sniffer_rawdatapath_cdc_graycounter0_q_binary + 1'd1);
    end else begin
        pcie_ptm_sniffer_rawdatapath_cdc_graycounter0_q_next_binary <= pcie_ptm_sniffer_rawdatapath_cdc_graycounter0_q_binary;
    end
end
assign pcie_ptm_sniffer_rawdatapath_cdc_graycounter0_q_next = (pcie_ptm_sniffer_rawdatapath_cdc_graycounter0_q_next_binary ^ pcie_ptm_sniffer_rawdatapath_cdc_graycounter0_q_next_binary[3:1]);
always @(*) begin
    pcie_ptm_sniffer_rawdatapath_cdc_graycounter1_q_next_binary <= 4'd0;
    if (pcie_ptm_sniffer_rawdatapath_cdc_graycounter1_ce) begin
        pcie_ptm_sniffer_rawdatapath_cdc_graycounter1_q_next_binary <= (pcie_ptm_sniffer_rawdatapath_cdc_graycounter1_q_binary + 1'd1);
    end else begin
        pcie_ptm_sniffer_rawdatapath_cdc_graycounter1_q_next_binary <= pcie_ptm_sniffer_rawdatapath_cdc_graycounter1_q_binary;
    end
end
assign pcie_ptm_sniffer_rawdatapath_cdc_graycounter1_q_next = (pcie_ptm_sniffer_rawdatapath_cdc_graycounter1_q_next_binary ^ pcie_ptm_sniffer_rawdatapath_cdc_graycounter1_q_next_binary[3:1]);
assign pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_sink_valid = pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_valid;
assign pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_ready = pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_sink_ready;
assign pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_sink_first = pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_first;
assign pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_sink_last = pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_last;
assign pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_sink_payload_data = pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_payload_data;
assign pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_sink_payload_ctrl = pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_payload_ctrl;
assign pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_source_valid = (pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_valid & pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_source_source_valid);
assign pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_source_source_ready = (pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_valid & pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_source_ready);
always @(*) begin
    pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_alignment <= 2'd0;
    pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_update <= 1'd0;
    if ((pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_valid & pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_ready)) begin
        if ((pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_payload_ctrl[3] & (pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_payload_data[31:24] == 8'd188))) begin
            pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_update <= 1'd1;
            pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_alignment <= 2'd3;
        end
    end
    if ((pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_valid & pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_ready)) begin
        if ((pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_payload_ctrl[2] & (pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_payload_data[23:16] == 8'd188))) begin
            pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_update <= 1'd1;
            pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_alignment <= 2'd2;
        end
    end
    if ((pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_valid & pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_ready)) begin
        if ((pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_payload_ctrl[1] & (pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_payload_data[15:8] == 8'd188))) begin
            pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_update <= 1'd1;
            pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_alignment <= 1'd1;
        end
    end
    if ((pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_valid & pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_ready)) begin
        if ((pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_payload_ctrl[0] & (pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_payload_data[7:0] == 8'd188))) begin
            pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_update <= 1'd1;
            pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_alignment <= 1'd0;
        end
    end
end
always @(*) begin
    pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_source_payload_ctrl <= 4'd0;
    pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_source_payload_data <= 32'd0;
    case (pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_alignment_d)
        1'd0: begin
            pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_source_payload_data <= cases_slice_proxy0[63:0];
            pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_source_payload_ctrl <= cases_slice_proxy1[7:0];
        end
        1'd1: begin
            pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_source_payload_data <= cases_slice_proxy2[63:8];
            pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_source_payload_ctrl <= cases_slice_proxy3[7:1];
        end
        2'd2: begin
            pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_source_payload_data <= cases_slice_proxy4[63:16];
            pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_source_payload_ctrl <= cases_slice_proxy5[7:2];
        end
        2'd3: begin
            pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_source_payload_data <= cases_slice_proxy6[63:24];
            pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_source_payload_ctrl <= cases_slice_proxy7[7:3];
        end
    endcase
end
assign pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_sink_sink_valid = pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_source_valid;
assign pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_source_ready = pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_sink_sink_ready;
assign pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_sink_sink_first = pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_source_first;
assign pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_sink_sink_last = pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_source_last;
assign pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_sink_sink_payload_data = pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_source_payload_data;
assign pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_sink_sink_payload_ctrl = pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_source_payload_ctrl;
assign pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_pipe_valid_sink_ready = ((~pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_pipe_valid_source_valid) | pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_pipe_valid_source_ready);
assign pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_pipe_valid_sink_valid = pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_sink_valid;
assign pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_sink_ready = pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_pipe_valid_sink_ready;
assign pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_pipe_valid_sink_first = pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_sink_first;
assign pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_pipe_valid_sink_last = pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_sink_last;
assign pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_pipe_valid_sink_payload_data = pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_sink_payload_data;
assign pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_pipe_valid_sink_payload_ctrl = pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_sink_payload_ctrl;
assign pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_source_source_valid = pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_pipe_valid_source_valid;
assign pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_pipe_valid_source_ready = pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_source_source_ready;
assign pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_source_source_first = pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_pipe_valid_source_first;
assign pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_source_source_last = pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_pipe_valid_source_last;
assign pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_source_source_payload_data = pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_pipe_valid_source_payload_data;
assign pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_source_source_payload_ctrl = pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_pipe_valid_source_payload_ctrl;
assign pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_pipe_valid_sink_ready = ((~pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_pipe_valid_source_valid) | pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_pipe_valid_source_ready);
assign pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_pipe_valid_sink_valid = pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_sink_sink_valid;
assign pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_sink_sink_ready = pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_pipe_valid_sink_ready;
assign pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_pipe_valid_sink_first = pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_sink_sink_first;
assign pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_pipe_valid_sink_last = pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_sink_sink_last;
assign pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_pipe_valid_sink_payload_data = pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_sink_sink_payload_data;
assign pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_pipe_valid_sink_payload_ctrl = pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_sink_sink_payload_ctrl;
assign pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_source_source_valid = pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_pipe_valid_source_valid;
assign pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_pipe_valid_source_ready = pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_source_source_ready;
assign pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_source_source_first = pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_pipe_valid_source_first;
assign pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_source_source_last = pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_pipe_valid_source_last;
assign pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_source_source_payload_data = pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_pipe_valid_source_payload_data;
assign pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_source_source_payload_ctrl = pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_pipe_valid_source_payload_ctrl;
assign pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_sink_sink_valid = pcie_ptm_sniffer_rawdatapath_sink_sink_valid;
assign pcie_ptm_sniffer_rawdatapath_sink_sink_ready = pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_sink_sink_ready;
assign pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_sink_sink_first = pcie_ptm_sniffer_rawdatapath_sink_sink_first;
assign pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_sink_sink_last = pcie_ptm_sniffer_rawdatapath_sink_sink_last;
assign pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_sink_sink_payload_data = pcie_ptm_sniffer_rawdatapath_sink_sink_payload_data;
assign pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_sink_sink_payload_ctrl = pcie_ptm_sniffer_rawdatapath_sink_sink_payload_ctrl;
assign pcie_ptm_sniffer_rawdatapath_cdc_sink_valid = pcie_ptm_sniffer_rawdatapath_converter_strideconverter_source_valid;
assign pcie_ptm_sniffer_rawdatapath_converter_strideconverter_source_ready = pcie_ptm_sniffer_rawdatapath_cdc_sink_ready;
assign pcie_ptm_sniffer_rawdatapath_cdc_sink_first = pcie_ptm_sniffer_rawdatapath_converter_strideconverter_source_first;
assign pcie_ptm_sniffer_rawdatapath_cdc_sink_last = pcie_ptm_sniffer_rawdatapath_converter_strideconverter_source_last;
assign pcie_ptm_sniffer_rawdatapath_cdc_sink_payload_data = pcie_ptm_sniffer_rawdatapath_converter_strideconverter_source_payload_data;
assign pcie_ptm_sniffer_rawdatapath_cdc_sink_payload_ctrl = pcie_ptm_sniffer_rawdatapath_converter_strideconverter_source_payload_ctrl;
assign pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_valid = pcie_ptm_sniffer_rawdatapath_cdc_source_valid;
assign pcie_ptm_sniffer_rawdatapath_cdc_source_ready = pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_ready;
assign pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_first = pcie_ptm_sniffer_rawdatapath_cdc_source_first;
assign pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_last = pcie_ptm_sniffer_rawdatapath_cdc_source_last;
assign pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_payload_data = pcie_ptm_sniffer_rawdatapath_cdc_source_payload_data;
assign pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_payload_ctrl = pcie_ptm_sniffer_rawdatapath_cdc_source_payload_ctrl;
assign pcie_ptm_sniffer_rawdatapath_source_source_valid = pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_source_source_valid;
assign pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_source_source_ready = pcie_ptm_sniffer_rawdatapath_source_source_ready;
assign pcie_ptm_sniffer_rawdatapath_source_source_first = pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_source_source_first;
assign pcie_ptm_sniffer_rawdatapath_source_source_last = pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_source_source_last;
assign pcie_ptm_sniffer_rawdatapath_source_source_payload_data = pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_source_source_payload_data;
assign pcie_ptm_sniffer_rawdatapath_source_source_payload_ctrl = pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_source_source_payload_ctrl;
assign pcie_ptm_sniffer_rawdescrambler_scrambler_enable = pcie_ptm_sniffer_rawdescrambler_enable;
always @(*) begin
    pcie_ptm_sniffer_rawdescrambler_scrambler_reset <= 1'd0;
    if ((((pcie_ptm_sniffer_rawdescrambler_sink_sink_valid & pcie_ptm_sniffer_rawdescrambler_sink_sink_ready) & (pcie_ptm_sniffer_rawdescrambler_sink_sink_payload_data[7:0] == 8'd188)) & pcie_ptm_sniffer_rawdescrambler_sink_sink_payload_ctrl[0])) begin
        pcie_ptm_sniffer_rawdescrambler_scrambler_reset <= 1'd1;
    end
    if ((((pcie_ptm_sniffer_rawdescrambler_sink_sink_valid & pcie_ptm_sniffer_rawdescrambler_sink_sink_ready) & (pcie_ptm_sniffer_rawdescrambler_sink_sink_payload_data[15:8] == 8'd188)) & pcie_ptm_sniffer_rawdescrambler_sink_sink_payload_ctrl[1])) begin
        pcie_ptm_sniffer_rawdescrambler_scrambler_reset <= 1'd1;
    end
    if ((((pcie_ptm_sniffer_rawdescrambler_sink_sink_valid & pcie_ptm_sniffer_rawdescrambler_sink_sink_ready) & (pcie_ptm_sniffer_rawdescrambler_sink_sink_payload_data[23:16] == 8'd188)) & pcie_ptm_sniffer_rawdescrambler_sink_sink_payload_ctrl[2])) begin
        pcie_ptm_sniffer_rawdescrambler_scrambler_reset <= 1'd1;
    end
    if ((((pcie_ptm_sniffer_rawdescrambler_sink_sink_valid & pcie_ptm_sniffer_rawdescrambler_sink_sink_ready) & (pcie_ptm_sniffer_rawdescrambler_sink_sink_payload_data[31:24] == 8'd188)) & pcie_ptm_sniffer_rawdescrambler_sink_sink_payload_ctrl[3])) begin
        pcie_ptm_sniffer_rawdescrambler_scrambler_reset <= 1'd1;
    end
end
assign pcie_ptm_sniffer_rawdescrambler_scrambler_sink_valid = pcie_ptm_sniffer_rawdescrambler_sink_sink_valid;
assign pcie_ptm_sniffer_rawdescrambler_sink_sink_ready = pcie_ptm_sniffer_rawdescrambler_scrambler_sink_ready;
assign pcie_ptm_sniffer_rawdescrambler_scrambler_sink_first = pcie_ptm_sniffer_rawdescrambler_sink_sink_first;
assign pcie_ptm_sniffer_rawdescrambler_scrambler_sink_last = pcie_ptm_sniffer_rawdescrambler_sink_sink_last;
assign pcie_ptm_sniffer_rawdescrambler_scrambler_sink_payload_data = pcie_ptm_sniffer_rawdescrambler_sink_sink_payload_data;
assign pcie_ptm_sniffer_rawdescrambler_scrambler_sink_payload_ctrl = pcie_ptm_sniffer_rawdescrambler_sink_sink_payload_ctrl;
assign pcie_ptm_sniffer_rawdescrambler_source_source_valid = pcie_ptm_sniffer_rawdescrambler_scrambler_source_valid;
assign pcie_ptm_sniffer_rawdescrambler_scrambler_source_ready = pcie_ptm_sniffer_rawdescrambler_source_source_ready;
assign pcie_ptm_sniffer_rawdescrambler_source_source_first = pcie_ptm_sniffer_rawdescrambler_scrambler_source_first;
assign pcie_ptm_sniffer_rawdescrambler_source_source_last = pcie_ptm_sniffer_rawdescrambler_scrambler_source_last;
assign pcie_ptm_sniffer_rawdescrambler_source_source_payload_data = pcie_ptm_sniffer_rawdescrambler_scrambler_source_payload_data;
assign pcie_ptm_sniffer_rawdescrambler_source_source_payload_ctrl = pcie_ptm_sniffer_rawdescrambler_scrambler_source_payload_ctrl;
assign pcie_ptm_sniffer_rawdescrambler_scrambler_ce = (pcie_ptm_sniffer_rawdescrambler_scrambler_sink_valid & pcie_ptm_sniffer_rawdescrambler_scrambler_sink_ready);
assign pcie_ptm_sniffer_rawdescrambler_scrambler_source_valid = pcie_ptm_sniffer_rawdescrambler_scrambler_sink_valid;
assign pcie_ptm_sniffer_rawdescrambler_scrambler_sink_ready = pcie_ptm_sniffer_rawdescrambler_scrambler_source_ready;
assign pcie_ptm_sniffer_rawdescrambler_scrambler_source_first = pcie_ptm_sniffer_rawdescrambler_scrambler_sink_first;
assign pcie_ptm_sniffer_rawdescrambler_scrambler_source_last = pcie_ptm_sniffer_rawdescrambler_scrambler_sink_last;
assign pcie_ptm_sniffer_rawdescrambler_scrambler_source_payload_ctrl = pcie_ptm_sniffer_rawdescrambler_scrambler_sink_payload_ctrl;
always @(*) begin
    pcie_ptm_sniffer_rawdescrambler_scrambler_source_payload_data <= 32'd0;
    pcie_ptm_sniffer_rawdescrambler_scrambler_source_payload_data <= pcie_ptm_sniffer_rawdescrambler_scrambler_sink_payload_data;
    if (((~pcie_ptm_sniffer_rawdescrambler_scrambler_enable) | pcie_ptm_sniffer_rawdescrambler_scrambler_sink_payload_ctrl[0])) begin
        pcie_ptm_sniffer_rawdescrambler_scrambler_source_payload_data[7:0] <= pcie_ptm_sniffer_rawdescrambler_scrambler_sink_payload_data[7:0];
    end else begin
        pcie_ptm_sniffer_rawdescrambler_scrambler_source_payload_data[7:0] <= (pcie_ptm_sniffer_rawdescrambler_scrambler_sink_payload_data[7:0] ^ pcie_ptm_sniffer_rawdescrambler_scrambler_value[7:0]);
    end
    if (((~pcie_ptm_sniffer_rawdescrambler_scrambler_enable) | pcie_ptm_sniffer_rawdescrambler_scrambler_sink_payload_ctrl[1])) begin
        pcie_ptm_sniffer_rawdescrambler_scrambler_source_payload_data[15:8] <= pcie_ptm_sniffer_rawdescrambler_scrambler_sink_payload_data[15:8];
    end else begin
        pcie_ptm_sniffer_rawdescrambler_scrambler_source_payload_data[15:8] <= (pcie_ptm_sniffer_rawdescrambler_scrambler_sink_payload_data[15:8] ^ pcie_ptm_sniffer_rawdescrambler_scrambler_value[15:8]);
    end
    if (((~pcie_ptm_sniffer_rawdescrambler_scrambler_enable) | pcie_ptm_sniffer_rawdescrambler_scrambler_sink_payload_ctrl[2])) begin
        pcie_ptm_sniffer_rawdescrambler_scrambler_source_payload_data[23:16] <= pcie_ptm_sniffer_rawdescrambler_scrambler_sink_payload_data[23:16];
    end else begin
        pcie_ptm_sniffer_rawdescrambler_scrambler_source_payload_data[23:16] <= (pcie_ptm_sniffer_rawdescrambler_scrambler_sink_payload_data[23:16] ^ pcie_ptm_sniffer_rawdescrambler_scrambler_value[23:16]);
    end
    if (((~pcie_ptm_sniffer_rawdescrambler_scrambler_enable) | pcie_ptm_sniffer_rawdescrambler_scrambler_sink_payload_ctrl[3])) begin
        pcie_ptm_sniffer_rawdescrambler_scrambler_source_payload_data[31:24] <= pcie_ptm_sniffer_rawdescrambler_scrambler_sink_payload_data[31:24];
    end else begin
        pcie_ptm_sniffer_rawdescrambler_scrambler_source_payload_data[31:24] <= (pcie_ptm_sniffer_rawdescrambler_scrambler_sink_payload_data[31:24] ^ pcie_ptm_sniffer_rawdescrambler_scrambler_value[31:24]);
    end
end
always @(*) begin
    pcie_ptm_sniffer_rawdescrambler_scrambler_new <= 16'd0;
    pcie_ptm_sniffer_rawdescrambler_scrambler_new[0] <= (((pcie_ptm_sniffer_rawdescrambler_scrambler_cur[0] ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[6]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[8]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[10]);
    pcie_ptm_sniffer_rawdescrambler_scrambler_new[1] <= (((pcie_ptm_sniffer_rawdescrambler_scrambler_cur[1] ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[7]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[9]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[11]);
    pcie_ptm_sniffer_rawdescrambler_scrambler_new[2] <= (((pcie_ptm_sniffer_rawdescrambler_scrambler_cur[2] ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[8]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[10]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[12]);
    pcie_ptm_sniffer_rawdescrambler_scrambler_new[3] <= ((((((pcie_ptm_sniffer_rawdescrambler_scrambler_cur[3] ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[6]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[8]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[9]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[10]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[11]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[13]);
    pcie_ptm_sniffer_rawdescrambler_scrambler_new[4] <= (((((((pcie_ptm_sniffer_rawdescrambler_scrambler_cur[4] ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[6]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[7]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[8]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[9]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[11]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[12]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[14]);
    pcie_ptm_sniffer_rawdescrambler_scrambler_new[5] <= ((((((pcie_ptm_sniffer_rawdescrambler_scrambler_cur[5] ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[6]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[7]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[9]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[12]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[13]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[15]);
    pcie_ptm_sniffer_rawdescrambler_scrambler_new[6] <= ((((((pcie_ptm_sniffer_rawdescrambler_scrambler_cur[0] ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[6]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[7]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[8]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[10]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[13]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[14]);
    pcie_ptm_sniffer_rawdescrambler_scrambler_new[7] <= ((((((pcie_ptm_sniffer_rawdescrambler_scrambler_cur[1] ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[7]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[8]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[9]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[11]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[14]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[15]);
    pcie_ptm_sniffer_rawdescrambler_scrambler_new[8] <= ((((((pcie_ptm_sniffer_rawdescrambler_scrambler_cur[0] ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[2]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[8]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[9]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[10]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[12]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[15]);
    pcie_ptm_sniffer_rawdescrambler_scrambler_new[9] <= (((((pcie_ptm_sniffer_rawdescrambler_scrambler_cur[1] ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[3]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[9]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[10]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[11]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[13]);
    pcie_ptm_sniffer_rawdescrambler_scrambler_new[10] <= ((((((pcie_ptm_sniffer_rawdescrambler_scrambler_cur[0] ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[2]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[4]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[10]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[11]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[12]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[14]);
    pcie_ptm_sniffer_rawdescrambler_scrambler_new[11] <= ((((((pcie_ptm_sniffer_rawdescrambler_scrambler_cur[1] ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[3]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[5]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[11]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[12]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[13]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[15]);
    pcie_ptm_sniffer_rawdescrambler_scrambler_new[12] <= (((((pcie_ptm_sniffer_rawdescrambler_scrambler_cur[2] ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[4]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[6]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[12]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[13]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[14]);
    pcie_ptm_sniffer_rawdescrambler_scrambler_new[13] <= (((((pcie_ptm_sniffer_rawdescrambler_scrambler_cur[3] ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[5]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[7]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[13]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[14]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[15]);
    pcie_ptm_sniffer_rawdescrambler_scrambler_new[14] <= ((((pcie_ptm_sniffer_rawdescrambler_scrambler_cur[4] ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[6]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[8]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[14]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[15]);
    pcie_ptm_sniffer_rawdescrambler_scrambler_new[15] <= (((pcie_ptm_sniffer_rawdescrambler_scrambler_cur[5] ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[7]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[9]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[15]);
end
always @(*) begin
    pcie_ptm_sniffer_rawdescrambler_scrambler_value <= 32'd0;
    pcie_ptm_sniffer_rawdescrambler_scrambler_value[0] <= pcie_ptm_sniffer_rawdescrambler_scrambler_cur[15];
    pcie_ptm_sniffer_rawdescrambler_scrambler_value[1] <= pcie_ptm_sniffer_rawdescrambler_scrambler_cur[14];
    pcie_ptm_sniffer_rawdescrambler_scrambler_value[2] <= pcie_ptm_sniffer_rawdescrambler_scrambler_cur[13];
    pcie_ptm_sniffer_rawdescrambler_scrambler_value[3] <= pcie_ptm_sniffer_rawdescrambler_scrambler_cur[12];
    pcie_ptm_sniffer_rawdescrambler_scrambler_value[4] <= pcie_ptm_sniffer_rawdescrambler_scrambler_cur[11];
    pcie_ptm_sniffer_rawdescrambler_scrambler_value[5] <= pcie_ptm_sniffer_rawdescrambler_scrambler_cur[10];
    pcie_ptm_sniffer_rawdescrambler_scrambler_value[6] <= pcie_ptm_sniffer_rawdescrambler_scrambler_cur[9];
    pcie_ptm_sniffer_rawdescrambler_scrambler_value[7] <= pcie_ptm_sniffer_rawdescrambler_scrambler_cur[8];
    pcie_ptm_sniffer_rawdescrambler_scrambler_value[8] <= pcie_ptm_sniffer_rawdescrambler_scrambler_cur[7];
    pcie_ptm_sniffer_rawdescrambler_scrambler_value[9] <= pcie_ptm_sniffer_rawdescrambler_scrambler_cur[6];
    pcie_ptm_sniffer_rawdescrambler_scrambler_value[10] <= pcie_ptm_sniffer_rawdescrambler_scrambler_cur[5];
    pcie_ptm_sniffer_rawdescrambler_scrambler_value[11] <= (pcie_ptm_sniffer_rawdescrambler_scrambler_cur[4] ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[15]);
    pcie_ptm_sniffer_rawdescrambler_scrambler_value[12] <= ((pcie_ptm_sniffer_rawdescrambler_scrambler_cur[3] ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[14]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[15]);
    pcie_ptm_sniffer_rawdescrambler_scrambler_value[13] <= (((pcie_ptm_sniffer_rawdescrambler_scrambler_cur[2] ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[13]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[14]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[15]);
    pcie_ptm_sniffer_rawdescrambler_scrambler_value[14] <= (((pcie_ptm_sniffer_rawdescrambler_scrambler_cur[1] ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[12]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[13]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[14]);
    pcie_ptm_sniffer_rawdescrambler_scrambler_value[15] <= (((pcie_ptm_sniffer_rawdescrambler_scrambler_cur[0] ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[11]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[12]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[13]);
    pcie_ptm_sniffer_rawdescrambler_scrambler_value[16] <= (((pcie_ptm_sniffer_rawdescrambler_scrambler_cur[10] ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[11]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[12]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[15]);
    pcie_ptm_sniffer_rawdescrambler_scrambler_value[17] <= (((pcie_ptm_sniffer_rawdescrambler_scrambler_cur[9] ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[10]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[11]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[14]);
    pcie_ptm_sniffer_rawdescrambler_scrambler_value[18] <= (((pcie_ptm_sniffer_rawdescrambler_scrambler_cur[8] ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[9]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[10]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[13]);
    pcie_ptm_sniffer_rawdescrambler_scrambler_value[19] <= (((pcie_ptm_sniffer_rawdescrambler_scrambler_cur[7] ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[8]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[9]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[12]);
    pcie_ptm_sniffer_rawdescrambler_scrambler_value[20] <= (((pcie_ptm_sniffer_rawdescrambler_scrambler_cur[6] ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[7]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[8]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[11]);
    pcie_ptm_sniffer_rawdescrambler_scrambler_value[21] <= (((pcie_ptm_sniffer_rawdescrambler_scrambler_cur[5] ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[6]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[7]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[10]);
    pcie_ptm_sniffer_rawdescrambler_scrambler_value[22] <= ((((pcie_ptm_sniffer_rawdescrambler_scrambler_cur[4] ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[5]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[6]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[9]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[15]);
    pcie_ptm_sniffer_rawdescrambler_scrambler_value[23] <= ((((pcie_ptm_sniffer_rawdescrambler_scrambler_cur[3] ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[4]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[5]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[8]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[14]);
    pcie_ptm_sniffer_rawdescrambler_scrambler_value[24] <= (((((pcie_ptm_sniffer_rawdescrambler_scrambler_cur[2] ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[3]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[4]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[7]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[13]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[15]);
    pcie_ptm_sniffer_rawdescrambler_scrambler_value[25] <= (((((pcie_ptm_sniffer_rawdescrambler_scrambler_cur[1] ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[2]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[3]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[6]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[12]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[14]);
    pcie_ptm_sniffer_rawdescrambler_scrambler_value[26] <= ((((((pcie_ptm_sniffer_rawdescrambler_scrambler_cur[0] ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[1]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[2]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[5]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[11]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[13]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[15]);
    pcie_ptm_sniffer_rawdescrambler_scrambler_value[27] <= (((((pcie_ptm_sniffer_rawdescrambler_scrambler_cur[0] ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[1]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[4]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[10]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[12]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[14]);
    pcie_ptm_sniffer_rawdescrambler_scrambler_value[28] <= ((((pcie_ptm_sniffer_rawdescrambler_scrambler_cur[0] ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[3]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[9]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[11]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[13]);
    pcie_ptm_sniffer_rawdescrambler_scrambler_value[29] <= (((pcie_ptm_sniffer_rawdescrambler_scrambler_cur[2] ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[8]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[10]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[12]);
    pcie_ptm_sniffer_rawdescrambler_scrambler_value[30] <= (((pcie_ptm_sniffer_rawdescrambler_scrambler_cur[1] ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[7]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[9]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[11]);
    pcie_ptm_sniffer_rawdescrambler_scrambler_value[31] <= (((pcie_ptm_sniffer_rawdescrambler_scrambler_cur[0] ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[6]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[8]) ^ pcie_ptm_sniffer_rawdescrambler_scrambler_cur[10]);
end
assign pcie_ptm_sniffer_tlpaligner_sink_ready = 1'd1;
always @(*) begin
    litepciecore_clockdomainsrenamer0_next_state <= 2'd0;
    pcie_ptm_sniffer_tlpaligner_alignment_clockdomainsrenamer0_next_value0 <= 2'd0;
    pcie_ptm_sniffer_tlpaligner_alignment_clockdomainsrenamer0_next_value_ce0 <= 1'd0;
    pcie_ptm_sniffer_tlpaligner_first_clockdomainsrenamer0_next_value1 <= 1'd0;
    pcie_ptm_sniffer_tlpaligner_first_clockdomainsrenamer0_next_value_ce1 <= 1'd0;
    pcie_ptm_sniffer_tlpaligner_source_last <= 1'd0;
    pcie_ptm_sniffer_tlpaligner_source_payload_ctrl <= 4'd0;
    pcie_ptm_sniffer_tlpaligner_source_payload_data <= 32'd0;
    pcie_ptm_sniffer_tlpaligner_source_valid <= 1'd0;
    litepciecore_clockdomainsrenamer0_next_state <= litepciecore_clockdomainsrenamer0_state;
    case (litepciecore_clockdomainsrenamer0_state)
        1'd1: begin
            if (pcie_ptm_sniffer_tlpaligner_sink_valid) begin
                pcie_ptm_sniffer_tlpaligner_first_clockdomainsrenamer0_next_value1 <= 1'd1;
                pcie_ptm_sniffer_tlpaligner_first_clockdomainsrenamer0_next_value_ce1 <= 1'd1;
                litepciecore_clockdomainsrenamer0_next_state <= 2'd2;
            end
        end
        2'd2: begin
            if (pcie_ptm_sniffer_tlpaligner_sink_valid) begin
                pcie_ptm_sniffer_tlpaligner_source_valid <= 1'd1;
                pcie_ptm_sniffer_tlpaligner_first_clockdomainsrenamer0_next_value1 <= 1'd0;
                pcie_ptm_sniffer_tlpaligner_first_clockdomainsrenamer0_next_value_ce1 <= 1'd1;
                case (pcie_ptm_sniffer_tlpaligner_alignment)
                    1'd0: begin
                        pcie_ptm_sniffer_tlpaligner_source_payload_data[7:0] <= pcie_ptm_sniffer_tlpaligner_sink_data_dd[31:24];
                        pcie_ptm_sniffer_tlpaligner_source_payload_data[15:8] <= pcie_ptm_sniffer_tlpaligner_sink_data_d[7:0];
                        pcie_ptm_sniffer_tlpaligner_source_payload_data[23:16] <= pcie_ptm_sniffer_tlpaligner_sink_data_d[15:8];
                        pcie_ptm_sniffer_tlpaligner_source_payload_data[31:24] <= pcie_ptm_sniffer_tlpaligner_sink_data_d[23:16];
                        pcie_ptm_sniffer_tlpaligner_source_payload_ctrl[0] <= pcie_ptm_sniffer_tlpaligner_sink_ctrl_dd[3];
                        pcie_ptm_sniffer_tlpaligner_source_payload_ctrl[1] <= pcie_ptm_sniffer_tlpaligner_sink_ctrl_d[0];
                        pcie_ptm_sniffer_tlpaligner_source_payload_ctrl[2] <= pcie_ptm_sniffer_tlpaligner_sink_ctrl_d[1];
                        pcie_ptm_sniffer_tlpaligner_source_payload_ctrl[3] <= pcie_ptm_sniffer_tlpaligner_sink_ctrl_d[2];
                    end
                    1'd1: begin
                        pcie_ptm_sniffer_tlpaligner_source_payload_data[7:0] <= pcie_ptm_sniffer_tlpaligner_sink_data_d[7:0];
                        pcie_ptm_sniffer_tlpaligner_source_payload_data[15:8] <= pcie_ptm_sniffer_tlpaligner_sink_data_d[15:8];
                        pcie_ptm_sniffer_tlpaligner_source_payload_data[23:16] <= pcie_ptm_sniffer_tlpaligner_sink_data_d[23:16];
                        pcie_ptm_sniffer_tlpaligner_source_payload_data[31:24] <= pcie_ptm_sniffer_tlpaligner_sink_data_d[31:24];
                        pcie_ptm_sniffer_tlpaligner_source_payload_ctrl[0] <= pcie_ptm_sniffer_tlpaligner_sink_ctrl_d[0];
                        pcie_ptm_sniffer_tlpaligner_source_payload_ctrl[1] <= pcie_ptm_sniffer_tlpaligner_sink_ctrl_d[1];
                        pcie_ptm_sniffer_tlpaligner_source_payload_ctrl[2] <= pcie_ptm_sniffer_tlpaligner_sink_ctrl_d[2];
                        pcie_ptm_sniffer_tlpaligner_source_payload_ctrl[3] <= pcie_ptm_sniffer_tlpaligner_sink_ctrl_d[3];
                    end
                    2'd2: begin
                        pcie_ptm_sniffer_tlpaligner_source_payload_data[7:0] <= pcie_ptm_sniffer_tlpaligner_sink_data_d[15:8];
                        pcie_ptm_sniffer_tlpaligner_source_payload_data[15:8] <= pcie_ptm_sniffer_tlpaligner_sink_data_d[23:16];
                        pcie_ptm_sniffer_tlpaligner_source_payload_data[23:16] <= pcie_ptm_sniffer_tlpaligner_sink_data_d[31:24];
                        pcie_ptm_sniffer_tlpaligner_source_payload_data[31:24] <= pcie_ptm_sniffer_tlpaligner_sink_payload_data[7:0];
                        pcie_ptm_sniffer_tlpaligner_source_payload_ctrl[0] <= pcie_ptm_sniffer_tlpaligner_sink_ctrl_d[1];
                        pcie_ptm_sniffer_tlpaligner_source_payload_ctrl[1] <= pcie_ptm_sniffer_tlpaligner_sink_ctrl_d[2];
                        pcie_ptm_sniffer_tlpaligner_source_payload_ctrl[2] <= pcie_ptm_sniffer_tlpaligner_sink_ctrl_d[3];
                        pcie_ptm_sniffer_tlpaligner_source_payload_ctrl[3] <= pcie_ptm_sniffer_tlpaligner_sink_payload_ctrl[0];
                    end
                    2'd3: begin
                        pcie_ptm_sniffer_tlpaligner_source_payload_data[7:0] <= pcie_ptm_sniffer_tlpaligner_sink_data_d[23:16];
                        pcie_ptm_sniffer_tlpaligner_source_payload_data[15:8] <= pcie_ptm_sniffer_tlpaligner_sink_data_d[31:24];
                        pcie_ptm_sniffer_tlpaligner_source_payload_data[23:16] <= pcie_ptm_sniffer_tlpaligner_sink_payload_data[7:0];
                        pcie_ptm_sniffer_tlpaligner_source_payload_data[31:24] <= pcie_ptm_sniffer_tlpaligner_sink_payload_data[15:8];
                        pcie_ptm_sniffer_tlpaligner_source_payload_ctrl[0] <= pcie_ptm_sniffer_tlpaligner_sink_ctrl_d[2];
                        pcie_ptm_sniffer_tlpaligner_source_payload_ctrl[1] <= pcie_ptm_sniffer_tlpaligner_sink_ctrl_d[3];
                        pcie_ptm_sniffer_tlpaligner_source_payload_ctrl[2] <= pcie_ptm_sniffer_tlpaligner_sink_payload_ctrl[0];
                        pcie_ptm_sniffer_tlpaligner_source_payload_ctrl[3] <= pcie_ptm_sniffer_tlpaligner_sink_payload_ctrl[1];
                    end
                endcase
            end
            if ((pcie_ptm_sniffer_tlpaligner_sink_valid & (~pcie_ptm_sniffer_tlpaligner_first))) begin
                if ((pcie_ptm_sniffer_tlpaligner_sink_ctrl_dd[0] & (pcie_ptm_sniffer_tlpaligner_sink_data_dd[7:0] == 8'd253))) begin
                    pcie_ptm_sniffer_tlpaligner_source_last <= 1'd1;
                    litepciecore_clockdomainsrenamer0_next_state <= 1'd0;
                end
                if ((pcie_ptm_sniffer_tlpaligner_sink_ctrl_dd[1] & (pcie_ptm_sniffer_tlpaligner_sink_data_dd[15:8] == 8'd253))) begin
                    pcie_ptm_sniffer_tlpaligner_source_last <= 1'd1;
                    litepciecore_clockdomainsrenamer0_next_state <= 1'd0;
                end
                if ((pcie_ptm_sniffer_tlpaligner_sink_ctrl_dd[2] & (pcie_ptm_sniffer_tlpaligner_sink_data_dd[23:16] == 8'd253))) begin
                    pcie_ptm_sniffer_tlpaligner_source_last <= 1'd1;
                    litepciecore_clockdomainsrenamer0_next_state <= 1'd0;
                end
                if ((pcie_ptm_sniffer_tlpaligner_sink_ctrl_dd[3] & (pcie_ptm_sniffer_tlpaligner_sink_data_dd[31:24] == 8'd253))) begin
                    pcie_ptm_sniffer_tlpaligner_source_last <= 1'd1;
                    litepciecore_clockdomainsrenamer0_next_state <= 1'd0;
                end
            end
        end
        default: begin
            if (pcie_ptm_sniffer_tlpaligner_sink_valid) begin
                if ((pcie_ptm_sniffer_tlpaligner_sink_payload_ctrl[0] & (pcie_ptm_sniffer_tlpaligner_sink_payload_data[7:0] == 8'd251))) begin
                    pcie_ptm_sniffer_tlpaligner_alignment_clockdomainsrenamer0_next_value0 <= 1'd0;
                    pcie_ptm_sniffer_tlpaligner_alignment_clockdomainsrenamer0_next_value_ce0 <= 1'd1;
                    litepciecore_clockdomainsrenamer0_next_state <= 1'd1;
                end
                if ((pcie_ptm_sniffer_tlpaligner_sink_payload_ctrl[1] & (pcie_ptm_sniffer_tlpaligner_sink_payload_data[15:8] == 8'd251))) begin
                    pcie_ptm_sniffer_tlpaligner_alignment_clockdomainsrenamer0_next_value0 <= 1'd1;
                    pcie_ptm_sniffer_tlpaligner_alignment_clockdomainsrenamer0_next_value_ce0 <= 1'd1;
                    litepciecore_clockdomainsrenamer0_next_state <= 1'd1;
                end
                if ((pcie_ptm_sniffer_tlpaligner_sink_payload_ctrl[2] & (pcie_ptm_sniffer_tlpaligner_sink_payload_data[23:16] == 8'd251))) begin
                    pcie_ptm_sniffer_tlpaligner_alignment_clockdomainsrenamer0_next_value0 <= 2'd2;
                    pcie_ptm_sniffer_tlpaligner_alignment_clockdomainsrenamer0_next_value_ce0 <= 1'd1;
                    litepciecore_clockdomainsrenamer0_next_state <= 1'd1;
                end
                if ((pcie_ptm_sniffer_tlpaligner_sink_payload_ctrl[3] & (pcie_ptm_sniffer_tlpaligner_sink_payload_data[31:24] == 8'd251))) begin
                    pcie_ptm_sniffer_tlpaligner_alignment_clockdomainsrenamer0_next_value0 <= 2'd3;
                    pcie_ptm_sniffer_tlpaligner_alignment_clockdomainsrenamer0_next_value_ce0 <= 1'd1;
                    litepciecore_clockdomainsrenamer0_next_state <= 1'd1;
                end
            end
        end
    endcase
end
assign pcie_ptm_sniffer_tlpendiannessswap_source_valid = pcie_ptm_sniffer_tlpendiannessswap_sink_valid;
assign pcie_ptm_sniffer_tlpendiannessswap_sink_ready = pcie_ptm_sniffer_tlpendiannessswap_source_ready;
assign pcie_ptm_sniffer_tlpendiannessswap_source_first = pcie_ptm_sniffer_tlpendiannessswap_sink_first;
assign pcie_ptm_sniffer_tlpendiannessswap_source_last = pcie_ptm_sniffer_tlpendiannessswap_sink_last;
always @(*) begin
    pcie_ptm_sniffer_tlpendiannessswap_source_payload_data <= 32'd0;
    pcie_ptm_sniffer_tlpendiannessswap_source_payload_data[7:0] <= pcie_ptm_sniffer_tlpendiannessswap_sink_payload_data[31:24];
    pcie_ptm_sniffer_tlpendiannessswap_source_payload_data[15:8] <= pcie_ptm_sniffer_tlpendiannessswap_sink_payload_data[23:16];
    pcie_ptm_sniffer_tlpendiannessswap_source_payload_data[23:16] <= pcie_ptm_sniffer_tlpendiannessswap_sink_payload_data[15:8];
    pcie_ptm_sniffer_tlpendiannessswap_source_payload_data[31:24] <= pcie_ptm_sniffer_tlpendiannessswap_sink_payload_data[7:0];
end
always @(*) begin
    pcie_ptm_sniffer_tlpendiannessswap_source_payload_ctrl <= 4'd0;
    pcie_ptm_sniffer_tlpendiannessswap_source_payload_ctrl[0] <= pcie_ptm_sniffer_tlpendiannessswap_sink_payload_ctrl[3];
    pcie_ptm_sniffer_tlpendiannessswap_source_payload_ctrl[1] <= pcie_ptm_sniffer_tlpendiannessswap_sink_payload_ctrl[2];
    pcie_ptm_sniffer_tlpendiannessswap_source_payload_ctrl[2] <= pcie_ptm_sniffer_tlpendiannessswap_sink_payload_ctrl[1];
    pcie_ptm_sniffer_tlpendiannessswap_source_payload_ctrl[3] <= pcie_ptm_sniffer_tlpendiannessswap_sink_payload_ctrl[0];
end
assign pcie_ptm_sniffer_tlpfilterformater_sink_sink_ready = 1'd1;
assign pcie_ptm_sniffer_tlpfilterformater_fifo_sink_payload_be = 4'd15;
assign pcie_ptm_sniffer_tlpfilterformater_conv_sink_valid = pcie_ptm_sniffer_tlpfilterformater_fifo_source_valid;
assign pcie_ptm_sniffer_tlpfilterformater_fifo_source_ready = pcie_ptm_sniffer_tlpfilterformater_conv_sink_ready;
assign pcie_ptm_sniffer_tlpfilterformater_conv_sink_first = pcie_ptm_sniffer_tlpfilterformater_fifo_source_first;
assign pcie_ptm_sniffer_tlpfilterformater_conv_sink_last = pcie_ptm_sniffer_tlpfilterformater_fifo_source_last;
assign pcie_ptm_sniffer_tlpfilterformater_conv_sink_payload_dat = pcie_ptm_sniffer_tlpfilterformater_fifo_source_payload_dat;
assign pcie_ptm_sniffer_tlpfilterformater_conv_sink_payload_be = pcie_ptm_sniffer_tlpfilterformater_fifo_source_payload_be;
assign pcie_ptm_sniffer_tlpfilterformater_source_source_valid = pcie_ptm_sniffer_tlpfilterformater_conv_source_valid;
assign pcie_ptm_sniffer_tlpfilterformater_conv_source_ready = pcie_ptm_sniffer_tlpfilterformater_source_source_ready;
assign pcie_ptm_sniffer_tlpfilterformater_source_source_first = pcie_ptm_sniffer_tlpfilterformater_conv_source_first;
assign pcie_ptm_sniffer_tlpfilterformater_source_source_last = pcie_ptm_sniffer_tlpfilterformater_conv_source_last;
assign pcie_ptm_sniffer_tlpfilterformater_source_source_payload_dat = pcie_ptm_sniffer_tlpfilterformater_conv_source_payload_dat;
assign pcie_ptm_sniffer_tlpfilterformater_source_source_payload_be = pcie_ptm_sniffer_tlpfilterformater_conv_source_payload_be;
assign pcie_ptm_sniffer_tlpfilterformater_fifo_syncfifo_din = {pcie_ptm_sniffer_tlpfilterformater_fifo_fifo_in_last, pcie_ptm_sniffer_tlpfilterformater_fifo_fifo_in_first, pcie_ptm_sniffer_tlpfilterformater_fifo_fifo_in_payload_be, pcie_ptm_sniffer_tlpfilterformater_fifo_fifo_in_payload_dat};
assign {pcie_ptm_sniffer_tlpfilterformater_fifo_fifo_out_last, pcie_ptm_sniffer_tlpfilterformater_fifo_fifo_out_first, pcie_ptm_sniffer_tlpfilterformater_fifo_fifo_out_payload_be, pcie_ptm_sniffer_tlpfilterformater_fifo_fifo_out_payload_dat} = pcie_ptm_sniffer_tlpfilterformater_fifo_syncfifo_dout;
assign pcie_ptm_sniffer_tlpfilterformater_fifo_sink_ready = pcie_ptm_sniffer_tlpfilterformater_fifo_syncfifo_writable;
assign pcie_ptm_sniffer_tlpfilterformater_fifo_syncfifo_we = pcie_ptm_sniffer_tlpfilterformater_fifo_sink_valid;
assign pcie_ptm_sniffer_tlpfilterformater_fifo_fifo_in_first = pcie_ptm_sniffer_tlpfilterformater_fifo_sink_first;
assign pcie_ptm_sniffer_tlpfilterformater_fifo_fifo_in_last = pcie_ptm_sniffer_tlpfilterformater_fifo_sink_last;
assign pcie_ptm_sniffer_tlpfilterformater_fifo_fifo_in_payload_dat = pcie_ptm_sniffer_tlpfilterformater_fifo_sink_payload_dat;
assign pcie_ptm_sniffer_tlpfilterformater_fifo_fifo_in_payload_be = pcie_ptm_sniffer_tlpfilterformater_fifo_sink_payload_be;
assign pcie_ptm_sniffer_tlpfilterformater_fifo_source_valid = pcie_ptm_sniffer_tlpfilterformater_fifo_readable;
assign pcie_ptm_sniffer_tlpfilterformater_fifo_source_first = pcie_ptm_sniffer_tlpfilterformater_fifo_fifo_out_first;
assign pcie_ptm_sniffer_tlpfilterformater_fifo_source_last = pcie_ptm_sniffer_tlpfilterformater_fifo_fifo_out_last;
assign pcie_ptm_sniffer_tlpfilterformater_fifo_source_payload_dat = pcie_ptm_sniffer_tlpfilterformater_fifo_fifo_out_payload_dat;
assign pcie_ptm_sniffer_tlpfilterformater_fifo_source_payload_be = pcie_ptm_sniffer_tlpfilterformater_fifo_fifo_out_payload_be;
assign pcie_ptm_sniffer_tlpfilterformater_fifo_re = pcie_ptm_sniffer_tlpfilterformater_fifo_source_ready;
assign pcie_ptm_sniffer_tlpfilterformater_fifo_syncfifo_re = (pcie_ptm_sniffer_tlpfilterformater_fifo_syncfifo_readable & ((~pcie_ptm_sniffer_tlpfilterformater_fifo_readable) | pcie_ptm_sniffer_tlpfilterformater_fifo_re));
assign pcie_ptm_sniffer_tlpfilterformater_fifo_level1 = (pcie_ptm_sniffer_tlpfilterformater_fifo_level0 + pcie_ptm_sniffer_tlpfilterformater_fifo_readable);
always @(*) begin
    pcie_ptm_sniffer_tlpfilterformater_fifo_wrport_adr <= 2'd0;
    if (pcie_ptm_sniffer_tlpfilterformater_fifo_replace) begin
        pcie_ptm_sniffer_tlpfilterformater_fifo_wrport_adr <= (pcie_ptm_sniffer_tlpfilterformater_fifo_produce - 1'd1);
    end else begin
        pcie_ptm_sniffer_tlpfilterformater_fifo_wrport_adr <= pcie_ptm_sniffer_tlpfilterformater_fifo_produce;
    end
end
assign pcie_ptm_sniffer_tlpfilterformater_fifo_wrport_dat_w = pcie_ptm_sniffer_tlpfilterformater_fifo_syncfifo_din;
assign pcie_ptm_sniffer_tlpfilterformater_fifo_wrport_we = (pcie_ptm_sniffer_tlpfilterformater_fifo_syncfifo_we & (pcie_ptm_sniffer_tlpfilterformater_fifo_syncfifo_writable | pcie_ptm_sniffer_tlpfilterformater_fifo_replace));
assign pcie_ptm_sniffer_tlpfilterformater_fifo_do_read = (pcie_ptm_sniffer_tlpfilterformater_fifo_syncfifo_readable & pcie_ptm_sniffer_tlpfilterformater_fifo_syncfifo_re);
assign pcie_ptm_sniffer_tlpfilterformater_fifo_rdport_adr = pcie_ptm_sniffer_tlpfilterformater_fifo_consume;
assign pcie_ptm_sniffer_tlpfilterformater_fifo_syncfifo_dout = pcie_ptm_sniffer_tlpfilterformater_fifo_rdport_dat_r;
assign pcie_ptm_sniffer_tlpfilterformater_fifo_rdport_re = pcie_ptm_sniffer_tlpfilterformater_fifo_do_read;
assign pcie_ptm_sniffer_tlpfilterformater_fifo_syncfifo_writable = (pcie_ptm_sniffer_tlpfilterformater_fifo_level0 != 3'd4);
assign pcie_ptm_sniffer_tlpfilterformater_fifo_syncfifo_readable = (pcie_ptm_sniffer_tlpfilterformater_fifo_level0 != 1'd0);
assign pcie_ptm_sniffer_tlpfilterformater_conv_converter_sink_valid = pcie_ptm_sniffer_tlpfilterformater_conv_sink_valid;
assign pcie_ptm_sniffer_tlpfilterformater_conv_converter_sink_first = pcie_ptm_sniffer_tlpfilterformater_conv_sink_first;
assign pcie_ptm_sniffer_tlpfilterformater_conv_converter_sink_last = pcie_ptm_sniffer_tlpfilterformater_conv_sink_last;
assign pcie_ptm_sniffer_tlpfilterformater_conv_sink_ready = pcie_ptm_sniffer_tlpfilterformater_conv_converter_sink_ready;
assign pcie_ptm_sniffer_tlpfilterformater_conv_converter_sink_payload_data = {pcie_ptm_sniffer_tlpfilterformater_conv_sink_payload_be, pcie_ptm_sniffer_tlpfilterformater_conv_sink_payload_dat};
assign pcie_ptm_sniffer_tlpfilterformater_conv_source_valid = pcie_ptm_sniffer_tlpfilterformater_conv_source_source_valid;
assign pcie_ptm_sniffer_tlpfilterformater_conv_source_first = pcie_ptm_sniffer_tlpfilterformater_conv_source_source_first;
assign pcie_ptm_sniffer_tlpfilterformater_conv_source_last = pcie_ptm_sniffer_tlpfilterformater_conv_source_source_last;
assign pcie_ptm_sniffer_tlpfilterformater_conv_source_source_ready = pcie_ptm_sniffer_tlpfilterformater_conv_source_ready;
always @(*) begin
    pcie_ptm_sniffer_tlpfilterformater_conv_source_payload_dat <= 64'd0;
    pcie_ptm_sniffer_tlpfilterformater_conv_source_payload_dat[31:0] <= pcie_ptm_sniffer_tlpfilterformater_conv_source_source_payload_data[31:0];
    pcie_ptm_sniffer_tlpfilterformater_conv_source_payload_dat[63:32] <= pcie_ptm_sniffer_tlpfilterformater_conv_source_source_payload_data[67:36];
end
always @(*) begin
    pcie_ptm_sniffer_tlpfilterformater_conv_source_payload_be <= 8'd0;
    pcie_ptm_sniffer_tlpfilterformater_conv_source_payload_be[3:0] <= pcie_ptm_sniffer_tlpfilterformater_conv_source_source_payload_data[35:32];
    pcie_ptm_sniffer_tlpfilterformater_conv_source_payload_be[7:4] <= pcie_ptm_sniffer_tlpfilterformater_conv_source_source_payload_data[71:68];
end
assign pcie_ptm_sniffer_tlpfilterformater_conv_source_source_valid = pcie_ptm_sniffer_tlpfilterformater_conv_converter_source_valid;
assign pcie_ptm_sniffer_tlpfilterformater_conv_converter_source_ready = pcie_ptm_sniffer_tlpfilterformater_conv_source_source_ready;
assign pcie_ptm_sniffer_tlpfilterformater_conv_source_source_first = pcie_ptm_sniffer_tlpfilterformater_conv_converter_source_first;
assign pcie_ptm_sniffer_tlpfilterformater_conv_source_source_last = pcie_ptm_sniffer_tlpfilterformater_conv_converter_source_last;
assign pcie_ptm_sniffer_tlpfilterformater_conv_source_source_payload_data = pcie_ptm_sniffer_tlpfilterformater_conv_converter_source_payload_data;
assign pcie_ptm_sniffer_tlpfilterformater_conv_converter_sink_ready = ((~pcie_ptm_sniffer_tlpfilterformater_conv_converter_strobe_all) | pcie_ptm_sniffer_tlpfilterformater_conv_converter_source_ready);
assign pcie_ptm_sniffer_tlpfilterformater_conv_converter_source_valid = pcie_ptm_sniffer_tlpfilterformater_conv_converter_strobe_all;
assign pcie_ptm_sniffer_tlpfilterformater_conv_converter_load_part = (pcie_ptm_sniffer_tlpfilterformater_conv_converter_sink_valid & pcie_ptm_sniffer_tlpfilterformater_conv_converter_sink_ready);
always @(*) begin
    litepciecore_clockdomainsrenamer1_next_state <= 2'd0;
    pcie_ptm_sniffer_tlpfilterformater_count_clockdomainsrenamer1_next_value <= 32'd0;
    pcie_ptm_sniffer_tlpfilterformater_count_clockdomainsrenamer1_next_value_ce <= 1'd0;
    pcie_ptm_sniffer_tlpfilterformater_fifo_sink_last <= 1'd0;
    pcie_ptm_sniffer_tlpfilterformater_fifo_sink_payload_dat <= 32'd0;
    pcie_ptm_sniffer_tlpfilterformater_fifo_sink_valid <= 1'd0;
    litepciecore_clockdomainsrenamer1_next_state <= litepciecore_clockdomainsrenamer1_state;
    case (litepciecore_clockdomainsrenamer1_state)
        1'd1: begin
            if (pcie_ptm_sniffer_tlpfilterformater_sink_sink_valid) begin
                pcie_ptm_sniffer_tlpfilterformater_fifo_sink_valid <= 1'd1;
                pcie_ptm_sniffer_tlpfilterformater_fifo_sink_payload_dat <= pcie_ptm_sniffer_tlpfilterformater_sink_sink_payload_data;
                pcie_ptm_sniffer_tlpfilterformater_count_clockdomainsrenamer1_next_value <= (pcie_ptm_sniffer_tlpfilterformater_count - 1'd1);
                pcie_ptm_sniffer_tlpfilterformater_count_clockdomainsrenamer1_next_value_ce <= 1'd1;
                if ((pcie_ptm_sniffer_tlpfilterformater_count == 1'd0)) begin
                    pcie_ptm_sniffer_tlpfilterformater_fifo_sink_last <= 1'd1;
                    litepciecore_clockdomainsrenamer1_next_state <= 2'd2;
                end
                if (pcie_ptm_sniffer_tlpfilterformater_sink_sink_last) begin
                    pcie_ptm_sniffer_tlpfilterformater_fifo_sink_last <= 1'd1;
                    litepciecore_clockdomainsrenamer1_next_state <= 1'd0;
                end
            end
        end
        2'd2: begin
            if ((pcie_ptm_sniffer_tlpfilterformater_sink_sink_valid & pcie_ptm_sniffer_tlpfilterformater_sink_sink_last)) begin
                litepciecore_clockdomainsrenamer1_next_state <= 1'd0;
            end
        end
        default: begin
            if (pcie_ptm_sniffer_tlpfilterformater_sink_sink_valid) begin
                if ((pcie_ptm_sniffer_tlpfilterformater_sink_sink_payload_data[31:24] == 6'd52)) begin
                    pcie_ptm_sniffer_tlpfilterformater_fifo_sink_valid <= 1'd1;
                    pcie_ptm_sniffer_tlpfilterformater_fifo_sink_payload_dat <= pcie_ptm_sniffer_tlpfilterformater_sink_sink_payload_data;
                    pcie_ptm_sniffer_tlpfilterformater_count_clockdomainsrenamer1_next_value <= 2'd2;
                    pcie_ptm_sniffer_tlpfilterformater_count_clockdomainsrenamer1_next_value_ce <= 1'd1;
                    litepciecore_clockdomainsrenamer1_next_state <= 1'd1;
                end else begin
                    if ((pcie_ptm_sniffer_tlpfilterformater_sink_sink_payload_data[31:24] == 7'd116)) begin
                        pcie_ptm_sniffer_tlpfilterformater_fifo_sink_valid <= 1'd1;
                        pcie_ptm_sniffer_tlpfilterformater_fifo_sink_payload_dat <= pcie_ptm_sniffer_tlpfilterformater_sink_sink_payload_data;
                        pcie_ptm_sniffer_tlpfilterformater_count_clockdomainsrenamer1_next_value <= 2'd3;
                        pcie_ptm_sniffer_tlpfilterformater_count_clockdomainsrenamer1_next_value_ce <= 1'd1;
                        litepciecore_clockdomainsrenamer1_next_state <= 1'd1;
                    end else begin
                        litepciecore_clockdomainsrenamer1_next_state <= 2'd2;
                    end
                end
            end
        end
    endcase
end
assign pcie_ptm_sniffer_tlpaligner_sink_valid = pcie_ptm_sniffer_rawdescrambler_source_source_valid;
assign pcie_ptm_sniffer_rawdescrambler_source_source_ready = pcie_ptm_sniffer_tlpaligner_sink_ready;
assign pcie_ptm_sniffer_tlpaligner_sink_first = pcie_ptm_sniffer_rawdescrambler_source_source_first;
assign pcie_ptm_sniffer_tlpaligner_sink_last = pcie_ptm_sniffer_rawdescrambler_source_source_last;
assign pcie_ptm_sniffer_tlpaligner_sink_payload_data = pcie_ptm_sniffer_rawdescrambler_source_source_payload_data;
assign pcie_ptm_sniffer_tlpaligner_sink_payload_ctrl = pcie_ptm_sniffer_rawdescrambler_source_source_payload_ctrl;
assign pcie_ptm_sniffer_tlpendiannessswap_sink_valid = pcie_ptm_sniffer_tlpaligner_source_valid;
assign pcie_ptm_sniffer_tlpaligner_source_ready = pcie_ptm_sniffer_tlpendiannessswap_sink_ready;
assign pcie_ptm_sniffer_tlpendiannessswap_sink_first = pcie_ptm_sniffer_tlpaligner_source_first;
assign pcie_ptm_sniffer_tlpendiannessswap_sink_last = pcie_ptm_sniffer_tlpaligner_source_last;
assign pcie_ptm_sniffer_tlpendiannessswap_sink_payload_data = pcie_ptm_sniffer_tlpaligner_source_payload_data;
assign pcie_ptm_sniffer_tlpendiannessswap_sink_payload_ctrl = pcie_ptm_sniffer_tlpaligner_source_payload_ctrl;
assign pcie_ptm_sniffer_tlpfilterformater_sink_sink_valid = pcie_ptm_sniffer_tlpendiannessswap_source_valid;
assign pcie_ptm_sniffer_tlpendiannessswap_source_ready = pcie_ptm_sniffer_tlpfilterformater_sink_sink_ready;
assign pcie_ptm_sniffer_tlpfilterformater_sink_sink_first = pcie_ptm_sniffer_tlpendiannessswap_source_first;
assign pcie_ptm_sniffer_tlpfilterformater_sink_sink_last = pcie_ptm_sniffer_tlpendiannessswap_source_last;
assign pcie_ptm_sniffer_tlpfilterformater_sink_sink_payload_data = pcie_ptm_sniffer_tlpendiannessswap_source_payload_data;
assign pcie_ptm_sniffer_tlpfilterformater_sink_sink_payload_ctrl = pcie_ptm_sniffer_tlpendiannessswap_source_payload_ctrl;
assign pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_sink_valid = pcie_ptm_sniffer_litepcietlpdepacketizer_sink_sink_valid;
assign pcie_ptm_sniffer_litepcietlpdepacketizer_sink_sink_ready = pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_sink_ready;
assign pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_sink_first = pcie_ptm_sniffer_litepcietlpdepacketizer_sink_sink_first;
assign pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_sink_last = pcie_ptm_sniffer_litepcietlpdepacketizer_sink_sink_last;
assign pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_sink_payload_dat = pcie_ptm_sniffer_litepcietlpdepacketizer_sink_sink_payload_dat;
assign pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_sink_payload_be = pcie_ptm_sniffer_litepcietlpdepacketizer_sink_sink_payload_be;
assign pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint0_ready = 1'd1;
assign pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_valid = pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_valid;
assign pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_ready = pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_ready;
assign pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_first = pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_first;
assign pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_last = pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_last;
assign pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_payload_fmt = pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_payload_header[30:29];
assign pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_payload_type = pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_payload_header[28:24];
always @(*) begin
    pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_payload_dat <= 64'd0;
    pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_payload_dat[31:0] <= {rhs_slice_proxy87[7:0], rhs_slice_proxy86[15:8], rhs_slice_proxy85[23:16], rhs_slice_proxy84[31:24]};
    pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_payload_dat[63:32] <= {rhs_slice_proxy91[7:0], rhs_slice_proxy90[15:8], rhs_slice_proxy89[23:16], rhs_slice_proxy88[31:24]};
end
always @(*) begin
    pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_payload_be <= 8'd0;
    pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_payload_be[3:0] <= {rhs_slice_proxy95[0], rhs_slice_proxy94[1], rhs_slice_proxy93[2], rhs_slice_proxy92[3]};
    pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_payload_be[7:4] <= {rhs_slice_proxy99[0], rhs_slice_proxy98[1], rhs_slice_proxy97[2], rhs_slice_proxy96[3]};
end
always @(*) begin
    pcie_ptm_sniffer_litepcietlpdepacketizer_dispatcher_sel0 <= 1'd0;
    pcie_ptm_sniffer_litepcietlpdepacketizer_dispatcher_sel0 <= 1'd0;
    if ((({pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_payload_fmt, pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_payload_type} == 6'd52) | ({pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_payload_fmt, pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_payload_type} == 7'd116))) begin
        pcie_ptm_sniffer_litepcietlpdepacketizer_dispatcher_sel0 <= 1'd1;
    end
end
assign pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_valid = pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint1_valid;
assign pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint1_ready = pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_ready;
assign pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_first = pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint1_first;
assign pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_last = pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint1_last;
assign pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_payload_dat = pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint1_payload_dat;
assign pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_payload_be = pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint1_payload_be;
assign pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_payload_attr = pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_payload_header[13:12];
assign pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_payload_ep = pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_payload_header[14];
always @(*) begin
    pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_payload_fmt <= 2'd0;
    pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_payload_fmt <= pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint1_payload_fmt;
    pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_payload_fmt <= pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_payload_header[30:29];
end
assign pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_payload_length = pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_payload_header[9:0];
assign pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_payload_ln = pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_payload_header[17];
assign pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_payload_master_time = pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_payload_header[127:64];
assign pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_payload_message_code = pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_payload_header[39:32];
assign pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_payload_requester_id = pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_payload_header[63:48];
assign pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_payload_tc = pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_payload_header[22:20];
assign pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_payload_td = pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_payload_header[15];
assign pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_payload_th = pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_payload_header[16];
always @(*) begin
    pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_payload_type <= 5'd0;
    pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_payload_type <= pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint1_payload_type;
    pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_payload_type <= pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_payload_header[28:24];
end
assign pcie_ptm_sniffer_litepcietlpdepacketizer_ptm_source_valid = pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_valid;
assign pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_ready = pcie_ptm_sniffer_litepcietlpdepacketizer_ptm_source_ready;
assign pcie_ptm_sniffer_litepcietlpdepacketizer_ptm_source_first = pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_first;
assign pcie_ptm_sniffer_litepcietlpdepacketizer_ptm_source_last = pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_last;
assign pcie_ptm_sniffer_litepcietlpdepacketizer_ptm_source_payload_requester_id = pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_payload_requester_id;
assign pcie_ptm_sniffer_litepcietlpdepacketizer_ptm_source_payload_length = pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_payload_length;
assign pcie_ptm_sniffer_litepcietlpdepacketizer_ptm_source_payload_message_code = pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_payload_message_code;
assign pcie_ptm_sniffer_litepcietlpdepacketizer_ptm_source_payload_master_time = pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_payload_master_time;
assign pcie_ptm_sniffer_litepcietlpdepacketizer_ptm_source_payload_dat = pcie_ptm_sniffer_litepcietlpdepacketizer_tlp_ptm_payload_dat;
always @(*) begin
    pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_payload_dat <= 64'd0;
    pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_payload_dat[31:0] <= pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_dat[63:32];
    pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_payload_dat[63:32] <= pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_sink_payload_dat[31:0];
end
always @(*) begin
    pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_payload_be <= 8'd0;
    pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_payload_be[3:0] <= pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_be[7:4];
    pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_payload_be[7:4] <= pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_sink_payload_be[3:0];
end
always @(*) begin
    litepciecore_clockdomainsrenamer2_next_state <= 2'd0;
    litepciecore_clockdomainsrenamer2_next_value0 <= 32'd0;
    litepciecore_clockdomainsrenamer2_next_value1 <= 32'd0;
    litepciecore_clockdomainsrenamer2_next_value2 <= 32'd0;
    litepciecore_clockdomainsrenamer2_next_value3 <= 32'd0;
    litepciecore_clockdomainsrenamer2_next_value_ce0 <= 1'd0;
    litepciecore_clockdomainsrenamer2_next_value_ce1 <= 1'd0;
    litepciecore_clockdomainsrenamer2_next_value_ce2 <= 1'd0;
    litepciecore_clockdomainsrenamer2_next_value_ce3 <= 1'd0;
    pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_count_clockdomainsrenamer2_next_value2 <= 1'd0;
    pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_count_clockdomainsrenamer2_next_value_ce2 <= 1'd0;
    pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_first_clockdomainsrenamer2_next_value0 <= 1'd0;
    pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_first_clockdomainsrenamer2_next_value_ce0 <= 1'd0;
    pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_last_clockdomainsrenamer2_next_value1 <= 1'd0;
    pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_last_clockdomainsrenamer2_next_value_ce1 <= 1'd0;
    pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_sink_ready <= 1'd0;
    pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_first <= 1'd0;
    pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_last <= 1'd0;
    pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_valid <= 1'd0;
    litepciecore_clockdomainsrenamer2_next_state <= litepciecore_clockdomainsrenamer2_state;
    case (litepciecore_clockdomainsrenamer2_state)
        1'd1: begin
            pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_sink_ready <= 1'd1;
            if (pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_sink_valid) begin
                pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_count_clockdomainsrenamer2_next_value2 <= (pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_count + 1'd1);
                pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_count_clockdomainsrenamer2_next_value_ce2 <= 1'd1;
                litepciecore_clockdomainsrenamer2_next_value0 <= pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_payload_header[95:64];
                litepciecore_clockdomainsrenamer2_next_value_ce0 <= 1'd1;
                litepciecore_clockdomainsrenamer2_next_value1 <= pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_payload_header[127:96];
                litepciecore_clockdomainsrenamer2_next_value_ce1 <= 1'd1;
                litepciecore_clockdomainsrenamer2_next_value2 <= pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_sink_payload_dat[31:0];
                litepciecore_clockdomainsrenamer2_next_value_ce2 <= 1'd1;
                litepciecore_clockdomainsrenamer2_next_value3 <= pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_sink_payload_dat[63:32];
                litepciecore_clockdomainsrenamer2_next_value_ce3 <= 1'd1;
                if (pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_count) begin
                    if (pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_sink_last) begin
                        pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_last_clockdomainsrenamer2_next_value1 <= 1'd1;
                        pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_last_clockdomainsrenamer2_next_value_ce1 <= 1'd1;
                    end
                    litepciecore_clockdomainsrenamer2_next_state <= 2'd2;
                end
            end
        end
        2'd2: begin
            pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_valid <= (pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_sink_valid | pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_last);
            pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_first <= pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_first;
            pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_last <= (pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_sink_last | pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_last);
            if ((pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_valid & pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_ready)) begin
                pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_first_clockdomainsrenamer2_next_value0 <= 1'd0;
                pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_first_clockdomainsrenamer2_next_value_ce0 <= 1'd1;
                pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_sink_ready <= (1'd1 & (~pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_last));
                if (pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_last) begin
                    litepciecore_clockdomainsrenamer2_next_state <= 1'd0;
                end
            end
        end
        default: begin
            pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_first_clockdomainsrenamer2_next_value0 <= 1'd1;
            pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_first_clockdomainsrenamer2_next_value_ce0 <= 1'd1;
            pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_last_clockdomainsrenamer2_next_value1 <= 1'd0;
            pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_last_clockdomainsrenamer2_next_value_ce1 <= 1'd1;
            pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_count_clockdomainsrenamer2_next_value2 <= 1'd0;
            pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_count_clockdomainsrenamer2_next_value_ce2 <= 1'd1;
            if (pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_sink_valid) begin
                litepciecore_clockdomainsrenamer2_next_state <= 1'd1;
            end
        end
    endcase
end
always @(*) begin
    pcie_ptm_sniffer_litepcietlpdepacketizer_dispatcher_sel1 <= 1'd0;
    if (pcie_ptm_sniffer_litepcietlpdepacketizer_dispatcher_first) begin
        pcie_ptm_sniffer_litepcietlpdepacketizer_dispatcher_sel1 <= pcie_ptm_sniffer_litepcietlpdepacketizer_dispatcher_sel0;
    end else begin
        pcie_ptm_sniffer_litepcietlpdepacketizer_dispatcher_sel1 <= pcie_ptm_sniffer_litepcietlpdepacketizer_dispatcher_sel_ongoing;
    end
end
always @(*) begin
    pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_ready <= 1'd0;
    pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint0_first <= 1'd0;
    pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint0_last <= 1'd0;
    pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint0_payload_be <= 8'd0;
    pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint0_payload_dat <= 64'd0;
    pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint0_payload_fmt <= 2'd0;
    pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint0_payload_type <= 5'd0;
    pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint0_valid <= 1'd0;
    pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint1_first <= 1'd0;
    pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint1_last <= 1'd0;
    pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint1_payload_be <= 8'd0;
    pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint1_payload_dat <= 64'd0;
    pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint1_payload_fmt <= 2'd0;
    pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint1_payload_type <= 5'd0;
    pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint1_valid <= 1'd0;
    case (pcie_ptm_sniffer_litepcietlpdepacketizer_dispatcher_sel1)
        1'd0: begin
            pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint0_valid <= pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_valid;
            pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_ready <= pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint0_ready;
            pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint0_first <= pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_first;
            pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint0_last <= pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_last;
            pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint0_payload_fmt <= pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_payload_fmt;
            pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint0_payload_type <= pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_payload_type;
            pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint0_payload_dat <= pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_payload_dat;
            pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint0_payload_be <= pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_payload_be;
        end
        1'd1: begin
            pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint1_valid <= pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_valid;
            pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_ready <= pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint1_ready;
            pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint1_first <= pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_first;
            pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint1_last <= pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_last;
            pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint1_payload_fmt <= pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_payload_fmt;
            pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint1_payload_type <= pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_payload_type;
            pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint1_payload_dat <= pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_payload_dat;
            pcie_ptm_sniffer_litepcietlpdepacketizer_endpoint1_payload_be <= pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_payload_be;
        end
        default: begin
            pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_ready <= 1'd1;
        end
    endcase
end
always @(*) begin
    pcie_ptm_sniffer_litepcietlpdepacketizer_dispatcher_last <= 1'd0;
    if (pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_valid) begin
        pcie_ptm_sniffer_litepcietlpdepacketizer_dispatcher_last <= (pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_last & pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_ready);
    end
end
assign pcie_ptm_sniffer_litepcietlpdepacketizer_dispatcher_ongoing0 = ((pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_valid | pcie_ptm_sniffer_litepcietlpdepacketizer_dispatcher_ongoing1) & (~pcie_ptm_sniffer_litepcietlpdepacketizer_dispatcher_last));
assign pcie_ptm_sniffer_cdc_cdc_sink_valid = pcie_ptm_sniffer_cdc_sink_sink_valid;
assign pcie_ptm_sniffer_cdc_sink_sink_ready = pcie_ptm_sniffer_cdc_cdc_sink_ready;
assign pcie_ptm_sniffer_cdc_cdc_sink_first = pcie_ptm_sniffer_cdc_sink_sink_first;
assign pcie_ptm_sniffer_cdc_cdc_sink_last = pcie_ptm_sniffer_cdc_sink_sink_last;
assign pcie_ptm_sniffer_cdc_cdc_sink_payload_message_code = pcie_ptm_sniffer_cdc_sink_sink_payload_message_code;
assign pcie_ptm_sniffer_cdc_cdc_sink_payload_master_time = pcie_ptm_sniffer_cdc_sink_sink_payload_master_time;
assign pcie_ptm_sniffer_cdc_cdc_sink_payload_link_delay = pcie_ptm_sniffer_cdc_sink_sink_payload_link_delay;
assign pcie_ptm_sniffer_cdc_source_source_valid = pcie_ptm_sniffer_cdc_cdc_source_valid;
assign pcie_ptm_sniffer_cdc_cdc_source_ready = pcie_ptm_sniffer_cdc_source_source_ready;
assign pcie_ptm_sniffer_cdc_source_source_first = pcie_ptm_sniffer_cdc_cdc_source_first;
assign pcie_ptm_sniffer_cdc_source_source_last = pcie_ptm_sniffer_cdc_cdc_source_last;
assign pcie_ptm_sniffer_cdc_source_source_payload_message_code = pcie_ptm_sniffer_cdc_cdc_source_payload_message_code;
assign pcie_ptm_sniffer_cdc_source_source_payload_master_time = pcie_ptm_sniffer_cdc_cdc_source_payload_master_time;
assign pcie_ptm_sniffer_cdc_source_source_payload_link_delay = pcie_ptm_sniffer_cdc_cdc_source_payload_link_delay;
assign pcie_ptm_sniffer_cdc_cdc_asyncfifo_din = {pcie_ptm_sniffer_cdc_cdc_fifo_in_last, pcie_ptm_sniffer_cdc_cdc_fifo_in_first, pcie_ptm_sniffer_cdc_cdc_fifo_in_payload_link_delay, pcie_ptm_sniffer_cdc_cdc_fifo_in_payload_master_time, pcie_ptm_sniffer_cdc_cdc_fifo_in_payload_message_code};
assign {pcie_ptm_sniffer_cdc_cdc_fifo_out_last, pcie_ptm_sniffer_cdc_cdc_fifo_out_first, pcie_ptm_sniffer_cdc_cdc_fifo_out_payload_link_delay, pcie_ptm_sniffer_cdc_cdc_fifo_out_payload_master_time, pcie_ptm_sniffer_cdc_cdc_fifo_out_payload_message_code} = pcie_ptm_sniffer_cdc_cdc_asyncfifo_dout;
assign pcie_ptm_sniffer_cdc_cdc_sink_ready = pcie_ptm_sniffer_cdc_cdc_asyncfifo_writable;
assign pcie_ptm_sniffer_cdc_cdc_asyncfifo_we = pcie_ptm_sniffer_cdc_cdc_sink_valid;
assign pcie_ptm_sniffer_cdc_cdc_fifo_in_first = pcie_ptm_sniffer_cdc_cdc_sink_first;
assign pcie_ptm_sniffer_cdc_cdc_fifo_in_last = pcie_ptm_sniffer_cdc_cdc_sink_last;
assign pcie_ptm_sniffer_cdc_cdc_fifo_in_payload_message_code = pcie_ptm_sniffer_cdc_cdc_sink_payload_message_code;
assign pcie_ptm_sniffer_cdc_cdc_fifo_in_payload_master_time = pcie_ptm_sniffer_cdc_cdc_sink_payload_master_time;
assign pcie_ptm_sniffer_cdc_cdc_fifo_in_payload_link_delay = pcie_ptm_sniffer_cdc_cdc_sink_payload_link_delay;
assign pcie_ptm_sniffer_cdc_cdc_source_valid = pcie_ptm_sniffer_cdc_cdc_asyncfifo_readable;
assign pcie_ptm_sniffer_cdc_cdc_source_first = pcie_ptm_sniffer_cdc_cdc_fifo_out_first;
assign pcie_ptm_sniffer_cdc_cdc_source_last = pcie_ptm_sniffer_cdc_cdc_fifo_out_last;
assign pcie_ptm_sniffer_cdc_cdc_source_payload_message_code = pcie_ptm_sniffer_cdc_cdc_fifo_out_payload_message_code;
assign pcie_ptm_sniffer_cdc_cdc_source_payload_master_time = pcie_ptm_sniffer_cdc_cdc_fifo_out_payload_master_time;
assign pcie_ptm_sniffer_cdc_cdc_source_payload_link_delay = pcie_ptm_sniffer_cdc_cdc_fifo_out_payload_link_delay;
assign pcie_ptm_sniffer_cdc_cdc_asyncfifo_re = pcie_ptm_sniffer_cdc_cdc_source_ready;
assign pcie_ptm_sniffer_cdc_cdc_graycounter0_ce = (pcie_ptm_sniffer_cdc_cdc_asyncfifo_writable & pcie_ptm_sniffer_cdc_cdc_asyncfifo_we);
assign pcie_ptm_sniffer_cdc_cdc_graycounter1_ce = (pcie_ptm_sniffer_cdc_cdc_asyncfifo_readable & pcie_ptm_sniffer_cdc_cdc_asyncfifo_re);
assign pcie_ptm_sniffer_cdc_cdc_asyncfifo_writable = (((pcie_ptm_sniffer_cdc_cdc_graycounter0_q[2] == pcie_ptm_sniffer_cdc_cdc_consume_wdomain[2]) | (pcie_ptm_sniffer_cdc_cdc_graycounter0_q[1] == pcie_ptm_sniffer_cdc_cdc_consume_wdomain[1])) | (pcie_ptm_sniffer_cdc_cdc_graycounter0_q[0] != pcie_ptm_sniffer_cdc_cdc_consume_wdomain[0]));
assign pcie_ptm_sniffer_cdc_cdc_asyncfifo_readable = (pcie_ptm_sniffer_cdc_cdc_graycounter1_q != pcie_ptm_sniffer_cdc_cdc_produce_rdomain);
assign pcie_ptm_sniffer_cdc_cdc_wrport_adr = pcie_ptm_sniffer_cdc_cdc_graycounter0_q_binary[1:0];
assign pcie_ptm_sniffer_cdc_cdc_wrport_dat_w = pcie_ptm_sniffer_cdc_cdc_asyncfifo_din;
assign pcie_ptm_sniffer_cdc_cdc_wrport_we = pcie_ptm_sniffer_cdc_cdc_graycounter0_ce;
assign pcie_ptm_sniffer_cdc_cdc_rdport_adr = pcie_ptm_sniffer_cdc_cdc_graycounter1_q_next_binary[1:0];
assign pcie_ptm_sniffer_cdc_cdc_asyncfifo_dout = pcie_ptm_sniffer_cdc_cdc_rdport_dat_r;
always @(*) begin
    pcie_ptm_sniffer_cdc_cdc_graycounter0_q_next_binary <= 3'd0;
    if (pcie_ptm_sniffer_cdc_cdc_graycounter0_ce) begin
        pcie_ptm_sniffer_cdc_cdc_graycounter0_q_next_binary <= (pcie_ptm_sniffer_cdc_cdc_graycounter0_q_binary + 1'd1);
    end else begin
        pcie_ptm_sniffer_cdc_cdc_graycounter0_q_next_binary <= pcie_ptm_sniffer_cdc_cdc_graycounter0_q_binary;
    end
end
assign pcie_ptm_sniffer_cdc_cdc_graycounter0_q_next = (pcie_ptm_sniffer_cdc_cdc_graycounter0_q_next_binary ^ pcie_ptm_sniffer_cdc_cdc_graycounter0_q_next_binary[2:1]);
always @(*) begin
    pcie_ptm_sniffer_cdc_cdc_graycounter1_q_next_binary <= 3'd0;
    if (pcie_ptm_sniffer_cdc_cdc_graycounter1_ce) begin
        pcie_ptm_sniffer_cdc_cdc_graycounter1_q_next_binary <= (pcie_ptm_sniffer_cdc_cdc_graycounter1_q_binary + 1'd1);
    end else begin
        pcie_ptm_sniffer_cdc_cdc_graycounter1_q_next_binary <= pcie_ptm_sniffer_cdc_cdc_graycounter1_q_binary;
    end
end
assign pcie_ptm_sniffer_cdc_cdc_graycounter1_q_next = (pcie_ptm_sniffer_cdc_cdc_graycounter1_q_next_binary ^ pcie_ptm_sniffer_cdc_cdc_graycounter1_q_next_binary[2:1]);
assign ptm_capabilities_reg = ({depacketizer_conf_source_payload_ext_reg, depacketizer_conf_source_payload_register_no} - 7'd107);
assign ptm_capabilities_mem_ctrl_port_adr = 2'd2;
assign ptm_capabilities_ptm_enable = ((ptm_capabilities_mem_ctrl_port_dat_r >>> 1'd0) & 1'd1);
assign ptm_capabilities_ptm_root_select = ((ptm_capabilities_mem_ctrl_port_dat_r >>> 1'd1) & 1'd1);
assign ptm_capabilities_ptm_effective_granularity = ((ptm_capabilities_mem_ctrl_port_dat_r >>> 4'd8) & 8'd255);
always @(*) begin
    depacketizer_conf_source_ready <= 1'd0;
    litepciecore_ptmcapabilities_next_state <= 2'd0;
    ptm_capabilities_dat_ptmcapabilities_next_value <= 32'd0;
    ptm_capabilities_dat_ptmcapabilities_next_value_ce <= 1'd0;
    ptm_capabilities_mem_rd_port_adr <= 2'd0;
    ptm_capabilities_mem_wr_port_adr <= 2'd0;
    ptm_capabilities_mem_wr_port_dat_w <= 32'd0;
    ptm_capabilities_mem_wr_port_we <= 1'd0;
    ptm_capabilities_sink_first <= 1'd0;
    ptm_capabilities_sink_last <= 1'd0;
    ptm_capabilities_sink_payload_adr <= 32'd0;
    ptm_capabilities_sink_payload_cmp_id <= 16'd0;
    ptm_capabilities_sink_payload_dat <= 64'd0;
    ptm_capabilities_sink_payload_err <= 1'd0;
    ptm_capabilities_sink_payload_len <= 10'd0;
    ptm_capabilities_sink_payload_req_id <= 16'd0;
    ptm_capabilities_sink_payload_tag <= 8'd0;
    ptm_capabilities_sink_valid <= 1'd0;
    litepciecore_ptmcapabilities_next_state <= litepciecore_ptmcapabilities_state;
    case (litepciecore_ptmcapabilities_state)
        1'd1: begin
            depacketizer_conf_source_ready <= 1'd1;
            ptm_capabilities_mem_wr_port_adr <= ptm_capabilities_reg;
            ptm_capabilities_mem_wr_port_we <= 1'd1;
            ptm_capabilities_mem_wr_port_dat_w <= depacketizer_conf_source_payload_dat;
            litepciecore_ptmcapabilities_next_state <= 1'd0;
        end
        2'd2: begin
            ptm_capabilities_mem_rd_port_adr <= ptm_capabilities_reg;
            ptm_capabilities_dat_ptmcapabilities_next_value <= ptm_capabilities_mem_rd_port_dat_r;
            ptm_capabilities_dat_ptmcapabilities_next_value_ce <= 1'd1;
            litepciecore_ptmcapabilities_next_state <= 2'd3;
        end
        2'd3: begin
            ptm_capabilities_sink_valid <= 1'd1;
            ptm_capabilities_sink_first <= 1'd1;
            ptm_capabilities_sink_last <= 1'd1;
            ptm_capabilities_sink_payload_len <= 1'd1;
            ptm_capabilities_sink_payload_err <= 1'd0;
            ptm_capabilities_sink_payload_tag <= depacketizer_conf_source_payload_tag;
            ptm_capabilities_sink_payload_adr <= 1'd0;
            ptm_capabilities_sink_payload_cmp_id <= s7pciephy_id;
            ptm_capabilities_sink_payload_req_id <= depacketizer_conf_source_payload_req_id;
            ptm_capabilities_sink_payload_dat <= ptm_capabilities_dat;
            if ((ptm_capabilities_sink_valid & ptm_capabilities_sink_ready)) begin
                depacketizer_conf_source_ready <= 1'd1;
                litepciecore_ptmcapabilities_next_state <= 1'd0;
            end
        end
        default: begin
            if (depacketizer_conf_source_valid) begin
                if (depacketizer_conf_source_payload_we) begin
                    litepciecore_ptmcapabilities_next_state <= 1'd1;
                end else begin
                    litepciecore_ptmcapabilities_next_state <= 2'd2;
                end
            end
        end
    endcase
end
assign ptm_requester_enable0 = ptm_requester_enable1;
assign ptm_requester_trigger0 = ptm_requester_trigger1;
assign ptm_requester_valid1 = ptm_requester_valid0;
assign ptm_requester_busy1 = ptm_requester_busy0;
assign ptm_requester_master_time_status = ptm_requester_master_time;
assign ptm_requester_link_delay_status = ptm_requester_link_delay;
assign ptm_requester_t1_time_status = ptm_requester_t1;
assign ptm_requester_t4_time_status = ptm_requester_t4;
assign time_clk = ptm_requester_time_clk;
assign time_rst = ptm_requester_time_rst;
assign ptm_requester_sink_sink_valid = 1'd1;
assign ptm_requester_sink_sink_payload_time = ptm_requester_time0;
assign ptm_requester_source_source_ready = 1'd1;
assign ptm_requester_reset = (~ptm_requester_enable0);
assign pcie_ptm_sniffer_source_source_ready = 1'd1;
assign ptm_requester_cdc_sink_valid = ptm_requester_sink_sink_valid;
assign ptm_requester_sink_sink_ready = ptm_requester_cdc_sink_ready;
assign ptm_requester_cdc_sink_first = ptm_requester_sink_sink_first;
assign ptm_requester_cdc_sink_last = ptm_requester_sink_sink_last;
assign ptm_requester_cdc_sink_payload_time = ptm_requester_sink_sink_payload_time;
assign ptm_requester_source_source_valid = ptm_requester_cdc_source_valid;
assign ptm_requester_cdc_source_ready = ptm_requester_source_source_ready;
assign ptm_requester_source_source_first = ptm_requester_cdc_source_first;
assign ptm_requester_source_source_last = ptm_requester_cdc_source_last;
assign ptm_requester_source_source_payload_time = ptm_requester_cdc_source_payload_time;
assign ptm_requester_cdc_asyncfifo_din = {ptm_requester_cdc_fifo_in_last, ptm_requester_cdc_fifo_in_first, ptm_requester_cdc_fifo_in_payload_time};
assign {ptm_requester_cdc_fifo_out_last, ptm_requester_cdc_fifo_out_first, ptm_requester_cdc_fifo_out_payload_time} = ptm_requester_cdc_asyncfifo_dout;
assign ptm_requester_cdc_sink_ready = ptm_requester_cdc_asyncfifo_writable;
assign ptm_requester_cdc_asyncfifo_we = ptm_requester_cdc_sink_valid;
assign ptm_requester_cdc_fifo_in_first = ptm_requester_cdc_sink_first;
assign ptm_requester_cdc_fifo_in_last = ptm_requester_cdc_sink_last;
assign ptm_requester_cdc_fifo_in_payload_time = ptm_requester_cdc_sink_payload_time;
assign ptm_requester_cdc_source_valid = ptm_requester_cdc_asyncfifo_readable;
assign ptm_requester_cdc_source_first = ptm_requester_cdc_fifo_out_first;
assign ptm_requester_cdc_source_last = ptm_requester_cdc_fifo_out_last;
assign ptm_requester_cdc_source_payload_time = ptm_requester_cdc_fifo_out_payload_time;
assign ptm_requester_cdc_asyncfifo_re = ptm_requester_cdc_source_ready;
assign ptm_requester_cdc_graycounter0_ce = (ptm_requester_cdc_asyncfifo_writable & ptm_requester_cdc_asyncfifo_we);
assign ptm_requester_cdc_graycounter1_ce = (ptm_requester_cdc_asyncfifo_readable & ptm_requester_cdc_asyncfifo_re);
assign ptm_requester_cdc_asyncfifo_writable = (((ptm_requester_cdc_graycounter0_q[2] == ptm_requester_cdc_consume_wdomain[2]) | (ptm_requester_cdc_graycounter0_q[1] == ptm_requester_cdc_consume_wdomain[1])) | (ptm_requester_cdc_graycounter0_q[0] != ptm_requester_cdc_consume_wdomain[0]));
assign ptm_requester_cdc_asyncfifo_readable = (ptm_requester_cdc_graycounter1_q != ptm_requester_cdc_produce_rdomain);
assign ptm_requester_cdc_wrport_adr = ptm_requester_cdc_graycounter0_q_binary[1:0];
assign ptm_requester_cdc_wrport_dat_w = ptm_requester_cdc_asyncfifo_din;
assign ptm_requester_cdc_wrport_we = ptm_requester_cdc_graycounter0_ce;
assign ptm_requester_cdc_rdport_adr = ptm_requester_cdc_graycounter1_q_next_binary[1:0];
assign ptm_requester_cdc_asyncfifo_dout = ptm_requester_cdc_rdport_dat_r;
always @(*) begin
    ptm_requester_cdc_graycounter0_q_next_binary <= 3'd0;
    if (ptm_requester_cdc_graycounter0_ce) begin
        ptm_requester_cdc_graycounter0_q_next_binary <= (ptm_requester_cdc_graycounter0_q_binary + 1'd1);
    end else begin
        ptm_requester_cdc_graycounter0_q_next_binary <= ptm_requester_cdc_graycounter0_q_binary;
    end
end
assign ptm_requester_cdc_graycounter0_q_next = (ptm_requester_cdc_graycounter0_q_next_binary ^ ptm_requester_cdc_graycounter0_q_next_binary[2:1]);
always @(*) begin
    ptm_requester_cdc_graycounter1_q_next_binary <= 3'd0;
    if (ptm_requester_cdc_graycounter1_ce) begin
        ptm_requester_cdc_graycounter1_q_next_binary <= (ptm_requester_cdc_graycounter1_q_binary + 1'd1);
    end else begin
        ptm_requester_cdc_graycounter1_q_next_binary <= ptm_requester_cdc_graycounter1_q_binary;
    end
end
assign ptm_requester_cdc_graycounter1_q_next = (ptm_requester_cdc_graycounter1_q_next_binary ^ ptm_requester_cdc_graycounter1_q_next_binary[2:1]);
assign ptm_requester_done = (ptm_requester_count == 1'd0);
always @(*) begin
    litepciecore_ptmrequester_next_state <= 3'd0;
    packetizer_ptm_sink_first <= 1'd0;
    packetizer_ptm_sink_last <= 1'd0;
    packetizer_ptm_sink_payload_length <= 10'd0;
    packetizer_ptm_sink_payload_message_code <= 8'd0;
    packetizer_ptm_sink_payload_request <= 1'd0;
    packetizer_ptm_sink_payload_requester_id <= 16'd0;
    packetizer_ptm_sink_payload_response <= 1'd0;
    packetizer_ptm_sink_valid <= 1'd0;
    ptm_requester_busy0 <= 1'd0;
    ptm_requester_link_delay_ptmrequester_next_value3 <= 32'd0;
    ptm_requester_link_delay_ptmrequester_next_value_ce3 <= 1'd0;
    ptm_requester_master_time_ptmrequester_next_value2 <= 64'd0;
    ptm_requester_master_time_ptmrequester_next_value_ce2 <= 1'd0;
    ptm_requester_t1_ptmrequester_next_value0 <= 64'd0;
    ptm_requester_t1_ptmrequester_next_value_ce0 <= 1'd0;
    ptm_requester_t4_ptmrequester_next_value4 <= 64'd0;
    ptm_requester_t4_ptmrequester_next_value_ce4 <= 1'd0;
    ptm_requester_update_ptmrequester_next_value1 <= 1'd0;
    ptm_requester_update_ptmrequester_next_value_ce1 <= 1'd0;
    ptm_requester_valid0 <= 1'd0;
    ptm_requester_wait <= 1'd0;
    litepciecore_ptmrequester_next_state <= litepciecore_ptmrequester_state;
    case (litepciecore_ptmrequester_state)
        1'd1: begin
            if (ptm_requester_trigger0) begin
                litepciecore_ptmrequester_next_state <= 2'd2;
            end
        end
        2'd2: begin
            ptm_requester_busy0 <= 1'd1;
            packetizer_ptm_sink_valid <= 1'd1;
            packetizer_ptm_sink_payload_request <= 1'd1;
            packetizer_ptm_sink_payload_response <= 1'd0;
            packetizer_ptm_sink_first <= 1'd1;
            packetizer_ptm_sink_last <= 1'd1;
            packetizer_ptm_sink_payload_length <= 1'd0;
            packetizer_ptm_sink_payload_requester_id <= s7pciephy_id;
            packetizer_ptm_sink_payload_message_code <= 7'd82;
            if (packetizer_ptm_sink_ready) begin
                ptm_requester_t1_ptmrequester_next_value0 <= ptm_requester_time1;
                ptm_requester_t1_ptmrequester_next_value_ce0 <= 1'd1;
                litepciecore_ptmrequester_next_state <= 2'd3;
            end
        end
        2'd3: begin
            ptm_requester_busy0 <= 1'd1;
            if (pcie_ptm_sniffer_source_source_valid) begin
                if ((pcie_ptm_sniffer_source_source_payload_message_code == 7'd83)) begin
                    if ((pcie_ptm_sniffer_source_source_payload_master_time == 1'd0)) begin
                        litepciecore_ptmrequester_next_state <= 3'd4;
                    end else begin
                        ptm_requester_update_ptmrequester_next_value1 <= 1'd1;
                        ptm_requester_update_ptmrequester_next_value_ce1 <= 1'd1;
                        ptm_requester_master_time_ptmrequester_next_value2 <= pcie_ptm_sniffer_source_source_payload_master_time;
                        ptm_requester_master_time_ptmrequester_next_value_ce2 <= 1'd1;
                        ptm_requester_link_delay_ptmrequester_next_value3 <= pcie_ptm_sniffer_source_source_payload_link_delay;
                        ptm_requester_link_delay_ptmrequester_next_value_ce3 <= 1'd1;
                        ptm_requester_t4_ptmrequester_next_value4 <= ptm_requester_time1;
                        ptm_requester_t4_ptmrequester_next_value_ce4 <= 1'd1;
                        litepciecore_ptmrequester_next_state <= 3'd5;
                    end
                end
            end
        end
        3'd4: begin
            ptm_requester_wait <= 1'd1;
            if (ptm_requester_done) begin
                litepciecore_ptmrequester_next_state <= 2'd2;
            end
        end
        3'd5: begin
            ptm_requester_valid0 <= 1'd1;
            ptm_requester_update_ptmrequester_next_value1 <= 1'd0;
            ptm_requester_update_ptmrequester_next_value_ce1 <= 1'd1;
            if (ptm_requester_trigger0) begin
                litepciecore_ptmrequester_next_state <= 2'd2;
            end
            if (ptm_requester_invalidate) begin
                litepciecore_ptmrequester_next_state <= 1'd1;
            end
        end
        default: begin
            if (ptm_requester_enable0) begin
                litepciecore_ptmrequester_next_state <= 1'd1;
            end
        end
    endcase
end
always @(*) begin
    litepciecore_adr <= 14'd0;
    litepciecore_dat_w <= 32'd0;
    litepciecore_we <= 1'd0;
    litepciecore_wishbone2csr_next_state <= 1'd0;
    litepciecore_wishbone_ack <= 1'd0;
    litepciecore_wishbone_dat_r <= 32'd0;
    litepciecore_wishbone2csr_next_state <= litepciecore_wishbone2csr_state;
    case (litepciecore_wishbone2csr_state)
        1'd1: begin
            litepciecore_wishbone_ack <= 1'd1;
            litepciecore_wishbone_dat_r <= litepciecore_dat_r;
            litepciecore_wishbone2csr_next_state <= 1'd0;
        end
        default: begin
            litepciecore_dat_w <= litepciecore_wishbone_dat_w;
            if ((litepciecore_wishbone_cyc & litepciecore_wishbone_stb)) begin
                litepciecore_adr <= litepciecore_wishbone_adr;
                litepciecore_we <= (litepciecore_wishbone_we & (litepciecore_wishbone_sel != 1'd0));
                litepciecore_wishbone2csr_next_state <= 1'd1;
            end
        end
    endcase
end
assign csrbank0_sel = (interface0_bank_bus_adr[13:9] == 1'd0);
assign csrbank0_reset0_r = interface0_bank_bus_dat_w[1:0];
always @(*) begin
    csrbank0_reset0_re <= 1'd0;
    csrbank0_reset0_we <= 1'd0;
    if ((csrbank0_sel & (interface0_bank_bus_adr[8:0] == 1'd0))) begin
        csrbank0_reset0_re <= interface0_bank_bus_we;
        csrbank0_reset0_we <= (~interface0_bank_bus_we);
    end
end
assign csrbank0_scratch0_r = interface0_bank_bus_dat_w[31:0];
always @(*) begin
    csrbank0_scratch0_re <= 1'd0;
    csrbank0_scratch0_we <= 1'd0;
    if ((csrbank0_sel & (interface0_bank_bus_adr[8:0] == 1'd1))) begin
        csrbank0_scratch0_re <= interface0_bank_bus_we;
        csrbank0_scratch0_we <= (~interface0_bank_bus_we);
    end
end
assign csrbank0_bus_errors_r = interface0_bank_bus_dat_w[31:0];
always @(*) begin
    csrbank0_bus_errors_re <= 1'd0;
    csrbank0_bus_errors_we <= 1'd0;
    if ((csrbank0_sel & (interface0_bank_bus_adr[8:0] == 2'd2))) begin
        csrbank0_bus_errors_re <= interface0_bank_bus_we;
        csrbank0_bus_errors_we <= (~interface0_bank_bus_we);
    end
end
always @(*) begin
    soc_rst <= 1'd0;
    if (reset_re) begin
        soc_rst <= reset_storage[0];
    end
end
assign cpu_rst = reset_storage[1];
assign csrbank0_reset0_w = reset_storage[1:0];
assign csrbank0_scratch0_w = scratch_storage[31:0];
assign csrbank0_bus_errors_w = bus_errors_status[31:0];
assign bus_errors_we = csrbank0_bus_errors_we;
assign sram0_sel = (interface0_sram_bus_adr[13:9] == 3'd7);
always @(*) begin
    interface0_sram_bus_dat_r <= 32'd0;
    if (sram0_sel_r) begin
        interface0_sram_bus_dat_r <= sram0_dat_r;
    end
end
assign sram0_adr = interface0_sram_bus_adr[5:0];
assign csrbank1_sel = (interface1_bank_bus_adr[13:9] == 4'd8);
assign csrbank1_writer_enable0_r = interface1_bank_bus_dat_w[1:0];
always @(*) begin
    csrbank1_writer_enable0_re <= 1'd0;
    csrbank1_writer_enable0_we <= 1'd0;
    if ((csrbank1_sel & (interface1_bank_bus_adr[8:0] == 1'd0))) begin
        csrbank1_writer_enable0_re <= interface1_bank_bus_we;
        csrbank1_writer_enable0_we <= (~interface1_bank_bus_we);
    end
end
assign csrbank1_writer_table_value1_r = interface1_bank_bus_dat_w[25:0];
always @(*) begin
    csrbank1_writer_table_value1_re <= 1'd0;
    csrbank1_writer_table_value1_we <= 1'd0;
    if ((csrbank1_sel & (interface1_bank_bus_adr[8:0] == 1'd1))) begin
        csrbank1_writer_table_value1_re <= interface1_bank_bus_we;
        csrbank1_writer_table_value1_we <= (~interface1_bank_bus_we);
    end
end
assign csrbank1_writer_table_value0_r = interface1_bank_bus_dat_w[31:0];
always @(*) begin
    csrbank1_writer_table_value0_re <= 1'd0;
    csrbank1_writer_table_value0_we <= 1'd0;
    if ((csrbank1_sel & (interface1_bank_bus_adr[8:0] == 2'd2))) begin
        csrbank1_writer_table_value0_re <= interface1_bank_bus_we;
        csrbank1_writer_table_value0_we <= (~interface1_bank_bus_we);
    end
end
assign csrbank1_writer_table_we0_r = interface1_bank_bus_dat_w[31:0];
always @(*) begin
    csrbank1_writer_table_we0_re <= 1'd0;
    csrbank1_writer_table_we0_we <= 1'd0;
    if ((csrbank1_sel & (interface1_bank_bus_adr[8:0] == 2'd3))) begin
        csrbank1_writer_table_we0_re <= interface1_bank_bus_we;
        csrbank1_writer_table_we0_we <= (~interface1_bank_bus_we);
    end
end
assign csrbank1_writer_table_loop_prog_n0_r = interface1_bank_bus_dat_w[0];
always @(*) begin
    csrbank1_writer_table_loop_prog_n0_re <= 1'd0;
    csrbank1_writer_table_loop_prog_n0_we <= 1'd0;
    if ((csrbank1_sel & (interface1_bank_bus_adr[8:0] == 3'd4))) begin
        csrbank1_writer_table_loop_prog_n0_re <= interface1_bank_bus_we;
        csrbank1_writer_table_loop_prog_n0_we <= (~interface1_bank_bus_we);
    end
end
assign csrbank1_writer_table_loop_status_r = interface1_bank_bus_dat_w[31:0];
always @(*) begin
    csrbank1_writer_table_loop_status_re <= 1'd0;
    csrbank1_writer_table_loop_status_we <= 1'd0;
    if ((csrbank1_sel & (interface1_bank_bus_adr[8:0] == 3'd5))) begin
        csrbank1_writer_table_loop_status_re <= interface1_bank_bus_we;
        csrbank1_writer_table_loop_status_we <= (~interface1_bank_bus_we);
    end
end
assign csrbank1_writer_table_level_r = interface1_bank_bus_dat_w[8:0];
always @(*) begin
    csrbank1_writer_table_level_re <= 1'd0;
    csrbank1_writer_table_level_we <= 1'd0;
    if ((csrbank1_sel & (interface1_bank_bus_adr[8:0] == 3'd6))) begin
        csrbank1_writer_table_level_re <= interface1_bank_bus_we;
        csrbank1_writer_table_level_we <= (~interface1_bank_bus_we);
    end
end
assign csrbank1_writer_table_reset0_r = interface1_bank_bus_dat_w[0];
always @(*) begin
    csrbank1_writer_table_reset0_re <= 1'd0;
    csrbank1_writer_table_reset0_we <= 1'd0;
    if ((csrbank1_sel & (interface1_bank_bus_adr[8:0] == 3'd7))) begin
        csrbank1_writer_table_reset0_re <= interface1_bank_bus_we;
        csrbank1_writer_table_reset0_we <= (~interface1_bank_bus_we);
    end
end
assign csrbank1_reader_enable0_r = interface1_bank_bus_dat_w[1:0];
always @(*) begin
    csrbank1_reader_enable0_re <= 1'd0;
    csrbank1_reader_enable0_we <= 1'd0;
    if ((csrbank1_sel & (interface1_bank_bus_adr[8:0] == 4'd8))) begin
        csrbank1_reader_enable0_re <= interface1_bank_bus_we;
        csrbank1_reader_enable0_we <= (~interface1_bank_bus_we);
    end
end
assign csrbank1_reader_table_value1_r = interface1_bank_bus_dat_w[25:0];
always @(*) begin
    csrbank1_reader_table_value1_re <= 1'd0;
    csrbank1_reader_table_value1_we <= 1'd0;
    if ((csrbank1_sel & (interface1_bank_bus_adr[8:0] == 4'd9))) begin
        csrbank1_reader_table_value1_re <= interface1_bank_bus_we;
        csrbank1_reader_table_value1_we <= (~interface1_bank_bus_we);
    end
end
assign csrbank1_reader_table_value0_r = interface1_bank_bus_dat_w[31:0];
always @(*) begin
    csrbank1_reader_table_value0_re <= 1'd0;
    csrbank1_reader_table_value0_we <= 1'd0;
    if ((csrbank1_sel & (interface1_bank_bus_adr[8:0] == 4'd10))) begin
        csrbank1_reader_table_value0_re <= interface1_bank_bus_we;
        csrbank1_reader_table_value0_we <= (~interface1_bank_bus_we);
    end
end
assign csrbank1_reader_table_we0_r = interface1_bank_bus_dat_w[31:0];
always @(*) begin
    csrbank1_reader_table_we0_re <= 1'd0;
    csrbank1_reader_table_we0_we <= 1'd0;
    if ((csrbank1_sel & (interface1_bank_bus_adr[8:0] == 4'd11))) begin
        csrbank1_reader_table_we0_re <= interface1_bank_bus_we;
        csrbank1_reader_table_we0_we <= (~interface1_bank_bus_we);
    end
end
assign csrbank1_reader_table_loop_prog_n0_r = interface1_bank_bus_dat_w[0];
always @(*) begin
    csrbank1_reader_table_loop_prog_n0_re <= 1'd0;
    csrbank1_reader_table_loop_prog_n0_we <= 1'd0;
    if ((csrbank1_sel & (interface1_bank_bus_adr[8:0] == 4'd12))) begin
        csrbank1_reader_table_loop_prog_n0_re <= interface1_bank_bus_we;
        csrbank1_reader_table_loop_prog_n0_we <= (~interface1_bank_bus_we);
    end
end
assign csrbank1_reader_table_loop_status_r = interface1_bank_bus_dat_w[31:0];
always @(*) begin
    csrbank1_reader_table_loop_status_re <= 1'd0;
    csrbank1_reader_table_loop_status_we <= 1'd0;
    if ((csrbank1_sel & (interface1_bank_bus_adr[8:0] == 4'd13))) begin
        csrbank1_reader_table_loop_status_re <= interface1_bank_bus_we;
        csrbank1_reader_table_loop_status_we <= (~interface1_bank_bus_we);
    end
end
assign csrbank1_reader_table_level_r = interface1_bank_bus_dat_w[8:0];
always @(*) begin
    csrbank1_reader_table_level_re <= 1'd0;
    csrbank1_reader_table_level_we <= 1'd0;
    if ((csrbank1_sel & (interface1_bank_bus_adr[8:0] == 4'd14))) begin
        csrbank1_reader_table_level_re <= interface1_bank_bus_we;
        csrbank1_reader_table_level_we <= (~interface1_bank_bus_we);
    end
end
assign csrbank1_reader_table_reset0_r = interface1_bank_bus_dat_w[0];
always @(*) begin
    csrbank1_reader_table_reset0_re <= 1'd0;
    csrbank1_reader_table_reset0_we <= 1'd0;
    if ((csrbank1_sel & (interface1_bank_bus_adr[8:0] == 4'd15))) begin
        csrbank1_reader_table_reset0_re <= interface1_bank_bus_we;
        csrbank1_reader_table_reset0_we <= (~interface1_bank_bus_we);
    end
end
assign csrbank1_loopback_enable0_r = interface1_bank_bus_dat_w[0];
always @(*) begin
    csrbank1_loopback_enable0_re <= 1'd0;
    csrbank1_loopback_enable0_we <= 1'd0;
    if ((csrbank1_sel & (interface1_bank_bus_adr[8:0] == 5'd16))) begin
        csrbank1_loopback_enable0_re <= interface1_bank_bus_we;
        csrbank1_loopback_enable0_we <= (~interface1_bank_bus_we);
    end
end
assign csrbank1_synchronizer_bypass0_r = interface1_bank_bus_dat_w[0];
always @(*) begin
    csrbank1_synchronizer_bypass0_re <= 1'd0;
    csrbank1_synchronizer_bypass0_we <= 1'd0;
    if ((csrbank1_sel & (interface1_bank_bus_adr[8:0] == 5'd17))) begin
        csrbank1_synchronizer_bypass0_re <= interface1_bank_bus_we;
        csrbank1_synchronizer_bypass0_we <= (~interface1_bank_bus_we);
    end
end
assign csrbank1_synchronizer_enable0_r = interface1_bank_bus_dat_w[1:0];
always @(*) begin
    csrbank1_synchronizer_enable0_re <= 1'd0;
    csrbank1_synchronizer_enable0_we <= 1'd0;
    if ((csrbank1_sel & (interface1_bank_bus_adr[8:0] == 5'd18))) begin
        csrbank1_synchronizer_enable0_re <= interface1_bank_bus_we;
        csrbank1_synchronizer_enable0_we <= (~interface1_bank_bus_we);
    end
end
assign csrbank1_buffering_reader_fifo_control0_r = interface1_bank_bus_dat_w[31:0];
always @(*) begin
    csrbank1_buffering_reader_fifo_control0_re <= 1'd0;
    csrbank1_buffering_reader_fifo_control0_we <= 1'd0;
    if ((csrbank1_sel & (interface1_bank_bus_adr[8:0] == 5'd19))) begin
        csrbank1_buffering_reader_fifo_control0_re <= interface1_bank_bus_we;
        csrbank1_buffering_reader_fifo_control0_we <= (~interface1_bank_bus_we);
    end
end
assign csrbank1_buffering_reader_fifo_status_r = interface1_bank_bus_dat_w[23:0];
always @(*) begin
    csrbank1_buffering_reader_fifo_status_re <= 1'd0;
    csrbank1_buffering_reader_fifo_status_we <= 1'd0;
    if ((csrbank1_sel & (interface1_bank_bus_adr[8:0] == 5'd20))) begin
        csrbank1_buffering_reader_fifo_status_re <= interface1_bank_bus_we;
        csrbank1_buffering_reader_fifo_status_we <= (~interface1_bank_bus_we);
    end
end
assign csrbank1_buffering_writer_fifo_control0_r = interface1_bank_bus_dat_w[31:0];
always @(*) begin
    csrbank1_buffering_writer_fifo_control0_re <= 1'd0;
    csrbank1_buffering_writer_fifo_control0_we <= 1'd0;
    if ((csrbank1_sel & (interface1_bank_bus_adr[8:0] == 5'd21))) begin
        csrbank1_buffering_writer_fifo_control0_re <= interface1_bank_bus_we;
        csrbank1_buffering_writer_fifo_control0_we <= (~interface1_bank_bus_we);
    end
end
assign csrbank1_buffering_writer_fifo_status_r = interface1_bank_bus_dat_w[23:0];
always @(*) begin
    csrbank1_buffering_writer_fifo_status_re <= 1'd0;
    csrbank1_buffering_writer_fifo_status_we <= 1'd0;
    if ((csrbank1_sel & (interface1_bank_bus_adr[8:0] == 5'd22))) begin
        csrbank1_buffering_writer_fifo_status_re <= interface1_bank_bus_we;
        csrbank1_buffering_writer_fifo_status_we <= (~interface1_bank_bus_we);
    end
end
assign litepciedma_writer_monitor_reset_reset_r = interface1_bank_bus_dat_w[0];
always @(*) begin
    litepciedma_writer_monitor_reset_reset_re <= 1'd0;
    litepciedma_writer_monitor_reset_reset_we <= 1'd0;
    if ((csrbank1_sel & (interface1_bank_bus_adr[8:0] == 5'd23))) begin
        litepciedma_writer_monitor_reset_reset_re <= interface1_bank_bus_we;
        litepciedma_writer_monitor_reset_reset_we <= (~interface1_bank_bus_we);
    end
end
assign litepciedma_writer_monitor_latch_latch_r = interface1_bank_bus_dat_w[0];
always @(*) begin
    litepciedma_writer_monitor_latch_latch_re <= 1'd0;
    litepciedma_writer_monitor_latch_latch_we <= 1'd0;
    if ((csrbank1_sel & (interface1_bank_bus_adr[8:0] == 5'd24))) begin
        litepciedma_writer_monitor_latch_latch_re <= interface1_bank_bus_we;
        litepciedma_writer_monitor_latch_latch_we <= (~interface1_bank_bus_we);
    end
end
assign csrbank1_writer_monitor_overflows_r = interface1_bank_bus_dat_w[15:0];
always @(*) begin
    csrbank1_writer_monitor_overflows_re <= 1'd0;
    csrbank1_writer_monitor_overflows_we <= 1'd0;
    if ((csrbank1_sel & (interface1_bank_bus_adr[8:0] == 5'd25))) begin
        csrbank1_writer_monitor_overflows_re <= interface1_bank_bus_we;
        csrbank1_writer_monitor_overflows_we <= (~interface1_bank_bus_we);
    end
end
assign litepciedma_reader_monitor_reset_reset_r = interface1_bank_bus_dat_w[0];
always @(*) begin
    litepciedma_reader_monitor_reset_reset_re <= 1'd0;
    litepciedma_reader_monitor_reset_reset_we <= 1'd0;
    if ((csrbank1_sel & (interface1_bank_bus_adr[8:0] == 5'd26))) begin
        litepciedma_reader_monitor_reset_reset_re <= interface1_bank_bus_we;
        litepciedma_reader_monitor_reset_reset_we <= (~interface1_bank_bus_we);
    end
end
assign litepciedma_reader_monitor_latch_latch_r = interface1_bank_bus_dat_w[0];
always @(*) begin
    litepciedma_reader_monitor_latch_latch_re <= 1'd0;
    litepciedma_reader_monitor_latch_latch_we <= 1'd0;
    if ((csrbank1_sel & (interface1_bank_bus_adr[8:0] == 5'd27))) begin
        litepciedma_reader_monitor_latch_latch_re <= interface1_bank_bus_we;
        litepciedma_reader_monitor_latch_latch_we <= (~interface1_bank_bus_we);
    end
end
assign csrbank1_reader_monitor_underflows_r = interface1_bank_bus_dat_w[15:0];
always @(*) begin
    csrbank1_reader_monitor_underflows_re <= 1'd0;
    csrbank1_reader_monitor_underflows_we <= 1'd0;
    if ((csrbank1_sel & (interface1_bank_bus_adr[8:0] == 5'd28))) begin
        csrbank1_reader_monitor_underflows_re <= interface1_bank_bus_we;
        csrbank1_reader_monitor_underflows_we <= (~interface1_bank_bus_we);
    end
end
assign csrbank1_writer_enable0_w = litepciedma_writer_enable_storage[1:0];
assign litepciedma_writer_table_address_lsb = litepciedma_writer_table_value_storage[31:0];
assign litepciedma_writer_table_length = litepciedma_writer_table_value_storage[55:32];
assign litepciedma_writer_table_irq_disable = litepciedma_writer_table_value_storage[56];
assign litepciedma_writer_table_last_disable = litepciedma_writer_table_value_storage[57];
assign csrbank1_writer_table_value1_w = litepciedma_writer_table_value_storage[57:32];
assign csrbank1_writer_table_value0_w = litepciedma_writer_table_value_storage[31:0];
assign litepciedma_writer_table_address_msb = litepciedma_writer_table_we_storage[31:0];
assign csrbank1_writer_table_we0_w = litepciedma_writer_table_we_storage[31:0];
assign csrbank1_writer_table_loop_prog_n0_w = litepciedma_writer_table_loop_prog_n_storage;
always @(*) begin
    litepciedma_writer_table_loop_status_status <= 32'd0;
    litepciedma_writer_table_loop_status_status[15:0] <= litepciedma_writer_table_index;
    litepciedma_writer_table_loop_status_status[31:16] <= litepciedma_writer_table_count;
end
assign csrbank1_writer_table_loop_status_w = litepciedma_writer_table_loop_status_status[31:0];
assign litepciedma_writer_table_loop_status_we = csrbank1_writer_table_loop_status_we;
assign csrbank1_writer_table_level_w = litepciedma_writer_table_level_status[8:0];
assign litepciedma_writer_table_level_we = csrbank1_writer_table_level_we;
assign csrbank1_writer_table_reset0_w = litepciedma_writer_table_reset_storage;
assign csrbank1_reader_enable0_w = litepciedma_reader_enable_storage[1:0];
assign litepciedma_reader_table_address_lsb = litepciedma_reader_table_value_storage[31:0];
assign litepciedma_reader_table_length = litepciedma_reader_table_value_storage[55:32];
assign litepciedma_reader_table_irq_disable = litepciedma_reader_table_value_storage[56];
assign litepciedma_reader_table_last_disable = litepciedma_reader_table_value_storage[57];
assign csrbank1_reader_table_value1_w = litepciedma_reader_table_value_storage[57:32];
assign csrbank1_reader_table_value0_w = litepciedma_reader_table_value_storage[31:0];
assign litepciedma_reader_table_address_msb = litepciedma_reader_table_we_storage[31:0];
assign csrbank1_reader_table_we0_w = litepciedma_reader_table_we_storage[31:0];
assign csrbank1_reader_table_loop_prog_n0_w = litepciedma_reader_table_loop_prog_n_storage;
always @(*) begin
    litepciedma_reader_table_loop_status_status <= 32'd0;
    litepciedma_reader_table_loop_status_status[15:0] <= litepciedma_reader_table_index;
    litepciedma_reader_table_loop_status_status[31:16] <= litepciedma_reader_table_count;
end
assign csrbank1_reader_table_loop_status_w = litepciedma_reader_table_loop_status_status[31:0];
assign litepciedma_reader_table_loop_status_we = csrbank1_reader_table_loop_status_we;
assign csrbank1_reader_table_level_w = litepciedma_reader_table_level_status[8:0];
assign litepciedma_reader_table_level_we = csrbank1_reader_table_level_we;
assign csrbank1_reader_table_reset0_w = litepciedma_reader_table_reset_storage;
assign csrbank1_loopback_enable0_w = litepciedma_loopback_storage;
assign csrbank1_synchronizer_bypass0_w = litepciedma_synchronizer_bypass_storage;
assign litepciedma_synchronizer_mode = litepciedma_synchronizer_enable_storage[1:0];
assign csrbank1_synchronizer_enable0_w = litepciedma_synchronizer_enable_storage[1:0];
assign litepciedma_buffering_csrfield_depth0 = litepciedma_buffering_reader_fifo_control_storage[23:0];
assign litepciedma_buffering_csrfield_scratch0 = litepciedma_buffering_reader_fifo_control_storage[27:24];
assign litepciedma_buffering_csrfield_level_mode0 = litepciedma_buffering_reader_fifo_control_storage[31];
assign csrbank1_buffering_reader_fifo_control0_w = litepciedma_buffering_reader_fifo_control_storage[31:0];
always @(*) begin
    litepciedma_buffering_reader_fifo_status_status <= 24'd0;
    litepciedma_buffering_reader_fifo_status_status[23:0] <= litepciedma_buffering_csrfield_level0;
end
assign csrbank1_buffering_reader_fifo_status_w = litepciedma_buffering_reader_fifo_status_status[23:0];
assign litepciedma_buffering_reader_fifo_status_we = csrbank1_buffering_reader_fifo_status_we;
assign litepciedma_buffering_csrfield_depth1 = litepciedma_buffering_writer_fifo_control_storage[23:0];
assign litepciedma_buffering_csrfield_scratch1 = litepciedma_buffering_writer_fifo_control_storage[27:24];
assign litepciedma_buffering_csrfield_level_mode1 = litepciedma_buffering_writer_fifo_control_storage[31];
assign csrbank1_buffering_writer_fifo_control0_w = litepciedma_buffering_writer_fifo_control_storage[31:0];
always @(*) begin
    litepciedma_buffering_writer_fifo_status_status <= 24'd0;
    litepciedma_buffering_writer_fifo_status_status[23:0] <= litepciedma_buffering_csrfield_level1;
end
assign csrbank1_buffering_writer_fifo_status_w = litepciedma_buffering_writer_fifo_status_status[23:0];
assign litepciedma_buffering_writer_fifo_status_we = csrbank1_buffering_writer_fifo_status_we;
assign csrbank1_writer_monitor_overflows_w = litepciedma_writer_monitor_status[15:0];
assign litepciedma_writer_monitor_we = csrbank1_writer_monitor_overflows_we;
assign csrbank1_reader_monitor_underflows_w = litepciedma_reader_monitor_status[15:0];
assign litepciedma_reader_monitor_we = csrbank1_reader_monitor_underflows_we;
assign csrbank2_sel = (interface2_bank_bus_adr[13:9] == 4'd9);
always @(*) begin
    s7pciephy_link_status_status <= 10'd0;
    s7pciephy_link_status_status[0] <= s7pciephy_csrfield_status;
    s7pciephy_link_status_status[1] <= s7pciephy_csrfield_rate;
    s7pciephy_link_status_status[3:2] <= s7pciephy_csrfield_width;
    s7pciephy_link_status_status[9:4] <= s7pciephy_csrfield_ltssm;
end
assign csrbank2_phy_link_status_w = s7pciephy_link_status_status[9:0];
assign s7pciephy_link_status_we = csrbank2_phy_link_status_we;
assign csrbank2_phy_msi_enable_w = s7pciephy_msi_enable_status;
assign s7pciephy_msi_enable_we = csrbank2_phy_msi_enable_we;
assign csrbank2_phy_msix_enable_w = s7pciephy_msix_enable_status;
assign s7pciephy_msix_enable_we = csrbank2_phy_msix_enable_we;
assign csrbank2_phy_bus_master_enable_w = s7pciephy_bus_master_enable_status;
assign s7pciephy_bus_master_enable_we = csrbank2_phy_bus_master_enable_we;
assign csrbank2_phy_max_request_size_w = s7pciephy_max_request_size_status[15:0];
assign s7pciephy_max_request_size_we = csrbank2_phy_max_request_size_we;
assign csrbank2_phy_max_payload_size_w = s7pciephy_max_payload_size_status[15:0];
assign s7pciephy_max_payload_size_we = csrbank2_phy_max_payload_size_we;
assign sram1_sel = (interface1_sram_bus_adr[13:9] == 3'd4);
assign sram1_word_expanded = sram1_dat_r;
always @(*) begin
    interface1_sram_bus_dat_r <= 32'd0;
    if (sram1_sel_r) begin
        case (sram1_word_index)
            1'd0: begin
                interface1_sram_bus_dat_r <= sram1_word_expanded[127:96];
            end
            1'd1: begin
                interface1_sram_bus_dat_r <= sram1_word_expanded[95:64];
            end
            2'd2: begin
                interface1_sram_bus_dat_r <= sram1_word_expanded[63:32];
            end
            default: begin
                interface1_sram_bus_dat_r <= sram1_word_expanded[31:0];
            end
        endcase
    end
end
assign sram1_we = ((sram1_sel & interface1_sram_bus_we) & (interface1_sram_bus_adr[1:0] == 2'd3));
assign sram1_dat_w = {sram1_wreg0, sram1_wreg1, sram1_wreg2, interface1_sram_bus_dat_w};
assign sram1_adr = interface1_sram_bus_adr[7:2];
assign csrbank3_sel = (interface3_bank_bus_adr[13:9] == 2'd3);
assign csrbank3_enable1_r = interface3_bank_bus_dat_w[31:0];
always @(*) begin
    csrbank3_enable1_re <= 1'd0;
    csrbank3_enable1_we <= 1'd0;
    if ((csrbank3_sel & (interface3_bank_bus_adr[8:0] == 1'd0))) begin
        csrbank3_enable1_re <= interface3_bank_bus_we;
        csrbank3_enable1_we <= (~interface3_bank_bus_we);
    end
end
assign csrbank3_enable0_r = interface3_bank_bus_dat_w[31:0];
always @(*) begin
    csrbank3_enable0_re <= 1'd0;
    csrbank3_enable0_we <= 1'd0;
    if ((csrbank3_sel & (interface3_bank_bus_adr[8:0] == 1'd1))) begin
        csrbank3_enable0_re <= interface3_bank_bus_we;
        csrbank3_enable0_we <= (~interface3_bank_bus_we);
    end
end
assign csrbank3_pba1_r = interface3_bank_bus_dat_w[31:0];
always @(*) begin
    csrbank3_pba1_re <= 1'd0;
    csrbank3_pba1_we <= 1'd0;
    if ((csrbank3_sel & (interface3_bank_bus_adr[8:0] == 2'd2))) begin
        csrbank3_pba1_re <= interface3_bank_bus_we;
        csrbank3_pba1_we <= (~interface3_bank_bus_we);
    end
end
assign csrbank3_pba0_r = interface3_bank_bus_dat_w[31:0];
always @(*) begin
    csrbank3_pba0_re <= 1'd0;
    csrbank3_pba0_we <= 1'd0;
    if ((csrbank3_sel & (interface3_bank_bus_adr[8:0] == 2'd3))) begin
        csrbank3_pba0_re <= interface3_bank_bus_we;
        csrbank3_pba0_we <= (~interface3_bank_bus_we);
    end
end
assign csrbank3_enable1_w = pcie_msi_enable_storage[63:32];
assign csrbank3_enable0_w = pcie_msi_enable_storage[31:0];
assign csrbank3_pba1_w = pcie_msi_pba_status[63:32];
assign csrbank3_pba0_w = pcie_msi_pba_status[31:0];
assign pcie_msi_pba_we = csrbank3_pba0_we;
assign csrbank4_sel = (interface4_bank_bus_adr[13:9] == 2'd2);
always @(*) begin
    csrbank2_phy_link_status_r <= 10'd0;
    csrbank2_phy_link_status_r <= interface2_bank_bus_dat_w[9:0];
    csrbank2_phy_link_status_r <= interface4_bank_bus_dat_w[9:0];
end
always @(*) begin
    csrbank2_phy_link_status_re <= 1'd0;
    csrbank2_phy_link_status_we <= 1'd0;
    if ((csrbank2_sel & (interface2_bank_bus_adr[8:0] == 1'd0))) begin
        csrbank2_phy_link_status_re <= interface2_bank_bus_we;
        csrbank2_phy_link_status_we <= (~interface2_bank_bus_we);
    end
    if ((csrbank4_sel & (interface4_bank_bus_adr[8:0] == 1'd0))) begin
        csrbank2_phy_link_status_re <= interface4_bank_bus_we;
        csrbank2_phy_link_status_we <= (~interface4_bank_bus_we);
    end
end
always @(*) begin
    csrbank2_phy_msi_enable_r <= 1'd0;
    csrbank2_phy_msi_enable_r <= interface2_bank_bus_dat_w[0];
    csrbank2_phy_msi_enable_r <= interface4_bank_bus_dat_w[0];
end
always @(*) begin
    csrbank2_phy_msi_enable_re <= 1'd0;
    csrbank2_phy_msi_enable_we <= 1'd0;
    if ((csrbank2_sel & (interface2_bank_bus_adr[8:0] == 1'd1))) begin
        csrbank2_phy_msi_enable_re <= interface2_bank_bus_we;
        csrbank2_phy_msi_enable_we <= (~interface2_bank_bus_we);
    end
    if ((csrbank4_sel & (interface4_bank_bus_adr[8:0] == 1'd1))) begin
        csrbank2_phy_msi_enable_re <= interface4_bank_bus_we;
        csrbank2_phy_msi_enable_we <= (~interface4_bank_bus_we);
    end
end
always @(*) begin
    csrbank2_phy_msix_enable_r <= 1'd0;
    csrbank2_phy_msix_enable_r <= interface2_bank_bus_dat_w[0];
    csrbank2_phy_msix_enable_r <= interface4_bank_bus_dat_w[0];
end
always @(*) begin
    csrbank2_phy_msix_enable_re <= 1'd0;
    csrbank2_phy_msix_enable_we <= 1'd0;
    if ((csrbank2_sel & (interface2_bank_bus_adr[8:0] == 2'd2))) begin
        csrbank2_phy_msix_enable_re <= interface2_bank_bus_we;
        csrbank2_phy_msix_enable_we <= (~interface2_bank_bus_we);
    end
    if ((csrbank4_sel & (interface4_bank_bus_adr[8:0] == 2'd2))) begin
        csrbank2_phy_msix_enable_re <= interface4_bank_bus_we;
        csrbank2_phy_msix_enable_we <= (~interface4_bank_bus_we);
    end
end
always @(*) begin
    csrbank2_phy_bus_master_enable_r <= 1'd0;
    csrbank2_phy_bus_master_enable_r <= interface2_bank_bus_dat_w[0];
    csrbank2_phy_bus_master_enable_r <= interface4_bank_bus_dat_w[0];
end
always @(*) begin
    csrbank2_phy_bus_master_enable_re <= 1'd0;
    csrbank2_phy_bus_master_enable_we <= 1'd0;
    if ((csrbank2_sel & (interface2_bank_bus_adr[8:0] == 2'd3))) begin
        csrbank2_phy_bus_master_enable_re <= interface2_bank_bus_we;
        csrbank2_phy_bus_master_enable_we <= (~interface2_bank_bus_we);
    end
    if ((csrbank4_sel & (interface4_bank_bus_adr[8:0] == 2'd3))) begin
        csrbank2_phy_bus_master_enable_re <= interface4_bank_bus_we;
        csrbank2_phy_bus_master_enable_we <= (~interface4_bank_bus_we);
    end
end
always @(*) begin
    csrbank2_phy_max_request_size_r <= 16'd0;
    csrbank2_phy_max_request_size_r <= interface2_bank_bus_dat_w[15:0];
    csrbank2_phy_max_request_size_r <= interface4_bank_bus_dat_w[15:0];
end
always @(*) begin
    csrbank2_phy_max_request_size_re <= 1'd0;
    csrbank2_phy_max_request_size_we <= 1'd0;
    if ((csrbank2_sel & (interface2_bank_bus_adr[8:0] == 3'd4))) begin
        csrbank2_phy_max_request_size_re <= interface2_bank_bus_we;
        csrbank2_phy_max_request_size_we <= (~interface2_bank_bus_we);
    end
    if ((csrbank4_sel & (interface4_bank_bus_adr[8:0] == 3'd4))) begin
        csrbank2_phy_max_request_size_re <= interface4_bank_bus_we;
        csrbank2_phy_max_request_size_we <= (~interface4_bank_bus_we);
    end
end
always @(*) begin
    csrbank2_phy_max_payload_size_r <= 16'd0;
    csrbank2_phy_max_payload_size_r <= interface2_bank_bus_dat_w[15:0];
    csrbank2_phy_max_payload_size_r <= interface4_bank_bus_dat_w[15:0];
end
always @(*) begin
    csrbank2_phy_max_payload_size_re <= 1'd0;
    csrbank2_phy_max_payload_size_we <= 1'd0;
    if ((csrbank2_sel & (interface2_bank_bus_adr[8:0] == 3'd5))) begin
        csrbank2_phy_max_payload_size_re <= interface2_bank_bus_we;
        csrbank2_phy_max_payload_size_we <= (~interface2_bank_bus_we);
    end
    if ((csrbank4_sel & (interface4_bank_bus_adr[8:0] == 3'd5))) begin
        csrbank2_phy_max_payload_size_re <= interface4_bank_bus_we;
        csrbank2_phy_max_payload_size_we <= (~interface4_bank_bus_we);
    end
end
assign csrbank5_sel = (interface5_bank_bus_adr[13:9] == 3'd6);
assign csrbank5_control0_r = interface5_bank_bus_dat_w[1:0];
always @(*) begin
    csrbank5_control0_re <= 1'd0;
    csrbank5_control0_we <= 1'd0;
    if ((csrbank5_sel & (interface5_bank_bus_adr[8:0] == 1'd0))) begin
        csrbank5_control0_re <= interface5_bank_bus_we;
        csrbank5_control0_we <= (~interface5_bank_bus_we);
    end
end
assign csrbank5_status_r = interface5_bank_bus_dat_w[1:0];
always @(*) begin
    csrbank5_status_re <= 1'd0;
    csrbank5_status_we <= 1'd0;
    if ((csrbank5_sel & (interface5_bank_bus_adr[8:0] == 1'd1))) begin
        csrbank5_status_re <= interface5_bank_bus_we;
        csrbank5_status_we <= (~interface5_bank_bus_we);
    end
end
assign csrbank5_phy_tx_delay_r = interface5_bank_bus_dat_w[31:0];
always @(*) begin
    csrbank5_phy_tx_delay_re <= 1'd0;
    csrbank5_phy_tx_delay_we <= 1'd0;
    if ((csrbank5_sel & (interface5_bank_bus_adr[8:0] == 2'd2))) begin
        csrbank5_phy_tx_delay_re <= interface5_bank_bus_we;
        csrbank5_phy_tx_delay_we <= (~interface5_bank_bus_we);
    end
end
assign csrbank5_phy_rx_delay_r = interface5_bank_bus_dat_w[31:0];
always @(*) begin
    csrbank5_phy_rx_delay_re <= 1'd0;
    csrbank5_phy_rx_delay_we <= 1'd0;
    if ((csrbank5_sel & (interface5_bank_bus_adr[8:0] == 2'd3))) begin
        csrbank5_phy_rx_delay_re <= interface5_bank_bus_we;
        csrbank5_phy_rx_delay_we <= (~interface5_bank_bus_we);
    end
end
assign csrbank5_master_time1_r = interface5_bank_bus_dat_w[31:0];
always @(*) begin
    csrbank5_master_time1_re <= 1'd0;
    csrbank5_master_time1_we <= 1'd0;
    if ((csrbank5_sel & (interface5_bank_bus_adr[8:0] == 3'd4))) begin
        csrbank5_master_time1_re <= interface5_bank_bus_we;
        csrbank5_master_time1_we <= (~interface5_bank_bus_we);
    end
end
assign csrbank5_master_time0_r = interface5_bank_bus_dat_w[31:0];
always @(*) begin
    csrbank5_master_time0_re <= 1'd0;
    csrbank5_master_time0_we <= 1'd0;
    if ((csrbank5_sel & (interface5_bank_bus_adr[8:0] == 3'd5))) begin
        csrbank5_master_time0_re <= interface5_bank_bus_we;
        csrbank5_master_time0_we <= (~interface5_bank_bus_we);
    end
end
assign csrbank5_link_delay_r = interface5_bank_bus_dat_w[31:0];
always @(*) begin
    csrbank5_link_delay_re <= 1'd0;
    csrbank5_link_delay_we <= 1'd0;
    if ((csrbank5_sel & (interface5_bank_bus_adr[8:0] == 3'd6))) begin
        csrbank5_link_delay_re <= interface5_bank_bus_we;
        csrbank5_link_delay_we <= (~interface5_bank_bus_we);
    end
end
assign csrbank5_t1_time1_r = interface5_bank_bus_dat_w[31:0];
always @(*) begin
    csrbank5_t1_time1_re <= 1'd0;
    csrbank5_t1_time1_we <= 1'd0;
    if ((csrbank5_sel & (interface5_bank_bus_adr[8:0] == 3'd7))) begin
        csrbank5_t1_time1_re <= interface5_bank_bus_we;
        csrbank5_t1_time1_we <= (~interface5_bank_bus_we);
    end
end
assign csrbank5_t1_time0_r = interface5_bank_bus_dat_w[31:0];
always @(*) begin
    csrbank5_t1_time0_re <= 1'd0;
    csrbank5_t1_time0_we <= 1'd0;
    if ((csrbank5_sel & (interface5_bank_bus_adr[8:0] == 4'd8))) begin
        csrbank5_t1_time0_re <= interface5_bank_bus_we;
        csrbank5_t1_time0_we <= (~interface5_bank_bus_we);
    end
end
assign csrbank5_t4_time1_r = interface5_bank_bus_dat_w[31:0];
always @(*) begin
    csrbank5_t4_time1_re <= 1'd0;
    csrbank5_t4_time1_we <= 1'd0;
    if ((csrbank5_sel & (interface5_bank_bus_adr[8:0] == 4'd9))) begin
        csrbank5_t4_time1_re <= interface5_bank_bus_we;
        csrbank5_t4_time1_we <= (~interface5_bank_bus_we);
    end
end
assign csrbank5_t4_time0_r = interface5_bank_bus_dat_w[31:0];
always @(*) begin
    csrbank5_t4_time0_re <= 1'd0;
    csrbank5_t4_time0_we <= 1'd0;
    if ((csrbank5_sel & (interface5_bank_bus_adr[8:0] == 4'd10))) begin
        csrbank5_t4_time0_re <= interface5_bank_bus_we;
        csrbank5_t4_time0_we <= (~interface5_bank_bus_we);
    end
end
assign ptm_requester_enable1 = ptm_requester_control_storage[0];
always @(*) begin
    ptm_requester_trigger1 <= 1'd0;
    if (ptm_requester_control_re) begin
        ptm_requester_trigger1 <= ptm_requester_control_storage[1];
    end
end
assign csrbank5_control0_w = ptm_requester_control_storage[1:0];
always @(*) begin
    ptm_requester_status_status <= 2'd0;
    ptm_requester_status_status[0] <= ptm_requester_valid1;
    ptm_requester_status_status[1] <= ptm_requester_busy1;
end
assign csrbank5_status_w = ptm_requester_status_status[1:0];
assign ptm_requester_status_we = csrbank5_status_we;
assign csrbank5_phy_tx_delay_w = ptm_requester_phy_tx_delay_status[31:0];
assign ptm_requester_phy_tx_delay_we = csrbank5_phy_tx_delay_we;
assign csrbank5_phy_rx_delay_w = ptm_requester_phy_rx_delay_status[31:0];
assign ptm_requester_phy_rx_delay_we = csrbank5_phy_rx_delay_we;
assign csrbank5_master_time1_w = ptm_requester_master_time_status[63:32];
assign csrbank5_master_time0_w = ptm_requester_master_time_status[31:0];
assign ptm_requester_master_time_we = csrbank5_master_time0_we;
assign csrbank5_link_delay_w = ptm_requester_link_delay_status[31:0];
assign ptm_requester_link_delay_we = csrbank5_link_delay_we;
assign csrbank5_t1_time1_w = ptm_requester_t1_time_status[63:32];
assign csrbank5_t1_time0_w = ptm_requester_t1_time_status[31:0];
assign ptm_requester_t1_time_we = csrbank5_t1_time0_we;
assign csrbank5_t4_time1_w = ptm_requester_t4_time_status[63:32];
assign csrbank5_t4_time0_w = ptm_requester_t4_time_status[31:0];
assign ptm_requester_t4_time_we = csrbank5_t4_time0_we;
assign csr_interconnect_adr = litepciecore_adr;
assign csr_interconnect_we = litepciecore_we;
assign csr_interconnect_dat_w = litepciecore_dat_w;
assign litepciecore_dat_r = csr_interconnect_dat_r;
assign interface0_bank_bus_adr = csr_interconnect_adr;
assign interface1_bank_bus_adr = csr_interconnect_adr;
assign interface2_bank_bus_adr = csr_interconnect_adr;
assign interface3_bank_bus_adr = csr_interconnect_adr;
assign interface4_bank_bus_adr = csr_interconnect_adr;
assign interface5_bank_bus_adr = csr_interconnect_adr;
assign interface0_sram_bus_adr = csr_interconnect_adr;
assign interface1_sram_bus_adr = csr_interconnect_adr;
assign interface0_bank_bus_we = csr_interconnect_we;
assign interface1_bank_bus_we = csr_interconnect_we;
assign interface2_bank_bus_we = csr_interconnect_we;
assign interface3_bank_bus_we = csr_interconnect_we;
assign interface4_bank_bus_we = csr_interconnect_we;
assign interface5_bank_bus_we = csr_interconnect_we;
assign interface0_sram_bus_we = csr_interconnect_we;
assign interface1_sram_bus_we = csr_interconnect_we;
assign interface0_bank_bus_dat_w = csr_interconnect_dat_w;
assign interface1_bank_bus_dat_w = csr_interconnect_dat_w;
assign interface2_bank_bus_dat_w = csr_interconnect_dat_w;
assign interface3_bank_bus_dat_w = csr_interconnect_dat_w;
assign interface4_bank_bus_dat_w = csr_interconnect_dat_w;
assign interface5_bank_bus_dat_w = csr_interconnect_dat_w;
assign interface0_sram_bus_dat_w = csr_interconnect_dat_w;
assign interface1_sram_bus_dat_w = csr_interconnect_dat_w;
assign csr_interconnect_dat_r = (((((((interface0_bank_bus_dat_r | interface1_bank_bus_dat_r) | interface2_bank_bus_dat_r) | interface3_bank_bus_dat_r) | interface4_bank_bus_dat_r) | interface5_bank_bus_dat_r) | interface0_sram_bus_dat_r) | interface1_sram_bus_dat_r);
assign rhs_slice_proxy0 = depacketizer_header_extracter_source_payload_dat[31:0];
assign rhs_slice_proxy1 = depacketizer_header_extracter_source_payload_dat[31:0];
assign rhs_slice_proxy2 = depacketizer_header_extracter_source_payload_dat[31:0];
assign rhs_slice_proxy3 = depacketizer_header_extracter_source_payload_dat[31:0];
assign rhs_slice_proxy4 = depacketizer_header_extracter_source_payload_dat[63:32];
assign rhs_slice_proxy5 = depacketizer_header_extracter_source_payload_dat[63:32];
assign rhs_slice_proxy6 = depacketizer_header_extracter_source_payload_dat[63:32];
assign rhs_slice_proxy7 = depacketizer_header_extracter_source_payload_dat[63:32];
assign rhs_slice_proxy8 = depacketizer_header_extracter_source_payload_be[3:0];
assign rhs_slice_proxy9 = depacketizer_header_extracter_source_payload_be[3:0];
assign rhs_slice_proxy10 = depacketizer_header_extracter_source_payload_be[3:0];
assign rhs_slice_proxy11 = depacketizer_header_extracter_source_payload_be[3:0];
assign rhs_slice_proxy12 = depacketizer_header_extracter_source_payload_be[7:4];
assign rhs_slice_proxy13 = depacketizer_header_extracter_source_payload_be[7:4];
assign rhs_slice_proxy14 = depacketizer_header_extracter_source_payload_be[7:4];
assign rhs_slice_proxy15 = depacketizer_header_extracter_source_payload_be[7:4];
assign rhs_slice_proxy16 = packetizer_tlp_raw_req_header[31:0];
assign rhs_slice_proxy17 = packetizer_tlp_raw_req_header[31:0];
assign rhs_slice_proxy18 = packetizer_tlp_raw_req_header[31:0];
assign rhs_slice_proxy19 = packetizer_tlp_raw_req_header[31:0];
assign rhs_slice_proxy20 = packetizer_tlp_raw_req_header[63:32];
assign rhs_slice_proxy21 = packetizer_tlp_raw_req_header[63:32];
assign rhs_slice_proxy22 = packetizer_tlp_raw_req_header[63:32];
assign rhs_slice_proxy23 = packetizer_tlp_raw_req_header[63:32];
assign rhs_slice_proxy24 = packetizer_tlp_raw_req_header[95:64];
assign rhs_slice_proxy25 = packetizer_tlp_raw_req_header[95:64];
assign rhs_slice_proxy26 = packetizer_tlp_raw_req_header[95:64];
assign rhs_slice_proxy27 = packetizer_tlp_raw_req_header[95:64];
assign rhs_slice_proxy28 = packetizer_tlp_raw_req_header[127:96];
assign rhs_slice_proxy29 = packetizer_tlp_raw_req_header[127:96];
assign rhs_slice_proxy30 = packetizer_tlp_raw_req_header[127:96];
assign rhs_slice_proxy31 = packetizer_tlp_raw_req_header[127:96];
assign rhs_slice_proxy32 = packetizer_tlp_raw_cmp_header[31:0];
assign rhs_slice_proxy33 = packetizer_tlp_raw_cmp_header[31:0];
assign rhs_slice_proxy34 = packetizer_tlp_raw_cmp_header[31:0];
assign rhs_slice_proxy35 = packetizer_tlp_raw_cmp_header[31:0];
assign rhs_slice_proxy36 = packetizer_tlp_raw_cmp_header[63:32];
assign rhs_slice_proxy37 = packetizer_tlp_raw_cmp_header[63:32];
assign rhs_slice_proxy38 = packetizer_tlp_raw_cmp_header[63:32];
assign rhs_slice_proxy39 = packetizer_tlp_raw_cmp_header[63:32];
assign rhs_slice_proxy40 = packetizer_tlp_raw_cmp_header[95:64];
assign rhs_slice_proxy41 = packetizer_tlp_raw_cmp_header[95:64];
assign rhs_slice_proxy42 = packetizer_tlp_raw_cmp_header[95:64];
assign rhs_slice_proxy43 = packetizer_tlp_raw_cmp_header[95:64];
assign rhs_slice_proxy44 = packetizer_tlp_raw_cmp_header[127:96];
assign rhs_slice_proxy45 = packetizer_tlp_raw_cmp_header[127:96];
assign rhs_slice_proxy46 = packetizer_tlp_raw_cmp_header[127:96];
assign rhs_slice_proxy47 = packetizer_tlp_raw_cmp_header[127:96];
assign rhs_slice_proxy48 = packetizer_tlp_raw_ptm_header[31:0];
assign rhs_slice_proxy49 = packetizer_tlp_raw_ptm_header[31:0];
assign rhs_slice_proxy50 = packetizer_tlp_raw_ptm_header[31:0];
assign rhs_slice_proxy51 = packetizer_tlp_raw_ptm_header[31:0];
assign rhs_slice_proxy52 = packetizer_tlp_raw_ptm_header[63:32];
assign rhs_slice_proxy53 = packetizer_tlp_raw_ptm_header[63:32];
assign rhs_slice_proxy54 = packetizer_tlp_raw_ptm_header[63:32];
assign rhs_slice_proxy55 = packetizer_tlp_raw_ptm_header[63:32];
assign rhs_slice_proxy56 = packetizer_tlp_raw_ptm_header[95:64];
assign rhs_slice_proxy57 = packetizer_tlp_raw_ptm_header[95:64];
assign rhs_slice_proxy58 = packetizer_tlp_raw_ptm_header[95:64];
assign rhs_slice_proxy59 = packetizer_tlp_raw_ptm_header[95:64];
assign rhs_slice_proxy60 = packetizer_tlp_raw_ptm_header[127:96];
assign rhs_slice_proxy61 = packetizer_tlp_raw_ptm_header[127:96];
assign rhs_slice_proxy62 = packetizer_tlp_raw_ptm_header[127:96];
assign rhs_slice_proxy63 = packetizer_tlp_raw_ptm_header[127:96];
assign rhs_slice_proxy64 = packetizer_source_source_payload_dat[31:0];
assign rhs_slice_proxy65 = packetizer_source_source_payload_dat[31:0];
assign rhs_slice_proxy66 = packetizer_source_source_payload_dat[31:0];
assign rhs_slice_proxy67 = packetizer_source_source_payload_dat[31:0];
assign rhs_slice_proxy68 = packetizer_source_source_payload_dat[63:32];
assign rhs_slice_proxy69 = packetizer_source_source_payload_dat[63:32];
assign rhs_slice_proxy70 = packetizer_source_source_payload_dat[63:32];
assign rhs_slice_proxy71 = packetizer_source_source_payload_dat[63:32];
assign rhs_slice_proxy72 = packetizer_source_source_payload_be[3:0];
assign rhs_slice_proxy73 = packetizer_source_source_payload_be[3:0];
assign rhs_slice_proxy74 = packetizer_source_source_payload_be[3:0];
assign rhs_slice_proxy75 = packetizer_source_source_payload_be[3:0];
assign rhs_slice_proxy76 = packetizer_source_source_payload_be[7:4];
assign rhs_slice_proxy77 = packetizer_source_source_payload_be[7:4];
assign rhs_slice_proxy78 = packetizer_source_source_payload_be[7:4];
assign rhs_slice_proxy79 = packetizer_source_source_payload_be[7:4];
assign rhs_slice_proxy80 = pcie_ptm_sniffer_litepcietlpdepacketizer_ptm_source_payload_dat[63:32];
assign rhs_slice_proxy81 = pcie_ptm_sniffer_litepcietlpdepacketizer_ptm_source_payload_dat[63:32];
assign rhs_slice_proxy82 = pcie_ptm_sniffer_litepcietlpdepacketizer_ptm_source_payload_dat[63:32];
assign rhs_slice_proxy83 = pcie_ptm_sniffer_litepcietlpdepacketizer_ptm_source_payload_dat[63:32];
assign cases_slice_proxy0 = {pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_payload_data, pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_source_source_payload_data};
assign cases_slice_proxy1 = {pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_payload_ctrl, pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_source_source_payload_ctrl};
assign cases_slice_proxy2 = {pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_payload_data, pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_source_source_payload_data};
assign cases_slice_proxy3 = {pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_payload_ctrl, pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_source_source_payload_ctrl};
assign cases_slice_proxy4 = {pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_payload_data, pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_source_source_payload_data};
assign cases_slice_proxy5 = {pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_payload_ctrl, pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_source_source_payload_ctrl};
assign cases_slice_proxy6 = {pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_payload_data, pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_source_source_payload_data};
assign cases_slice_proxy7 = {pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_payload_ctrl, pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_source_source_payload_ctrl};
assign rhs_slice_proxy84 = pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_payload_dat[31:0];
assign rhs_slice_proxy85 = pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_payload_dat[31:0];
assign rhs_slice_proxy86 = pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_payload_dat[31:0];
assign rhs_slice_proxy87 = pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_payload_dat[31:0];
assign rhs_slice_proxy88 = pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_payload_dat[63:32];
assign rhs_slice_proxy89 = pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_payload_dat[63:32];
assign rhs_slice_proxy90 = pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_payload_dat[63:32];
assign rhs_slice_proxy91 = pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_payload_dat[63:32];
assign rhs_slice_proxy92 = pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_payload_be[3:0];
assign rhs_slice_proxy93 = pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_payload_be[3:0];
assign rhs_slice_proxy94 = pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_payload_be[3:0];
assign rhs_slice_proxy95 = pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_payload_be[3:0];
assign rhs_slice_proxy96 = pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_payload_be[7:4];
assign rhs_slice_proxy97 = pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_payload_be[7:4];
assign rhs_slice_proxy98 = pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_payload_be[7:4];
assign rhs_slice_proxy99 = pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_payload_be[7:4];
always @(*) begin
    array_muxed0 <= 30'd0;
    case (grant)
        default: begin
            array_muxed0 <= pcie_wishbone_master_wishbone_adr;
        end
    endcase
end
always @(*) begin
    array_muxed1 <= 32'd0;
    case (grant)
        default: begin
            array_muxed1 <= pcie_wishbone_master_wishbone_dat_w;
        end
    endcase
end
always @(*) begin
    array_muxed2 <= 4'd0;
    case (grant)
        default: begin
            array_muxed2 <= pcie_wishbone_master_wishbone_sel;
        end
    endcase
end
always @(*) begin
    array_muxed3 <= 1'd0;
    case (grant)
        default: begin
            array_muxed3 <= pcie_wishbone_master_wishbone_cyc;
        end
    endcase
end
always @(*) begin
    array_muxed4 <= 1'd0;
    case (grant)
        default: begin
            array_muxed4 <= pcie_wishbone_master_wishbone_stb;
        end
    endcase
end
always @(*) begin
    array_muxed5 <= 1'd0;
    case (grant)
        default: begin
            array_muxed5 <= pcie_wishbone_master_wishbone_we;
        end
    endcase
end
always @(*) begin
    array_muxed6 <= 3'd0;
    case (grant)
        default: begin
            array_muxed6 <= pcie_wishbone_master_wishbone_cti;
        end
    endcase
end
always @(*) begin
    array_muxed7 <= 2'd0;
    case (grant)
        default: begin
            array_muxed7 <= pcie_wishbone_master_wishbone_bte;
        end
    endcase
end
assign s7pciephy_tx_datapath_cdc_cdc_produce_rdomain = xilinxmultiregimpl0_regs1;
assign s7pciephy_tx_datapath_cdc_cdc_consume_wdomain = xilinxmultiregimpl1_regs1;
assign s7pciephy_rx_datapath_cdc_cdc_produce_rdomain = xilinxmultiregimpl2_regs1;
assign s7pciephy_rx_datapath_cdc_cdc_consume_wdomain = xilinxmultiregimpl3_regs1;
assign s7pciephy_msi_cdc_cdc_produce_rdomain = xilinxmultiregimpl4_regs1;
assign s7pciephy_msi_cdc_cdc_consume_wdomain = xilinxmultiregimpl5_regs1;
assign s7pciephy_bus_master_enable_status = xilinxmultiregimpl6_regs1;
assign xilinxmultiregimpl6 = s7pciephy_command[2];
assign s7pciephy_max_request_size_status = xilinxmultiregimpl7_regs1;
assign s7pciephy_max_payload_size_status = xilinxmultiregimpl8_regs1;
assign xilinxasyncresetsynchronizerimpl6 = (~s7pciephy_locked);
assign xilinxasyncresetsynchronizerimpl7 = (~s7pciephy_locked);
assign xilinxasyncresetsynchronizerimpl8 = (~s7pciephy_locked);
assign xilinxasyncresetsynchronizerimpl9 = (~s7pciephy_locked);
assign s7pciephy_pipe_pclk_sel_r = xilinxmultiregimpl9_regs1;
assign litepciedma_writer_monitor_status = xilinxmultiregimpl10_regs1;
assign litepciedma_reader_monitor_status = xilinxmultiregimpl11_regs1;
assign pcie_ptm_sniffer_rawdatapath_cdc_produce_rdomain = xilinxmultiregimpl12_regs1;
assign pcie_ptm_sniffer_rawdatapath_cdc_consume_wdomain = xilinxmultiregimpl13_regs1;
assign pcie_ptm_sniffer_cdc_cdc_produce_rdomain = xilinxmultiregimpl14_regs1;
assign pcie_ptm_sniffer_cdc_cdc_consume_wdomain = xilinxmultiregimpl15_regs1;
assign ptm_requester_cdc_produce_rdomain = xilinxmultiregimpl16_regs1;
assign ptm_requester_cdc_consume_wdomain = xilinxmultiregimpl17_regs1;


//------------------------------------------------------------------------------
// Synchronous Logic
//------------------------------------------------------------------------------

always @(posedge from140100636556256_clk) begin
    s7pciephy_rx_datapath_cdc_cdc_graycounter0_q_binary <= s7pciephy_rx_datapath_cdc_cdc_graycounter0_q_next_binary;
    s7pciephy_rx_datapath_cdc_cdc_graycounter0_q <= s7pciephy_rx_datapath_cdc_cdc_graycounter0_q_next;
    if (from140100636556256_rst) begin
        s7pciephy_rx_datapath_cdc_cdc_graycounter0_q <= 5'd0;
        s7pciephy_rx_datapath_cdc_cdc_graycounter0_q_binary <= 5'd0;
    end
    xilinxmultiregimpl3_regs0 <= s7pciephy_rx_datapath_cdc_cdc_graycounter1_q;
    xilinxmultiregimpl3_regs1 <= xilinxmultiregimpl3_regs0;
end

always @(posedge from140100636878112_clk) begin
    s7pciephy_msi_cdc_cdc_graycounter0_q_binary <= s7pciephy_msi_cdc_cdc_graycounter0_q_next_binary;
    s7pciephy_msi_cdc_cdc_graycounter0_q <= s7pciephy_msi_cdc_cdc_graycounter0_q_next;
    if (from140100636878112_rst) begin
        s7pciephy_msi_cdc_cdc_graycounter0_q <= 3'd0;
        s7pciephy_msi_cdc_cdc_graycounter0_q_binary <= 3'd0;
    end
    xilinxmultiregimpl5_regs0 <= s7pciephy_msi_cdc_cdc_graycounter1_q;
    xilinxmultiregimpl5_regs1 <= xilinxmultiregimpl5_regs0;
end

always @(posedge from140100637018048_clk) begin
    s7pciephy_tx_datapath_cdc_cdc_graycounter0_q_binary <= s7pciephy_tx_datapath_cdc_cdc_graycounter0_q_next_binary;
    s7pciephy_tx_datapath_cdc_cdc_graycounter0_q <= s7pciephy_tx_datapath_cdc_cdc_graycounter0_q_next;
    if (from140100637018048_rst) begin
        s7pciephy_tx_datapath_cdc_cdc_graycounter0_q <= 5'd0;
        s7pciephy_tx_datapath_cdc_cdc_graycounter0_q_binary <= 5'd0;
    end
    xilinxmultiregimpl1_regs0 <= s7pciephy_tx_datapath_cdc_cdc_graycounter1_q;
    xilinxmultiregimpl1_regs1 <= xilinxmultiregimpl1_regs0;
end

always @(posedge pcie_clk) begin
    case (s7pciephy_dcommand[14:12])
        1'd0: begin
            s7pciephy_max_request_size <= 8'd128;
        end
        1'd1: begin
            s7pciephy_max_request_size <= 9'd256;
        end
        2'd2: begin
            s7pciephy_max_request_size <= 10'd512;
        end
        2'd3: begin
            s7pciephy_max_request_size <= 10'd512;
        end
        3'd4: begin
            s7pciephy_max_request_size <= 10'd512;
        end
        3'd5: begin
            s7pciephy_max_request_size <= 10'd512;
        end
    endcase
    case (s7pciephy_dcommand[7:5])
        1'd0: begin
            s7pciephy_max_payload_size <= 8'd128;
        end
        1'd1: begin
            s7pciephy_max_payload_size <= 9'd256;
        end
        2'd2: begin
            s7pciephy_max_payload_size <= 10'd512;
        end
        2'd3: begin
            s7pciephy_max_payload_size <= 10'd512;
        end
        3'd4: begin
            s7pciephy_max_payload_size <= 10'd512;
        end
        3'd5: begin
            s7pciephy_max_payload_size <= 10'd512;
        end
    endcase
    s7pciephy_id <= {s7pciephy_bus_number, s7pciephy_device_number, s7pciephy_function_number};
    if ((s7pciephy_tx_datapath_pipe_ready_sink_valid & (~s7pciephy_tx_datapath_pipe_ready_source_ready))) begin
        s7pciephy_tx_datapath_pipe_ready_valid <= 1'd1;
    end else begin
        if (s7pciephy_tx_datapath_pipe_ready_source_ready) begin
            s7pciephy_tx_datapath_pipe_ready_valid <= 1'd0;
        end
    end
    if (((~s7pciephy_tx_datapath_pipe_ready_source_ready) & (~s7pciephy_tx_datapath_pipe_ready_valid))) begin
        s7pciephy_tx_datapath_pipe_ready_sink_d_valid <= s7pciephy_tx_datapath_pipe_ready_sink_valid;
        s7pciephy_tx_datapath_pipe_ready_sink_d_ready <= s7pciephy_tx_datapath_pipe_ready_sink_ready;
        s7pciephy_tx_datapath_pipe_ready_sink_d_first <= s7pciephy_tx_datapath_pipe_ready_sink_first;
        s7pciephy_tx_datapath_pipe_ready_sink_d_last <= s7pciephy_tx_datapath_pipe_ready_sink_last;
        s7pciephy_tx_datapath_pipe_ready_sink_d_payload_dat <= s7pciephy_tx_datapath_pipe_ready_sink_payload_dat;
        s7pciephy_tx_datapath_pipe_ready_sink_d_payload_be <= s7pciephy_tx_datapath_pipe_ready_sink_payload_be;
    end
    if ((s7pciephy_rx_datapath_pipe_ready_sink_valid & (~s7pciephy_rx_datapath_pipe_ready_source_ready))) begin
        s7pciephy_rx_datapath_pipe_ready_valid <= 1'd1;
    end else begin
        if (s7pciephy_rx_datapath_pipe_ready_source_ready) begin
            s7pciephy_rx_datapath_pipe_ready_valid <= 1'd0;
        end
    end
    if (((~s7pciephy_rx_datapath_pipe_ready_source_ready) & (~s7pciephy_rx_datapath_pipe_ready_valid))) begin
        s7pciephy_rx_datapath_pipe_ready_sink_d_valid <= s7pciephy_rx_datapath_pipe_ready_sink_valid;
        s7pciephy_rx_datapath_pipe_ready_sink_d_ready <= s7pciephy_rx_datapath_pipe_ready_sink_ready;
        s7pciephy_rx_datapath_pipe_ready_sink_d_first <= s7pciephy_rx_datapath_pipe_ready_sink_first;
        s7pciephy_rx_datapath_pipe_ready_sink_d_last <= s7pciephy_rx_datapath_pipe_ready_sink_last;
        s7pciephy_rx_datapath_pipe_ready_sink_d_payload_dat <= s7pciephy_rx_datapath_pipe_ready_sink_payload_dat;
        s7pciephy_rx_datapath_pipe_ready_sink_d_payload_be <= s7pciephy_rx_datapath_pipe_ready_sink_payload_be;
    end
    if (pcie_rst) begin
        s7pciephy_tx_datapath_pipe_ready_valid <= 1'd0;
        s7pciephy_tx_datapath_pipe_ready_sink_d_valid <= 1'd0;
        s7pciephy_tx_datapath_pipe_ready_sink_d_ready <= 1'd0;
        s7pciephy_tx_datapath_pipe_ready_sink_d_payload_dat <= 64'd0;
        s7pciephy_tx_datapath_pipe_ready_sink_d_payload_be <= 8'd0;
        s7pciephy_rx_datapath_pipe_ready_valid <= 1'd0;
        s7pciephy_rx_datapath_pipe_ready_sink_d_valid <= 1'd0;
        s7pciephy_rx_datapath_pipe_ready_sink_d_ready <= 1'd0;
        s7pciephy_rx_datapath_pipe_ready_sink_d_payload_dat <= 64'd0;
        s7pciephy_rx_datapath_pipe_ready_sink_d_payload_be <= 8'd0;
    end
end

always @(posedge pclk_clk) begin
    rx_data <= (rx_data + 1'd1);
    rx_ctl <= (rx_ctl + 1'd1);
    if ((s7pciephy_pipe_pclk_sel_r == 1'd1)) begin
        s7pciephy_pclk_sel <= 1'd1;
    end
    if ((s7pciephy_pipe_pclk_sel_r == 1'd0)) begin
        s7pciephy_pclk_sel <= 1'd0;
    end
    if (pclk_rst) begin
        s7pciephy_pclk_sel <= 1'd0;
        rx_data <= 16'd0;
        rx_ctl <= 2'd0;
    end
    xilinxmultiregimpl9_regs0 <= s7pciephy_pipe_pclk_sel;
    xilinxmultiregimpl9_regs1 <= xilinxmultiregimpl9_regs0;
end

always @(posedge sniffer_clk) begin
    if (pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_source_ready) begin
        pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_strobe_all <= 1'd0;
    end
    if (pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_load_part) begin
        if (((pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_demux == 1'd1) | pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_sink_last)) begin
            pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_demux <= 1'd0;
            pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_strobe_all <= 1'd1;
        end else begin
            pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_demux <= (pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_demux + 1'd1);
        end
    end
    if ((pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_source_valid & pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_source_ready)) begin
        if ((pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_sink_valid & pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_sink_ready)) begin
            pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_source_first <= pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_sink_first;
            pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_source_last <= pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_sink_last;
        end else begin
            pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_source_first <= 1'd0;
            pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_source_last <= 1'd0;
        end
    end else begin
        if ((pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_sink_valid & pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_sink_ready)) begin
            pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_source_first <= (pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_sink_first | pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_source_first);
            pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_source_last <= (pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_sink_last | pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_source_last);
        end
    end
    if (pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_load_part) begin
        case (pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_demux)
            1'd0: begin
                pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_source_payload_data[17:0] <= pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_sink_payload_data;
            end
            1'd1: begin
                pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_source_payload_data[35:18] <= pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_sink_payload_data;
            end
        endcase
    end
    if (pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_load_part) begin
        pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_source_payload_valid_token_count <= (pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_demux + 1'd1);
    end
    if (((~pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_pipe_valid_source_valid) | pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_pipe_valid_source_ready)) begin
        pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_pipe_valid_source_valid <= pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_pipe_valid_sink_valid;
        pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_pipe_valid_source_first <= pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_pipe_valid_sink_first;
        pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_pipe_valid_source_last <= pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_pipe_valid_sink_last;
        pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_pipe_valid_source_payload_data <= pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_pipe_valid_sink_payload_data;
        pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_pipe_valid_source_payload_ctrl <= pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_pipe_valid_sink_payload_ctrl;
    end
    pcie_ptm_sniffer_rawdatapath_cdc_graycounter0_q_binary <= pcie_ptm_sniffer_rawdatapath_cdc_graycounter0_q_next_binary;
    pcie_ptm_sniffer_rawdatapath_cdc_graycounter0_q <= pcie_ptm_sniffer_rawdatapath_cdc_graycounter0_q_next;
    if ((pcie_ptm_sniffer_rawdatapath_cdc_re | (~pcie_ptm_sniffer_rawdatapath_cdc_readable))) begin
        pcie_ptm_sniffer_rawdatapath_cdc_dout <= pcie_ptm_sniffer_rawdatapath_cdc_asyncfifo_dout;
        pcie_ptm_sniffer_rawdatapath_cdc_readable <= pcie_ptm_sniffer_rawdatapath_cdc_asyncfifo_readable;
    end
    pcie_ptm_sniffer_rawdatapath_cdc_graycounter1_q_binary <= pcie_ptm_sniffer_rawdatapath_cdc_graycounter1_q_next_binary;
    pcie_ptm_sniffer_rawdatapath_cdc_graycounter1_q <= pcie_ptm_sniffer_rawdatapath_cdc_graycounter1_q_next;
    if ((pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_valid & pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_sink_ready)) begin
        if ((pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_enable & pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_update)) begin
            pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_alignment_d <= pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_alignment;
        end
    end
    if (((~pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_pipe_valid_source_valid) | pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_pipe_valid_source_ready)) begin
        pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_pipe_valid_source_valid <= pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_pipe_valid_sink_valid;
        pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_pipe_valid_source_first <= pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_pipe_valid_sink_first;
        pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_pipe_valid_source_last <= pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_pipe_valid_sink_last;
        pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_pipe_valid_source_payload_data <= pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_pipe_valid_sink_payload_data;
        pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_pipe_valid_source_payload_ctrl <= pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_pipe_valid_sink_payload_ctrl;
    end
    if (((~pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_pipe_valid_source_valid) | pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_pipe_valid_source_ready)) begin
        pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_pipe_valid_source_valid <= pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_pipe_valid_sink_valid;
        pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_pipe_valid_source_first <= pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_pipe_valid_sink_first;
        pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_pipe_valid_source_last <= pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_pipe_valid_sink_last;
        pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_pipe_valid_source_payload_data <= pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_pipe_valid_sink_payload_data;
        pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_pipe_valid_source_payload_ctrl <= pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_pipe_valid_sink_payload_ctrl;
    end
    if (pcie_ptm_sniffer_rawdescrambler_scrambler_ce) begin
        pcie_ptm_sniffer_rawdescrambler_scrambler_cur <= pcie_ptm_sniffer_rawdescrambler_scrambler_new;
    end
    if (pcie_ptm_sniffer_rawdescrambler_scrambler_reset) begin
        pcie_ptm_sniffer_rawdescrambler_scrambler_cur <= 16'd65535;
    end
    if (pcie_ptm_sniffer_tlpaligner_sink_valid) begin
        pcie_ptm_sniffer_tlpaligner_sink_data_d <= pcie_ptm_sniffer_tlpaligner_sink_payload_data;
        pcie_ptm_sniffer_tlpaligner_sink_data_dd <= pcie_ptm_sniffer_tlpaligner_sink_data_d;
        pcie_ptm_sniffer_tlpaligner_sink_ctrl_d <= pcie_ptm_sniffer_tlpaligner_sink_payload_ctrl;
        pcie_ptm_sniffer_tlpaligner_sink_ctrl_dd <= pcie_ptm_sniffer_tlpaligner_sink_ctrl_d;
    end
    litepciecore_clockdomainsrenamer0_state <= litepciecore_clockdomainsrenamer0_next_state;
    if (pcie_ptm_sniffer_tlpaligner_alignment_clockdomainsrenamer0_next_value_ce0) begin
        pcie_ptm_sniffer_tlpaligner_alignment <= pcie_ptm_sniffer_tlpaligner_alignment_clockdomainsrenamer0_next_value0;
    end
    if (pcie_ptm_sniffer_tlpaligner_first_clockdomainsrenamer0_next_value_ce1) begin
        pcie_ptm_sniffer_tlpaligner_first <= pcie_ptm_sniffer_tlpaligner_first_clockdomainsrenamer0_next_value1;
    end
    if (pcie_ptm_sniffer_tlpfilterformater_fifo_syncfifo_re) begin
        pcie_ptm_sniffer_tlpfilterformater_fifo_readable <= 1'd1;
    end else begin
        if (pcie_ptm_sniffer_tlpfilterformater_fifo_re) begin
            pcie_ptm_sniffer_tlpfilterformater_fifo_readable <= 1'd0;
        end
    end
    if (((pcie_ptm_sniffer_tlpfilterformater_fifo_syncfifo_we & pcie_ptm_sniffer_tlpfilterformater_fifo_syncfifo_writable) & (~pcie_ptm_sniffer_tlpfilterformater_fifo_replace))) begin
        pcie_ptm_sniffer_tlpfilterformater_fifo_produce <= (pcie_ptm_sniffer_tlpfilterformater_fifo_produce + 1'd1);
    end
    if (pcie_ptm_sniffer_tlpfilterformater_fifo_do_read) begin
        pcie_ptm_sniffer_tlpfilterformater_fifo_consume <= (pcie_ptm_sniffer_tlpfilterformater_fifo_consume + 1'd1);
    end
    if (((pcie_ptm_sniffer_tlpfilterformater_fifo_syncfifo_we & pcie_ptm_sniffer_tlpfilterformater_fifo_syncfifo_writable) & (~pcie_ptm_sniffer_tlpfilterformater_fifo_replace))) begin
        if ((~pcie_ptm_sniffer_tlpfilterformater_fifo_do_read)) begin
            pcie_ptm_sniffer_tlpfilterformater_fifo_level0 <= (pcie_ptm_sniffer_tlpfilterformater_fifo_level0 + 1'd1);
        end
    end else begin
        if (pcie_ptm_sniffer_tlpfilterformater_fifo_do_read) begin
            pcie_ptm_sniffer_tlpfilterformater_fifo_level0 <= (pcie_ptm_sniffer_tlpfilterformater_fifo_level0 - 1'd1);
        end
    end
    if (pcie_ptm_sniffer_tlpfilterformater_conv_converter_source_ready) begin
        pcie_ptm_sniffer_tlpfilterformater_conv_converter_strobe_all <= 1'd0;
    end
    if (pcie_ptm_sniffer_tlpfilterformater_conv_converter_load_part) begin
        if (((pcie_ptm_sniffer_tlpfilterformater_conv_converter_demux == 1'd1) | pcie_ptm_sniffer_tlpfilterformater_conv_converter_sink_last)) begin
            pcie_ptm_sniffer_tlpfilterformater_conv_converter_demux <= 1'd0;
            pcie_ptm_sniffer_tlpfilterformater_conv_converter_strobe_all <= 1'd1;
        end else begin
            pcie_ptm_sniffer_tlpfilterformater_conv_converter_demux <= (pcie_ptm_sniffer_tlpfilterformater_conv_converter_demux + 1'd1);
        end
    end
    if ((pcie_ptm_sniffer_tlpfilterformater_conv_converter_source_valid & pcie_ptm_sniffer_tlpfilterformater_conv_converter_source_ready)) begin
        if ((pcie_ptm_sniffer_tlpfilterformater_conv_converter_sink_valid & pcie_ptm_sniffer_tlpfilterformater_conv_converter_sink_ready)) begin
            pcie_ptm_sniffer_tlpfilterformater_conv_converter_source_first <= pcie_ptm_sniffer_tlpfilterformater_conv_converter_sink_first;
            pcie_ptm_sniffer_tlpfilterformater_conv_converter_source_last <= pcie_ptm_sniffer_tlpfilterformater_conv_converter_sink_last;
        end else begin
            pcie_ptm_sniffer_tlpfilterformater_conv_converter_source_first <= 1'd0;
            pcie_ptm_sniffer_tlpfilterformater_conv_converter_source_last <= 1'd0;
        end
    end else begin
        if ((pcie_ptm_sniffer_tlpfilterformater_conv_converter_sink_valid & pcie_ptm_sniffer_tlpfilterformater_conv_converter_sink_ready)) begin
            pcie_ptm_sniffer_tlpfilterformater_conv_converter_source_first <= (pcie_ptm_sniffer_tlpfilterformater_conv_converter_sink_first | pcie_ptm_sniffer_tlpfilterformater_conv_converter_source_first);
            pcie_ptm_sniffer_tlpfilterformater_conv_converter_source_last <= (pcie_ptm_sniffer_tlpfilterformater_conv_converter_sink_last | pcie_ptm_sniffer_tlpfilterformater_conv_converter_source_last);
        end
    end
    if (pcie_ptm_sniffer_tlpfilterformater_conv_converter_load_part) begin
        case (pcie_ptm_sniffer_tlpfilterformater_conv_converter_demux)
            1'd0: begin
                pcie_ptm_sniffer_tlpfilterformater_conv_converter_source_payload_data[35:0] <= pcie_ptm_sniffer_tlpfilterformater_conv_converter_sink_payload_data;
            end
            1'd1: begin
                pcie_ptm_sniffer_tlpfilterformater_conv_converter_source_payload_data[71:36] <= pcie_ptm_sniffer_tlpfilterformater_conv_converter_sink_payload_data;
            end
        endcase
    end
    if (pcie_ptm_sniffer_tlpfilterformater_conv_converter_load_part) begin
        pcie_ptm_sniffer_tlpfilterformater_conv_converter_source_payload_valid_token_count <= (pcie_ptm_sniffer_tlpfilterformater_conv_converter_demux + 1'd1);
    end
    litepciecore_clockdomainsrenamer1_state <= litepciecore_clockdomainsrenamer1_next_state;
    if (pcie_ptm_sniffer_tlpfilterformater_count_clockdomainsrenamer1_next_value_ce) begin
        pcie_ptm_sniffer_tlpfilterformater_count <= pcie_ptm_sniffer_tlpfilterformater_count_clockdomainsrenamer1_next_value;
    end
    if ((pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_sink_valid & pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_sink_ready)) begin
        pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_dat <= pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_sink_payload_dat;
        pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_be <= pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_sink_payload_be;
    end
    litepciecore_clockdomainsrenamer2_state <= litepciecore_clockdomainsrenamer2_next_state;
    if (pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_first_clockdomainsrenamer2_next_value_ce0) begin
        pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_first <= pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_first_clockdomainsrenamer2_next_value0;
    end
    if (pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_last_clockdomainsrenamer2_next_value_ce1) begin
        pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_last <= pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_last_clockdomainsrenamer2_next_value1;
    end
    if (pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_count_clockdomainsrenamer2_next_value_ce2) begin
        pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_count <= pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_count_clockdomainsrenamer2_next_value2;
    end
    if (litepciecore_clockdomainsrenamer2_next_value_ce0) begin
        pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_payload_header[31:0] <= litepciecore_clockdomainsrenamer2_next_value0;
    end
    if (litepciecore_clockdomainsrenamer2_next_value_ce1) begin
        pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_payload_header[63:32] <= litepciecore_clockdomainsrenamer2_next_value1;
    end
    if (litepciecore_clockdomainsrenamer2_next_value_ce2) begin
        pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_payload_header[95:64] <= litepciecore_clockdomainsrenamer2_next_value2;
    end
    if (litepciecore_clockdomainsrenamer2_next_value_ce3) begin
        pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_payload_header[127:96] <= litepciecore_clockdomainsrenamer2_next_value3;
    end
    if (pcie_ptm_sniffer_litepcietlpdepacketizer_dispatcher_first) begin
        pcie_ptm_sniffer_litepcietlpdepacketizer_dispatcher_sel_ongoing <= pcie_ptm_sniffer_litepcietlpdepacketizer_dispatcher_sel0;
    end
    pcie_ptm_sniffer_litepcietlpdepacketizer_dispatcher_ongoing1 <= ((pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_valid | pcie_ptm_sniffer_litepcietlpdepacketizer_dispatcher_ongoing1) & (~pcie_ptm_sniffer_litepcietlpdepacketizer_dispatcher_last));
    if (pcie_ptm_sniffer_litepcietlpdepacketizer_dispatcher_last) begin
        pcie_ptm_sniffer_litepcietlpdepacketizer_dispatcher_first <= 1'd1;
    end else begin
        if ((pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_valid & pcie_ptm_sniffer_litepcietlpdepacketizer_dispatch_sink_ready)) begin
            pcie_ptm_sniffer_litepcietlpdepacketizer_dispatcher_first <= 1'd0;
        end
    end
    pcie_ptm_sniffer_cdc_cdc_graycounter0_q_binary <= pcie_ptm_sniffer_cdc_cdc_graycounter0_q_next_binary;
    pcie_ptm_sniffer_cdc_cdc_graycounter0_q <= pcie_ptm_sniffer_cdc_cdc_graycounter0_q_next;
    if (sniffer_rst) begin
        pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_source_payload_data <= 36'd0;
        pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_source_payload_valid_token_count <= 2'd0;
        pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_demux <= 1'd0;
        pcie_ptm_sniffer_rawdatapath_converter_strideconverter_converter_strobe_all <= 1'd0;
        pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_pipe_valid_source_valid <= 1'd0;
        pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_pipe_valid_source_payload_data <= 16'd0;
        pcie_ptm_sniffer_rawdatapath_converter_bufferizeendpoints_pipe_valid_source_payload_ctrl <= 2'd0;
        pcie_ptm_sniffer_rawdatapath_cdc_readable <= 1'd0;
        pcie_ptm_sniffer_rawdatapath_cdc_graycounter0_q <= 4'd0;
        pcie_ptm_sniffer_rawdatapath_cdc_graycounter0_q_binary <= 4'd0;
        pcie_ptm_sniffer_rawdatapath_cdc_graycounter1_q <= 4'd0;
        pcie_ptm_sniffer_rawdatapath_cdc_graycounter1_q_binary <= 4'd0;
        pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_alignment_d <= 2'd0;
        pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_pipe_valid_source_valid <= 1'd0;
        pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_pipe_valid_source_payload_data <= 32'd0;
        pcie_ptm_sniffer_rawdatapath_word_aligner_rawwordaligner_pipe_valid_source_payload_ctrl <= 4'd0;
        pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_pipe_valid_source_valid <= 1'd0;
        pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_pipe_valid_source_payload_data <= 32'd0;
        pcie_ptm_sniffer_rawdatapath_word_aligner_bufferizeendpoints_pipe_valid_source_payload_ctrl <= 4'd0;
        pcie_ptm_sniffer_rawdescrambler_scrambler_cur <= 16'd65535;
        pcie_ptm_sniffer_tlpaligner_first <= 1'd0;
        pcie_ptm_sniffer_tlpaligner_alignment <= 2'd0;
        pcie_ptm_sniffer_tlpaligner_sink_ctrl_d <= 4'd0;
        pcie_ptm_sniffer_tlpaligner_sink_ctrl_dd <= 4'd0;
        pcie_ptm_sniffer_tlpaligner_sink_data_d <= 32'd0;
        pcie_ptm_sniffer_tlpaligner_sink_data_dd <= 32'd0;
        pcie_ptm_sniffer_tlpfilterformater_count <= 32'd0;
        pcie_ptm_sniffer_tlpfilterformater_fifo_readable <= 1'd0;
        pcie_ptm_sniffer_tlpfilterformater_fifo_level0 <= 3'd0;
        pcie_ptm_sniffer_tlpfilterformater_fifo_produce <= 2'd0;
        pcie_ptm_sniffer_tlpfilterformater_fifo_consume <= 2'd0;
        pcie_ptm_sniffer_tlpfilterformater_conv_converter_source_payload_data <= 72'd0;
        pcie_ptm_sniffer_tlpfilterformater_conv_converter_source_payload_valid_token_count <= 2'd0;
        pcie_ptm_sniffer_tlpfilterformater_conv_converter_demux <= 1'd0;
        pcie_ptm_sniffer_tlpfilterformater_conv_converter_strobe_all <= 1'd0;
        pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_source_payload_header <= 128'd0;
        pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_first <= 1'd0;
        pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_last <= 1'd0;
        pcie_ptm_sniffer_litepcietlpdepacketizer_header_extracter_count <= 1'd0;
        pcie_ptm_sniffer_litepcietlpdepacketizer_dispatcher_first <= 1'd1;
        pcie_ptm_sniffer_litepcietlpdepacketizer_dispatcher_ongoing1 <= 1'd0;
        pcie_ptm_sniffer_litepcietlpdepacketizer_dispatcher_sel_ongoing <= 1'd0;
        pcie_ptm_sniffer_cdc_cdc_graycounter0_q <= 3'd0;
        pcie_ptm_sniffer_cdc_cdc_graycounter0_q_binary <= 3'd0;
        litepciecore_clockdomainsrenamer0_state <= 2'd0;
        litepciecore_clockdomainsrenamer1_state <= 2'd0;
        litepciecore_clockdomainsrenamer2_state <= 2'd0;
    end
    xilinxmultiregimpl12_regs0 <= pcie_ptm_sniffer_rawdatapath_cdc_graycounter0_q;
    xilinxmultiregimpl12_regs1 <= xilinxmultiregimpl12_regs0;
    xilinxmultiregimpl13_regs0 <= pcie_ptm_sniffer_rawdatapath_cdc_graycounter1_q;
    xilinxmultiregimpl13_regs1 <= xilinxmultiregimpl13_regs0;
    xilinxmultiregimpl15_regs0 <= pcie_ptm_sniffer_cdc_cdc_graycounter1_q;
    xilinxmultiregimpl15_regs1 <= xilinxmultiregimpl15_regs0;
end

always @(posedge sys_clk) begin
    slave_sel_r <= slave_sel;
    if (wait_1) begin
        if ((~done)) begin
            count <= (count - 1'd1);
        end
    end else begin
        count <= 20'd1000000;
    end
    if ((bus_errors != 32'd4294967295)) begin
        if (bus_error) begin
            bus_errors <= (bus_errors + 1'd1);
        end
    end
    if (((~s7pciephy_tx_datapath_pipe_valid_source_valid) | s7pciephy_tx_datapath_pipe_valid_source_ready)) begin
        s7pciephy_tx_datapath_pipe_valid_source_valid <= s7pciephy_tx_datapath_pipe_valid_sink_valid;
        s7pciephy_tx_datapath_pipe_valid_source_first <= s7pciephy_tx_datapath_pipe_valid_sink_first;
        s7pciephy_tx_datapath_pipe_valid_source_last <= s7pciephy_tx_datapath_pipe_valid_sink_last;
        s7pciephy_tx_datapath_pipe_valid_source_payload_dat <= s7pciephy_tx_datapath_pipe_valid_sink_payload_dat;
        s7pciephy_tx_datapath_pipe_valid_source_payload_be <= s7pciephy_tx_datapath_pipe_valid_sink_payload_be;
    end
    if (((~s7pciephy_rx_datapath_pipe_valid_source_valid) | s7pciephy_rx_datapath_pipe_valid_source_ready)) begin
        s7pciephy_rx_datapath_pipe_valid_source_valid <= s7pciephy_rx_datapath_pipe_valid_sink_valid;
        s7pciephy_rx_datapath_pipe_valid_source_first <= s7pciephy_rx_datapath_pipe_valid_sink_first;
        s7pciephy_rx_datapath_pipe_valid_source_last <= s7pciephy_rx_datapath_pipe_valid_sink_last;
        s7pciephy_rx_datapath_pipe_valid_source_payload_dat <= s7pciephy_rx_datapath_pipe_valid_sink_payload_dat;
        s7pciephy_rx_datapath_pipe_valid_source_payload_be <= s7pciephy_rx_datapath_pipe_valid_sink_payload_be;
    end
    if ((depacketizer_header_extracter_sink_valid & depacketizer_header_extracter_sink_ready)) begin
        depacketizer_header_extracter_dat <= depacketizer_header_extracter_sink_payload_dat;
        depacketizer_header_extracter_be <= depacketizer_header_extracter_sink_payload_be;
    end
    litepciecore_litepcieendpoint_state <= litepciecore_litepcieendpoint_next_state;
    if (depacketizer_header_extracter_first_litepcietlpdepacketizer_next_value_ce0) begin
        depacketizer_header_extracter_first <= depacketizer_header_extracter_first_litepcietlpdepacketizer_next_value0;
    end
    if (depacketizer_header_extracter_last_litepcietlpdepacketizer_next_value_ce1) begin
        depacketizer_header_extracter_last <= depacketizer_header_extracter_last_litepcietlpdepacketizer_next_value1;
    end
    if (depacketizer_header_extracter_count_litepcietlpdepacketizer_next_value_ce2) begin
        depacketizer_header_extracter_count <= depacketizer_header_extracter_count_litepcietlpdepacketizer_next_value2;
    end
    if (litepciecore_litepcieendpoint_next_value_ce0) begin
        depacketizer_header_extracter_source_payload_header[31:0] <= litepciecore_litepcieendpoint_next_value0;
    end
    if (litepciecore_litepcieendpoint_next_value_ce1) begin
        depacketizer_header_extracter_source_payload_header[63:32] <= litepciecore_litepcieendpoint_next_value1;
    end
    if (litepciecore_litepcieendpoint_next_value_ce2) begin
        depacketizer_header_extracter_source_payload_header[95:64] <= litepciecore_litepcieendpoint_next_value2;
    end
    if (litepciecore_litepcieendpoint_next_value_ce3) begin
        depacketizer_header_extracter_source_payload_header[127:96] <= litepciecore_litepcieendpoint_next_value3;
    end
    if (depacketizer_dispatcher_first) begin
        depacketizer_dispatcher_sel_ongoing <= depacketizer_dispatcher_sel0;
    end
    depacketizer_dispatcher_ongoing1 <= ((depacketizer_dispatch_sink_valid | depacketizer_dispatcher_ongoing1) & (~depacketizer_dispatcher_last));
    if (depacketizer_dispatcher_last) begin
        depacketizer_dispatcher_first <= 1'd1;
    end else begin
        if ((depacketizer_dispatch_sink_valid & depacketizer_dispatch_sink_ready)) begin
            depacketizer_dispatcher_first <= 1'd0;
        end
    end
    case (packetizer_grant)
        1'd0: begin
            if ((~packetizer_request[0])) begin
                if (packetizer_request[1]) begin
                    packetizer_grant <= 1'd1;
                end else begin
                    if (packetizer_request[2]) begin
                        packetizer_grant <= 2'd2;
                    end
                end
            end
        end
        1'd1: begin
            if ((~packetizer_request[1])) begin
                if (packetizer_request[2]) begin
                    packetizer_grant <= 2'd2;
                end else begin
                    if (packetizer_request[0]) begin
                        packetizer_grant <= 1'd0;
                    end
                end
            end
        end
        2'd2: begin
            if ((~packetizer_request[2])) begin
                if (packetizer_request[0]) begin
                    packetizer_grant <= 1'd0;
                end else begin
                    if (packetizer_request[1]) begin
                        packetizer_grant <= 1'd1;
                    end
                end
            end
        end
    endcase
    packetizer_status0_ongoing1 <= ((packetizer_tlp_raw_req_valid | packetizer_status0_ongoing1) & (~packetizer_status0_last));
    if (packetizer_status0_last) begin
        packetizer_status0_first <= 1'd1;
    end else begin
        if ((packetizer_tlp_raw_req_valid & packetizer_tlp_raw_req_ready)) begin
            packetizer_status0_first <= 1'd0;
        end
    end
    packetizer_status1_ongoing1 <= ((packetizer_tlp_raw_cmp_valid | packetizer_status1_ongoing1) & (~packetizer_status1_last));
    if (packetizer_status1_last) begin
        packetizer_status1_first <= 1'd1;
    end else begin
        if ((packetizer_tlp_raw_cmp_valid & packetizer_tlp_raw_cmp_ready)) begin
            packetizer_status1_first <= 1'd0;
        end
    end
    packetizer_status2_ongoing1 <= ((packetizer_tlp_raw_ptm_valid | packetizer_status2_ongoing1) & (~packetizer_status2_last));
    if (packetizer_status2_last) begin
        packetizer_status2_first <= 1'd1;
    end else begin
        if ((packetizer_tlp_raw_ptm_valid & packetizer_tlp_raw_ptm_ready)) begin
            packetizer_status2_first <= 1'd0;
        end
    end
    if ((packetizer_header_inserter_3dws_sink_valid & packetizer_header_inserter_3dws_sink_ready)) begin
        packetizer_header_inserter_3dws_dat <= packetizer_header_inserter_3dws_sink_payload_dat;
        packetizer_header_inserter_3dws_be <= packetizer_header_inserter_3dws_sink_payload_be;
        packetizer_header_inserter_3dws_last <= packetizer_header_inserter_3dws_sink_last;
    end
    litepciecore_litepcieendpoint_litepcietlpheaderinserter64b3dws_state <= litepciecore_litepcieendpoint_litepcietlpheaderinserter64b3dws_next_state;
    if (packetizer_header_inserter_3dws_count_litepcietlpheaderinserter64b3dws_next_value_ce) begin
        packetizer_header_inserter_3dws_count <= packetizer_header_inserter_3dws_count_litepcietlpheaderinserter64b3dws_next_value;
    end
    litepciecore_litepcieendpoint_litepcietlpheaderinserter64b4dws_state <= litepciecore_litepcieendpoint_litepcietlpheaderinserter64b4dws_next_state;
    if (packetizer_header_inserter_4dws_count_litepcietlpheaderinserter64b4dws_next_value_ce) begin
        packetizer_header_inserter_4dws_count <= packetizer_header_inserter_4dws_count_litepcietlpheaderinserter64b4dws_next_value;
    end
    if (litepciecore_litepcieendpoint_first) begin
        litepciecore_litepcieendpoint_sel_ongoing <= litepciecore_litepcieendpoint_sel0;
    end
    litepciecore_litepcieendpoint_ongoing1 <= ((slave_source_valid | litepciecore_litepcieendpoint_ongoing1) & (~litepciecore_litepcieendpoint_last));
    if (litepciecore_litepcieendpoint_last) begin
        litepciecore_litepcieendpoint_first <= 1'd1;
    end else begin
        if ((slave_source_valid & slave_source_ready)) begin
            litepciecore_litepcieendpoint_first <= 1'd0;
        end
    end
    case (litepciecore_litepcieendpoint_grant)
        1'd0: begin
            if ((~litepciecore_litepcieendpoint_request[0])) begin
                if (litepciecore_litepcieendpoint_request[1]) begin
                    litepciecore_litepcieendpoint_grant <= 1'd1;
                end
            end
        end
        1'd1: begin
            if ((~litepciecore_litepcieendpoint_request[1])) begin
                if (litepciecore_litepcieendpoint_request[0]) begin
                    litepciecore_litepcieendpoint_grant <= 1'd0;
                end
            end
        end
    endcase
    litepciecore_litepcieendpoint_status0_ongoing1 <= ((pcie_wishbone_master_sink_valid | litepciecore_litepcieendpoint_status0_ongoing1) & (~litepciecore_litepcieendpoint_status0_last));
    if (litepciecore_litepcieendpoint_status0_last) begin
        litepciecore_litepcieendpoint_status0_first <= 1'd1;
    end else begin
        if ((pcie_wishbone_master_sink_valid & pcie_wishbone_master_sink_ready)) begin
            litepciecore_litepcieendpoint_status0_first <= 1'd0;
        end
    end
    litepciecore_litepcieendpoint_status1_ongoing1 <= ((ptm_capabilities_sink_valid | litepciecore_litepcieendpoint_status1_ongoing1) & (~litepciecore_litepcieendpoint_status1_last));
    if (litepciecore_litepcieendpoint_status1_last) begin
        litepciecore_litepcieendpoint_status1_first <= 1'd1;
    end else begin
        if ((ptm_capabilities_sink_valid & ptm_capabilities_sink_ready)) begin
            litepciecore_litepcieendpoint_status1_first <= 1'd0;
        end
    end
    if (litepciecore_litepcieendpoint_tag_queue_syncfifo_re) begin
        litepciecore_litepcieendpoint_tag_queue_readable <= 1'd1;
    end else begin
        if (litepciecore_litepcieendpoint_tag_queue_re) begin
            litepciecore_litepcieendpoint_tag_queue_readable <= 1'd0;
        end
    end
    if (((litepciecore_litepcieendpoint_tag_queue_syncfifo_we & litepciecore_litepcieendpoint_tag_queue_syncfifo_writable) & (~litepciecore_litepcieendpoint_tag_queue_replace))) begin
        litepciecore_litepcieendpoint_tag_queue_produce <= (litepciecore_litepcieendpoint_tag_queue_produce + 1'd1);
    end
    if (litepciecore_litepcieendpoint_tag_queue_do_read) begin
        litepciecore_litepcieendpoint_tag_queue_consume <= (litepciecore_litepcieendpoint_tag_queue_consume + 1'd1);
    end
    if (((litepciecore_litepcieendpoint_tag_queue_syncfifo_we & litepciecore_litepcieendpoint_tag_queue_syncfifo_writable) & (~litepciecore_litepcieendpoint_tag_queue_replace))) begin
        if ((~litepciecore_litepcieendpoint_tag_queue_do_read)) begin
            litepciecore_litepcieendpoint_tag_queue_level0 <= (litepciecore_litepcieendpoint_tag_queue_level0 + 1'd1);
        end
    end else begin
        if (litepciecore_litepcieendpoint_tag_queue_do_read) begin
            litepciecore_litepcieendpoint_tag_queue_level0 <= (litepciecore_litepcieendpoint_tag_queue_level0 - 1'd1);
        end
    end
    if (litepciecore_litepcieendpoint_req_queue_syncfifo_re) begin
        litepciecore_litepcieendpoint_req_queue_readable <= 1'd1;
    end else begin
        if (litepciecore_litepcieendpoint_req_queue_re) begin
            litepciecore_litepcieendpoint_req_queue_readable <= 1'd0;
        end
    end
    if (((litepciecore_litepcieendpoint_req_queue_syncfifo_we & litepciecore_litepcieendpoint_req_queue_syncfifo_writable) & (~litepciecore_litepcieendpoint_req_queue_replace))) begin
        litepciecore_litepcieendpoint_req_queue_produce <= (litepciecore_litepcieendpoint_req_queue_produce + 1'd1);
    end
    if (litepciecore_litepcieendpoint_req_queue_do_read) begin
        litepciecore_litepcieendpoint_req_queue_consume <= (litepciecore_litepcieendpoint_req_queue_consume + 1'd1);
    end
    if (((litepciecore_litepcieendpoint_req_queue_syncfifo_we & litepciecore_litepcieendpoint_req_queue_syncfifo_writable) & (~litepciecore_litepcieendpoint_req_queue_replace))) begin
        if ((~litepciecore_litepcieendpoint_req_queue_do_read)) begin
            litepciecore_litepcieendpoint_req_queue_level0 <= (litepciecore_litepcieendpoint_req_queue_level0 + 1'd1);
        end
    end else begin
        if (litepciecore_litepcieendpoint_req_queue_do_read) begin
            litepciecore_litepcieendpoint_req_queue_level0 <= (litepciecore_litepcieendpoint_req_queue_level0 - 1'd1);
        end
    end
    litepciecore_litepcieendpoint_fsm0_state <= litepciecore_litepcieendpoint_fsm0_next_state;
    if (litepciecore_litepcieendpoint_syncfifo0_syncfifo0_re) begin
        litepciecore_litepcieendpoint_syncfifo0_readable <= 1'd1;
    end else begin
        if (litepciecore_litepcieendpoint_syncfifo0_re) begin
            litepciecore_litepcieendpoint_syncfifo0_readable <= 1'd0;
        end
    end
    if (((litepciecore_litepcieendpoint_syncfifo0_syncfifo0_we & litepciecore_litepcieendpoint_syncfifo0_syncfifo0_writable) & (~litepciecore_litepcieendpoint_syncfifo0_replace))) begin
        litepciecore_litepcieendpoint_syncfifo0_produce <= (litepciecore_litepcieendpoint_syncfifo0_produce + 1'd1);
    end
    if (litepciecore_litepcieendpoint_syncfifo0_do_read) begin
        litepciecore_litepcieendpoint_syncfifo0_consume <= (litepciecore_litepcieendpoint_syncfifo0_consume + 1'd1);
    end
    if (((litepciecore_litepcieendpoint_syncfifo0_syncfifo0_we & litepciecore_litepcieendpoint_syncfifo0_syncfifo0_writable) & (~litepciecore_litepcieendpoint_syncfifo0_replace))) begin
        if ((~litepciecore_litepcieendpoint_syncfifo0_do_read)) begin
            litepciecore_litepcieendpoint_syncfifo0_level0 <= (litepciecore_litepcieendpoint_syncfifo0_level0 + 1'd1);
        end
    end else begin
        if (litepciecore_litepcieendpoint_syncfifo0_do_read) begin
            litepciecore_litepcieendpoint_syncfifo0_level0 <= (litepciecore_litepcieendpoint_syncfifo0_level0 - 1'd1);
        end
    end
    if (litepciecore_litepcieendpoint_syncfifo1_syncfifo1_re) begin
        litepciecore_litepcieendpoint_syncfifo1_readable <= 1'd1;
    end else begin
        if (litepciecore_litepcieendpoint_syncfifo1_re) begin
            litepciecore_litepcieendpoint_syncfifo1_readable <= 1'd0;
        end
    end
    if (((litepciecore_litepcieendpoint_syncfifo1_syncfifo1_we & litepciecore_litepcieendpoint_syncfifo1_syncfifo1_writable) & (~litepciecore_litepcieendpoint_syncfifo1_replace))) begin
        litepciecore_litepcieendpoint_syncfifo1_produce <= (litepciecore_litepcieendpoint_syncfifo1_produce + 1'd1);
    end
    if (litepciecore_litepcieendpoint_syncfifo1_do_read) begin
        litepciecore_litepcieendpoint_syncfifo1_consume <= (litepciecore_litepcieendpoint_syncfifo1_consume + 1'd1);
    end
    if (((litepciecore_litepcieendpoint_syncfifo1_syncfifo1_we & litepciecore_litepcieendpoint_syncfifo1_syncfifo1_writable) & (~litepciecore_litepcieendpoint_syncfifo1_replace))) begin
        if ((~litepciecore_litepcieendpoint_syncfifo1_do_read)) begin
            litepciecore_litepcieendpoint_syncfifo1_level0 <= (litepciecore_litepcieendpoint_syncfifo1_level0 + 1'd1);
        end
    end else begin
        if (litepciecore_litepcieendpoint_syncfifo1_do_read) begin
            litepciecore_litepcieendpoint_syncfifo1_level0 <= (litepciecore_litepcieendpoint_syncfifo1_level0 - 1'd1);
        end
    end
    if (litepciecore_litepcieendpoint_syncfifo2_syncfifo2_re) begin
        litepciecore_litepcieendpoint_syncfifo2_readable <= 1'd1;
    end else begin
        if (litepciecore_litepcieendpoint_syncfifo2_re) begin
            litepciecore_litepcieendpoint_syncfifo2_readable <= 1'd0;
        end
    end
    if (((litepciecore_litepcieendpoint_syncfifo2_syncfifo2_we & litepciecore_litepcieendpoint_syncfifo2_syncfifo2_writable) & (~litepciecore_litepcieendpoint_syncfifo2_replace))) begin
        litepciecore_litepcieendpoint_syncfifo2_produce <= (litepciecore_litepcieendpoint_syncfifo2_produce + 1'd1);
    end
    if (litepciecore_litepcieendpoint_syncfifo2_do_read) begin
        litepciecore_litepcieendpoint_syncfifo2_consume <= (litepciecore_litepcieendpoint_syncfifo2_consume + 1'd1);
    end
    if (((litepciecore_litepcieendpoint_syncfifo2_syncfifo2_we & litepciecore_litepcieendpoint_syncfifo2_syncfifo2_writable) & (~litepciecore_litepcieendpoint_syncfifo2_replace))) begin
        if ((~litepciecore_litepcieendpoint_syncfifo2_do_read)) begin
            litepciecore_litepcieendpoint_syncfifo2_level0 <= (litepciecore_litepcieendpoint_syncfifo2_level0 + 1'd1);
        end
    end else begin
        if (litepciecore_litepcieendpoint_syncfifo2_do_read) begin
            litepciecore_litepcieendpoint_syncfifo2_level0 <= (litepciecore_litepcieendpoint_syncfifo2_level0 - 1'd1);
        end
    end
    if (litepciecore_litepcieendpoint_syncfifo3_syncfifo3_re) begin
        litepciecore_litepcieendpoint_syncfifo3_readable <= 1'd1;
    end else begin
        if (litepciecore_litepcieendpoint_syncfifo3_re) begin
            litepciecore_litepcieendpoint_syncfifo3_readable <= 1'd0;
        end
    end
    if (((litepciecore_litepcieendpoint_syncfifo3_syncfifo3_we & litepciecore_litepcieendpoint_syncfifo3_syncfifo3_writable) & (~litepciecore_litepcieendpoint_syncfifo3_replace))) begin
        litepciecore_litepcieendpoint_syncfifo3_produce <= (litepciecore_litepcieendpoint_syncfifo3_produce + 1'd1);
    end
    if (litepciecore_litepcieendpoint_syncfifo3_do_read) begin
        litepciecore_litepcieendpoint_syncfifo3_consume <= (litepciecore_litepcieendpoint_syncfifo3_consume + 1'd1);
    end
    if (((litepciecore_litepcieendpoint_syncfifo3_syncfifo3_we & litepciecore_litepcieendpoint_syncfifo3_syncfifo3_writable) & (~litepciecore_litepcieendpoint_syncfifo3_replace))) begin
        if ((~litepciecore_litepcieendpoint_syncfifo3_do_read)) begin
            litepciecore_litepcieendpoint_syncfifo3_level0 <= (litepciecore_litepcieendpoint_syncfifo3_level0 + 1'd1);
        end
    end else begin
        if (litepciecore_litepcieendpoint_syncfifo3_do_read) begin
            litepciecore_litepcieendpoint_syncfifo3_level0 <= (litepciecore_litepcieendpoint_syncfifo3_level0 - 1'd1);
        end
    end
    if (litepciecore_litepcieendpoint_syncfifo4_syncfifo4_re) begin
        litepciecore_litepcieendpoint_syncfifo4_readable <= 1'd1;
    end else begin
        if (litepciecore_litepcieendpoint_syncfifo4_re) begin
            litepciecore_litepcieendpoint_syncfifo4_readable <= 1'd0;
        end
    end
    if (((litepciecore_litepcieendpoint_syncfifo4_syncfifo4_we & litepciecore_litepcieendpoint_syncfifo4_syncfifo4_writable) & (~litepciecore_litepcieendpoint_syncfifo4_replace))) begin
        litepciecore_litepcieendpoint_syncfifo4_produce <= (litepciecore_litepcieendpoint_syncfifo4_produce + 1'd1);
    end
    if (litepciecore_litepcieendpoint_syncfifo4_do_read) begin
        litepciecore_litepcieendpoint_syncfifo4_consume <= (litepciecore_litepcieendpoint_syncfifo4_consume + 1'd1);
    end
    if (((litepciecore_litepcieendpoint_syncfifo4_syncfifo4_we & litepciecore_litepcieendpoint_syncfifo4_syncfifo4_writable) & (~litepciecore_litepcieendpoint_syncfifo4_replace))) begin
        if ((~litepciecore_litepcieendpoint_syncfifo4_do_read)) begin
            litepciecore_litepcieendpoint_syncfifo4_level0 <= (litepciecore_litepcieendpoint_syncfifo4_level0 + 1'd1);
        end
    end else begin
        if (litepciecore_litepcieendpoint_syncfifo4_do_read) begin
            litepciecore_litepcieendpoint_syncfifo4_level0 <= (litepciecore_litepcieendpoint_syncfifo4_level0 - 1'd1);
        end
    end
    if (litepciecore_litepcieendpoint_syncfifo5_syncfifo5_re) begin
        litepciecore_litepcieendpoint_syncfifo5_readable <= 1'd1;
    end else begin
        if (litepciecore_litepcieendpoint_syncfifo5_re) begin
            litepciecore_litepcieendpoint_syncfifo5_readable <= 1'd0;
        end
    end
    if (((litepciecore_litepcieendpoint_syncfifo5_syncfifo5_we & litepciecore_litepcieendpoint_syncfifo5_syncfifo5_writable) & (~litepciecore_litepcieendpoint_syncfifo5_replace))) begin
        litepciecore_litepcieendpoint_syncfifo5_produce <= (litepciecore_litepcieendpoint_syncfifo5_produce + 1'd1);
    end
    if (litepciecore_litepcieendpoint_syncfifo5_do_read) begin
        litepciecore_litepcieendpoint_syncfifo5_consume <= (litepciecore_litepcieendpoint_syncfifo5_consume + 1'd1);
    end
    if (((litepciecore_litepcieendpoint_syncfifo5_syncfifo5_we & litepciecore_litepcieendpoint_syncfifo5_syncfifo5_writable) & (~litepciecore_litepcieendpoint_syncfifo5_replace))) begin
        if ((~litepciecore_litepcieendpoint_syncfifo5_do_read)) begin
            litepciecore_litepcieendpoint_syncfifo5_level0 <= (litepciecore_litepcieendpoint_syncfifo5_level0 + 1'd1);
        end
    end else begin
        if (litepciecore_litepcieendpoint_syncfifo5_do_read) begin
            litepciecore_litepcieendpoint_syncfifo5_level0 <= (litepciecore_litepcieendpoint_syncfifo5_level0 - 1'd1);
        end
    end
    if (litepciecore_litepcieendpoint_syncfifo6_syncfifo6_re) begin
        litepciecore_litepcieendpoint_syncfifo6_readable <= 1'd1;
    end else begin
        if (litepciecore_litepcieendpoint_syncfifo6_re) begin
            litepciecore_litepcieendpoint_syncfifo6_readable <= 1'd0;
        end
    end
    if (((litepciecore_litepcieendpoint_syncfifo6_syncfifo6_we & litepciecore_litepcieendpoint_syncfifo6_syncfifo6_writable) & (~litepciecore_litepcieendpoint_syncfifo6_replace))) begin
        litepciecore_litepcieendpoint_syncfifo6_produce <= (litepciecore_litepcieendpoint_syncfifo6_produce + 1'd1);
    end
    if (litepciecore_litepcieendpoint_syncfifo6_do_read) begin
        litepciecore_litepcieendpoint_syncfifo6_consume <= (litepciecore_litepcieendpoint_syncfifo6_consume + 1'd1);
    end
    if (((litepciecore_litepcieendpoint_syncfifo6_syncfifo6_we & litepciecore_litepcieendpoint_syncfifo6_syncfifo6_writable) & (~litepciecore_litepcieendpoint_syncfifo6_replace))) begin
        if ((~litepciecore_litepcieendpoint_syncfifo6_do_read)) begin
            litepciecore_litepcieendpoint_syncfifo6_level0 <= (litepciecore_litepcieendpoint_syncfifo6_level0 + 1'd1);
        end
    end else begin
        if (litepciecore_litepcieendpoint_syncfifo6_do_read) begin
            litepciecore_litepcieendpoint_syncfifo6_level0 <= (litepciecore_litepcieendpoint_syncfifo6_level0 - 1'd1);
        end
    end
    if (litepciecore_litepcieendpoint_syncfifo7_syncfifo7_re) begin
        litepciecore_litepcieendpoint_syncfifo7_readable <= 1'd1;
    end else begin
        if (litepciecore_litepcieendpoint_syncfifo7_re) begin
            litepciecore_litepcieendpoint_syncfifo7_readable <= 1'd0;
        end
    end
    if (((litepciecore_litepcieendpoint_syncfifo7_syncfifo7_we & litepciecore_litepcieendpoint_syncfifo7_syncfifo7_writable) & (~litepciecore_litepcieendpoint_syncfifo7_replace))) begin
        litepciecore_litepcieendpoint_syncfifo7_produce <= (litepciecore_litepcieendpoint_syncfifo7_produce + 1'd1);
    end
    if (litepciecore_litepcieendpoint_syncfifo7_do_read) begin
        litepciecore_litepcieendpoint_syncfifo7_consume <= (litepciecore_litepcieendpoint_syncfifo7_consume + 1'd1);
    end
    if (((litepciecore_litepcieendpoint_syncfifo7_syncfifo7_we & litepciecore_litepcieendpoint_syncfifo7_syncfifo7_writable) & (~litepciecore_litepcieendpoint_syncfifo7_replace))) begin
        if ((~litepciecore_litepcieendpoint_syncfifo7_do_read)) begin
            litepciecore_litepcieendpoint_syncfifo7_level0 <= (litepciecore_litepcieendpoint_syncfifo7_level0 + 1'd1);
        end
    end else begin
        if (litepciecore_litepcieendpoint_syncfifo7_do_read) begin
            litepciecore_litepcieendpoint_syncfifo7_level0 <= (litepciecore_litepcieendpoint_syncfifo7_level0 - 1'd1);
        end
    end
    litepciecore_litepcieendpoint_fsm1_state <= litepciecore_litepcieendpoint_fsm1_next_state;
    if (litepciecore_litepcieendpoint_fill_tag_litepciecrossbar_next_value_ce) begin
        litepciecore_litepcieendpoint_fill_tag <= litepciecore_litepcieendpoint_fill_tag_litepciecrossbar_next_value;
    end
    case (litepciecore_litepcieendpoint_arbiter0_grant)
        1'd0: begin
            if ((~litepciecore_litepcieendpoint_arbiter0_request[0])) begin
                if (litepciecore_litepcieendpoint_arbiter0_request[1]) begin
                    litepciecore_litepcieendpoint_arbiter0_grant <= 1'd1;
                end else begin
                    if (litepciecore_litepcieendpoint_arbiter0_request[2]) begin
                        litepciecore_litepcieendpoint_arbiter0_grant <= 2'd2;
                    end
                end
            end
        end
        1'd1: begin
            if ((~litepciecore_litepcieendpoint_arbiter0_request[1])) begin
                if (litepciecore_litepcieendpoint_arbiter0_request[2]) begin
                    litepciecore_litepcieendpoint_arbiter0_grant <= 2'd2;
                end else begin
                    if (litepciecore_litepcieendpoint_arbiter0_request[0]) begin
                        litepciecore_litepcieendpoint_arbiter0_grant <= 1'd0;
                    end
                end
            end
        end
        2'd2: begin
            if ((~litepciecore_litepcieendpoint_arbiter0_request[2])) begin
                if (litepciecore_litepcieendpoint_arbiter0_request[0]) begin
                    litepciecore_litepcieendpoint_arbiter0_grant <= 1'd0;
                end else begin
                    if (litepciecore_litepcieendpoint_arbiter0_request[1]) begin
                        litepciecore_litepcieendpoint_arbiter0_grant <= 1'd1;
                    end
                end
            end
        end
    endcase
    litepciecore_litepcieendpoint_arbiter0_status0_ongoing1 <= ((litepciedma_litepciemasterinternalport1_sink_valid | litepciecore_litepcieendpoint_arbiter0_status0_ongoing1) & (~litepciecore_litepcieendpoint_arbiter0_status0_last));
    if (litepciecore_litepcieendpoint_arbiter0_status0_last) begin
        litepciecore_litepcieendpoint_arbiter0_status0_first <= 1'd1;
    end else begin
        if ((litepciedma_litepciemasterinternalport1_sink_valid & litepciedma_litepciemasterinternalport1_sink_ready)) begin
            litepciecore_litepcieendpoint_arbiter0_status0_first <= 1'd0;
        end
    end
    litepciecore_litepcieendpoint_arbiter0_status1_ongoing1 <= ((pcie_wishbone_slave_sink_valid | litepciecore_litepcieendpoint_arbiter0_status1_ongoing1) & (~litepciecore_litepcieendpoint_arbiter0_status1_last));
    if (litepciecore_litepcieendpoint_arbiter0_status1_last) begin
        litepciecore_litepcieendpoint_arbiter0_status1_first <= 1'd1;
    end else begin
        if ((pcie_wishbone_slave_sink_valid & pcie_wishbone_slave_sink_ready)) begin
            litepciecore_litepcieendpoint_arbiter0_status1_first <= 1'd0;
        end
    end
    litepciecore_litepcieendpoint_arbiter0_status2_ongoing1 <= ((pcie_msi_sink_valid | litepciecore_litepcieendpoint_arbiter0_status2_ongoing1) & (~litepciecore_litepcieendpoint_arbiter0_status2_last));
    if (litepciecore_litepcieendpoint_arbiter0_status2_last) begin
        litepciecore_litepcieendpoint_arbiter0_status2_first <= 1'd1;
    end else begin
        if ((pcie_msi_sink_valid & pcie_msi_sink_ready)) begin
            litepciecore_litepcieendpoint_arbiter0_status2_first <= 1'd0;
        end
    end
    if (litepciecore_litepcieendpoint_dispatcher0_first) begin
        litepciecore_litepcieendpoint_dispatcher0_sel_ongoing <= litepciecore_litepcieendpoint_dispatcher0_sel0;
    end
    litepciecore_litepcieendpoint_dispatcher0_ongoing1 <= ((litepciecore_litepcieendpoint_master_in_source_valid | litepciecore_litepcieendpoint_dispatcher0_ongoing1) & (~litepciecore_litepcieendpoint_dispatcher0_last));
    if (litepciecore_litepcieendpoint_dispatcher0_last) begin
        litepciecore_litepcieendpoint_dispatcher0_first <= 1'd1;
    end else begin
        if ((litepciecore_litepcieendpoint_master_in_source_valid & litepciecore_litepcieendpoint_master_in_source_ready)) begin
            litepciecore_litepcieendpoint_dispatcher0_first <= 1'd0;
        end
    end
    if (litepciecore_litepcieendpoint_dispatcher1_first) begin
        litepciecore_litepcieendpoint_dispatcher1_sel_ongoing <= litepciecore_litepcieendpoint_dispatcher1_sel0;
    end
    litepciecore_litepcieendpoint_dispatcher1_ongoing1 <= ((litepciecore_litepcieendpoint_source_valid | litepciecore_litepcieendpoint_dispatcher1_ongoing1) & (~litepciecore_litepcieendpoint_dispatcher1_last));
    if (litepciecore_litepcieendpoint_dispatcher1_last) begin
        litepciecore_litepcieendpoint_dispatcher1_first <= 1'd1;
    end else begin
        if ((litepciecore_litepcieendpoint_source_valid & litepciecore_litepcieendpoint_source_ready)) begin
            litepciecore_litepcieendpoint_dispatcher1_first <= 1'd0;
        end
    end
    case (litepciecore_litepcieendpoint_arbiter1_grant)
        1'd0: begin
            if ((~litepciecore_litepcieendpoint_arbiter1_request[0])) begin
                if (litepciecore_litepcieendpoint_arbiter1_request[1]) begin
                    litepciecore_litepcieendpoint_arbiter1_grant <= 1'd1;
                end
            end
        end
        1'd1: begin
            if ((~litepciecore_litepcieendpoint_arbiter1_request[1])) begin
                if (litepciecore_litepcieendpoint_arbiter1_request[0]) begin
                    litepciecore_litepcieendpoint_arbiter1_grant <= 1'd0;
                end
            end
        end
    endcase
    litepciecore_litepcieendpoint_arbiter1_status3_ongoing1 <= ((litepciecore_litepcieendpoint_master_out_sink_valid | litepciecore_litepcieendpoint_arbiter1_status3_ongoing1) & (~litepciecore_litepcieendpoint_arbiter1_status3_last));
    if (litepciecore_litepcieendpoint_arbiter1_status3_last) begin
        litepciecore_litepcieendpoint_arbiter1_status3_first <= 1'd1;
    end else begin
        if ((litepciecore_litepcieendpoint_master_out_sink_valid & litepciecore_litepcieendpoint_master_out_sink_ready)) begin
            litepciecore_litepcieendpoint_arbiter1_status3_first <= 1'd0;
        end
    end
    litepciecore_litepcieendpoint_arbiter1_status4_ongoing1 <= ((litepciecore_litepcieendpoint_sink_valid | litepciecore_litepcieendpoint_arbiter1_status4_ongoing1) & (~litepciecore_litepcieendpoint_arbiter1_status4_last));
    if (litepciecore_litepcieendpoint_arbiter1_status4_last) begin
        litepciecore_litepcieendpoint_arbiter1_status4_first <= 1'd1;
    end else begin
        if ((litepciecore_litepcieendpoint_sink_valid & litepciecore_litepcieendpoint_sink_ready)) begin
            litepciecore_litepcieendpoint_arbiter1_status4_first <= 1'd0;
        end
    end
    pcie_wishbone_master_wishbone_sel <= 4'd15;
    pcie_wishbone_master_wishbone_adr <= (pcie_wishbone_master_source_payload_adr[31:2] + 1'd0);
    if (1'd0) begin
        if (pcie_wishbone_master_source_payload_adr[2]) begin
            pcie_wishbone_master_wishbone_dat_w <= pcie_wishbone_master_source_payload_dat[31:0];
        end else begin
            pcie_wishbone_master_wishbone_dat_w <= pcie_wishbone_master_source_payload_dat[63:32];
        end
    end else begin
        pcie_wishbone_master_wishbone_dat_w <= pcie_wishbone_master_source_payload_dat[31:0];
    end
    pcie_wishbone_master_sink_first <= 1'd1;
    pcie_wishbone_master_sink_last <= 1'd1;
    pcie_wishbone_master_sink_payload_len <= 1'd1;
    pcie_wishbone_master_sink_payload_err <= 1'd0;
    pcie_wishbone_master_sink_payload_tag <= pcie_wishbone_master_source_payload_tag;
    pcie_wishbone_master_sink_payload_adr <= pcie_wishbone_master_source_payload_adr;
    pcie_wishbone_master_sink_payload_cmp_id <= s7pciephy_id;
    pcie_wishbone_master_sink_payload_req_id <= pcie_wishbone_master_source_payload_req_id;
    if (pcie_wishbone_master_update_dat) begin
        pcie_wishbone_master_sink_payload_dat <= pcie_wishbone_master_wishbone_dat_r;
    end
    litepciecore_litepciewishbonemaster_state <= litepciecore_litepciewishbonemaster_next_state;
    litepciecore_wishbone2axilite_state <= litepciecore_wishbone2axilite_next_state;
    if (cmd_done_wishbone2axilite_next_value_ce0) begin
        cmd_done <= cmd_done_wishbone2axilite_next_value0;
    end
    if (data_done_wishbone2axilite_next_value_ce1) begin
        data_done <= data_done_wishbone2axilite_next_value1;
    end
    litepciecore_axilite2wishbone_state <= litepciecore_axilite2wishbone_next_state;
    if (last_ar_aw_n_axilite2wishbone_next_value_ce0) begin
        last_ar_aw_n <= last_ar_aw_n_axilite2wishbone_next_value0;
    end
    if (data_axilite2wishbone_next_value_ce1) begin
        data <= data_axilite2wishbone_next_value1;
    end
    litepciecore_litepciewishboneslave_state <= litepciecore_litepciewishboneslave_next_state;
    litepciedma_writer_enable_storage[1] <= litepciedma_writer_is_ongoing;
    if ((litepciedma_writer_table_loop_prog_n_storage == 1'd0)) begin
        litepciedma_writer_table_table_sink_payload_address[31:0] <= litepciedma_writer_table_address_lsb;
        litepciedma_writer_table_table_sink_payload_length <= litepciedma_writer_table_length;
        litepciedma_writer_table_table_sink_payload_irq_disable <= litepciedma_writer_table_irq_disable;
        litepciedma_writer_table_table_sink_payload_last_disable <= litepciedma_writer_table_last_disable;
        litepciedma_writer_table_table_sink_first <= (litepciedma_writer_table_table_level == 1'd0);
        litepciedma_writer_table_table_sink_valid <= litepciedma_writer_table_we_re;
    end else begin
        litepciedma_writer_table_table_sink_first <= litepciedma_writer_table_table_source_first;
        litepciedma_writer_table_table_sink_last <= litepciedma_writer_table_table_source_last;
        litepciedma_writer_table_table_sink_payload_address <= litepciedma_writer_table_table_source_payload_address;
        litepciedma_writer_table_table_sink_payload_length <= litepciedma_writer_table_table_source_payload_length;
        litepciedma_writer_table_table_sink_payload_irq_disable <= litepciedma_writer_table_table_source_payload_irq_disable;
        litepciedma_writer_table_table_sink_payload_last_disable <= litepciedma_writer_table_table_source_payload_last_disable;
        litepciedma_writer_table_table_sink_valid <= (litepciedma_writer_table_table_source_valid & litepciedma_writer_table_table_source_ready);
    end
    if (litepciedma_writer_table_table_reset) begin
        litepciedma_writer_table_loop_first <= 1'd1;
        litepciedma_writer_table_index <= 1'd0;
        litepciedma_writer_table_count <= 1'd0;
    end else begin
        if ((litepciedma_writer_table_table_source_valid & litepciedma_writer_table_table_source_ready)) begin
            if (((litepciedma_writer_table_loop_prog_n_storage == 1'd1) & litepciedma_writer_table_table_source_first)) begin
                litepciedma_writer_table_index <= 1'd0;
                litepciedma_writer_table_loop_first <= 1'd0;
                litepciedma_writer_table_count <= (litepciedma_writer_table_count + {(~litepciedma_writer_table_loop_first)});
            end else begin
                litepciedma_writer_table_index <= (litepciedma_writer_table_index + 1'd1);
                if ((litepciedma_writer_table_index == 16'd65535)) begin
                    litepciedma_writer_table_count <= (litepciedma_writer_table_count + 1'd1);
                end
            end
        end
    end
    if (((litepciedma_writer_table_table_syncfifo_we & litepciedma_writer_table_table_syncfifo_writable) & (~litepciedma_writer_table_table_replace))) begin
        litepciedma_writer_table_table_produce <= (litepciedma_writer_table_table_produce + 1'd1);
    end
    if (litepciedma_writer_table_table_do_read) begin
        litepciedma_writer_table_table_consume <= (litepciedma_writer_table_table_consume + 1'd1);
    end
    if (((litepciedma_writer_table_table_syncfifo_we & litepciedma_writer_table_table_syncfifo_writable) & (~litepciedma_writer_table_table_replace))) begin
        if ((~litepciedma_writer_table_table_do_read)) begin
            litepciedma_writer_table_table_level <= (litepciedma_writer_table_table_level + 1'd1);
        end
    end else begin
        if (litepciedma_writer_table_table_do_read) begin
            litepciedma_writer_table_table_level <= (litepciedma_writer_table_table_level - 1'd1);
        end
    end
    if (litepciedma_writer_table_table_reset) begin
        litepciedma_writer_table_table_level <= 9'd0;
        litepciedma_writer_table_table_produce <= 8'd0;
        litepciedma_writer_table_table_consume <= 8'd0;
    end
    litepciecore_litepciedmawriter_resetinserter_state <= litepciecore_litepciedmawriter_resetinserter_next_state;
    if (litepciedma_writer_splitter_desc_offset_bufferizeendpoints_resetinserter_next_value_ce0) begin
        litepciedma_writer_splitter_desc_offset <= litepciedma_writer_splitter_desc_offset_bufferizeendpoints_resetinserter_next_value0;
    end
    if (litepciedma_writer_splitter_desc_length_bufferizeendpoints_resetinserter_next_value_ce1) begin
        litepciedma_writer_splitter_desc_length <= litepciedma_writer_splitter_desc_length_bufferizeendpoints_resetinserter_next_value1;
    end
    if (litepciedma_writer_splitter_desc_id_bufferizeendpoints_resetinserter_next_value_ce2) begin
        litepciedma_writer_splitter_desc_id <= litepciedma_writer_splitter_desc_id_bufferizeendpoints_resetinserter_next_value2;
    end
    if (litepciedma_writer_splitter_reset) begin
        litepciedma_writer_splitter_desc_length <= 32'd0;
        litepciedma_writer_splitter_desc_offset <= 32'd0;
        litepciedma_writer_splitter_desc_id <= 32'd0;
        litepciecore_litepciedmawriter_resetinserter_state <= 1'd0;
    end
    if (litepciedma_writer_data_fifo_syncfifo_re) begin
        litepciedma_writer_data_fifo_readable <= 1'd1;
    end else begin
        if (litepciedma_writer_data_fifo_re) begin
            litepciedma_writer_data_fifo_readable <= 1'd0;
        end
    end
    if (((litepciedma_writer_data_fifo_syncfifo_we & litepciedma_writer_data_fifo_syncfifo_writable) & (~litepciedma_writer_data_fifo_replace))) begin
        litepciedma_writer_data_fifo_produce <= (litepciedma_writer_data_fifo_produce + 1'd1);
    end
    if (litepciedma_writer_data_fifo_do_read) begin
        litepciedma_writer_data_fifo_consume <= (litepciedma_writer_data_fifo_consume + 1'd1);
    end
    if (((litepciedma_writer_data_fifo_syncfifo_we & litepciedma_writer_data_fifo_syncfifo_writable) & (~litepciedma_writer_data_fifo_replace))) begin
        if ((~litepciedma_writer_data_fifo_do_read)) begin
            litepciedma_writer_data_fifo_level0 <= (litepciedma_writer_data_fifo_level0 + 1'd1);
        end
    end else begin
        if (litepciedma_writer_data_fifo_do_read) begin
            litepciedma_writer_data_fifo_level0 <= (litepciedma_writer_data_fifo_level0 - 1'd1);
        end
    end
    if (litepciedma_writer_data_fifo_reset) begin
        litepciedma_writer_data_fifo_readable <= 1'd0;
        litepciedma_writer_data_fifo_level0 <= 9'd0;
        litepciedma_writer_data_fifo_produce <= 8'd0;
        litepciedma_writer_data_fifo_consume <= 8'd0;
    end
    litepciecore_litepciedmawriter_fsm_state <= litepciecore_litepciedmawriter_fsm_next_state;
    if (litepciedma_writer_req_count_bufferizeendpoints_fsm_next_value_ce) begin
        litepciedma_writer_req_count <= litepciedma_writer_req_count_bufferizeendpoints_fsm_next_value;
    end
    if (((litepciedma_litepciemasterinternalport1_source_valid & litepciedma_litepciemasterinternalport1_source_first) & litepciedma_litepciemasterinternalport1_source_ready)) begin
        litepciedma_reader_last_user_id <= litepciedma_litepciemasterinternalport1_source_payload_user_id;
    end
    litepciedma_reader_pending_words <= ((litepciedma_reader_pending_words + litepciedma_reader_pending_words_queue) - litepciedma_reader_pending_words_dequeue);
    if ((~litepciedma_reader_enable_storage[0])) begin
        litepciedma_reader_pending_words <= 1'd0;
    end
    litepciedma_reader_enable_storage[1] <= litepciedma_reader_is_ongoing;
    if ((litepciedma_reader_table_loop_prog_n_storage == 1'd0)) begin
        litepciedma_reader_table_table_sink_payload_address[31:0] <= litepciedma_reader_table_address_lsb;
        litepciedma_reader_table_table_sink_payload_length <= litepciedma_reader_table_length;
        litepciedma_reader_table_table_sink_payload_irq_disable <= litepciedma_reader_table_irq_disable;
        litepciedma_reader_table_table_sink_payload_last_disable <= litepciedma_reader_table_last_disable;
        litepciedma_reader_table_table_sink_first <= (litepciedma_reader_table_table_level == 1'd0);
        litepciedma_reader_table_table_sink_valid <= litepciedma_reader_table_we_re;
    end else begin
        litepciedma_reader_table_table_sink_first <= litepciedma_reader_table_table_source_first;
        litepciedma_reader_table_table_sink_last <= litepciedma_reader_table_table_source_last;
        litepciedma_reader_table_table_sink_payload_address <= litepciedma_reader_table_table_source_payload_address;
        litepciedma_reader_table_table_sink_payload_length <= litepciedma_reader_table_table_source_payload_length;
        litepciedma_reader_table_table_sink_payload_irq_disable <= litepciedma_reader_table_table_source_payload_irq_disable;
        litepciedma_reader_table_table_sink_payload_last_disable <= litepciedma_reader_table_table_source_payload_last_disable;
        litepciedma_reader_table_table_sink_valid <= (litepciedma_reader_table_table_source_valid & litepciedma_reader_table_table_source_ready);
    end
    if (litepciedma_reader_table_table_reset) begin
        litepciedma_reader_table_loop_first <= 1'd1;
        litepciedma_reader_table_index <= 1'd0;
        litepciedma_reader_table_count <= 1'd0;
    end else begin
        if ((litepciedma_reader_table_table_source_valid & litepciedma_reader_table_table_source_ready)) begin
            if (((litepciedma_reader_table_loop_prog_n_storage == 1'd1) & litepciedma_reader_table_table_source_first)) begin
                litepciedma_reader_table_index <= 1'd0;
                litepciedma_reader_table_loop_first <= 1'd0;
                litepciedma_reader_table_count <= (litepciedma_reader_table_count + {(~litepciedma_reader_table_loop_first)});
            end else begin
                litepciedma_reader_table_index <= (litepciedma_reader_table_index + 1'd1);
                if ((litepciedma_reader_table_index == 16'd65535)) begin
                    litepciedma_reader_table_count <= (litepciedma_reader_table_count + 1'd1);
                end
            end
        end
    end
    if (((litepciedma_reader_table_table_syncfifo_we & litepciedma_reader_table_table_syncfifo_writable) & (~litepciedma_reader_table_table_replace))) begin
        litepciedma_reader_table_table_produce <= (litepciedma_reader_table_table_produce + 1'd1);
    end
    if (litepciedma_reader_table_table_do_read) begin
        litepciedma_reader_table_table_consume <= (litepciedma_reader_table_table_consume + 1'd1);
    end
    if (((litepciedma_reader_table_table_syncfifo_we & litepciedma_reader_table_table_syncfifo_writable) & (~litepciedma_reader_table_table_replace))) begin
        if ((~litepciedma_reader_table_table_do_read)) begin
            litepciedma_reader_table_table_level <= (litepciedma_reader_table_table_level + 1'd1);
        end
    end else begin
        if (litepciedma_reader_table_table_do_read) begin
            litepciedma_reader_table_table_level <= (litepciedma_reader_table_table_level - 1'd1);
        end
    end
    if (litepciedma_reader_table_table_reset) begin
        litepciedma_reader_table_table_level <= 9'd0;
        litepciedma_reader_table_table_produce <= 8'd0;
        litepciedma_reader_table_table_consume <= 8'd0;
    end
    litepciecore_litepciedmareader_bufferizeendpoints_state <= litepciecore_litepciedmareader_bufferizeendpoints_next_state;
    if (litepciedma_reader_splitter_desc_offset_bufferizeendpoints_next_value_ce0) begin
        litepciedma_reader_splitter_desc_offset <= litepciedma_reader_splitter_desc_offset_bufferizeendpoints_next_value0;
    end
    if (litepciedma_reader_splitter_desc_length_bufferizeendpoints_next_value_ce1) begin
        litepciedma_reader_splitter_desc_length <= litepciedma_reader_splitter_desc_length_bufferizeendpoints_next_value1;
    end
    if (litepciedma_reader_splitter_desc_id_bufferizeendpoints_next_value_ce2) begin
        litepciedma_reader_splitter_desc_id <= litepciedma_reader_splitter_desc_id_bufferizeendpoints_next_value2;
    end
    if (((~litepciedma_reader_splitter_pipe_valid_source_valid) | litepciedma_reader_splitter_pipe_valid_source_ready)) begin
        litepciedma_reader_splitter_pipe_valid_source_valid <= litepciedma_reader_splitter_pipe_valid_sink_valid;
        litepciedma_reader_splitter_pipe_valid_source_first <= litepciedma_reader_splitter_pipe_valid_sink_first;
        litepciedma_reader_splitter_pipe_valid_source_last <= litepciedma_reader_splitter_pipe_valid_sink_last;
        litepciedma_reader_splitter_pipe_valid_source_payload_address <= litepciedma_reader_splitter_pipe_valid_sink_payload_address;
        litepciedma_reader_splitter_pipe_valid_source_payload_length <= litepciedma_reader_splitter_pipe_valid_sink_payload_length;
        litepciedma_reader_splitter_pipe_valid_source_payload_irq_disable <= litepciedma_reader_splitter_pipe_valid_sink_payload_irq_disable;
        litepciedma_reader_splitter_pipe_valid_source_payload_last_disable <= litepciedma_reader_splitter_pipe_valid_sink_payload_last_disable;
        litepciedma_reader_splitter_pipe_valid_source_payload_user_id <= litepciedma_reader_splitter_pipe_valid_sink_payload_user_id;
    end
    if (litepciedma_reader_splitter_reset) begin
        litepciedma_reader_splitter_desc_length <= 32'd0;
        litepciedma_reader_splitter_desc_offset <= 32'd0;
        litepciedma_reader_splitter_desc_id <= 32'd0;
        litepciedma_reader_splitter_pipe_valid_source_valid <= 1'd0;
        litepciedma_reader_splitter_pipe_valid_source_payload_address <= 32'd0;
        litepciedma_reader_splitter_pipe_valid_source_payload_length <= 24'd0;
        litepciedma_reader_splitter_pipe_valid_source_payload_irq_disable <= 1'd0;
        litepciedma_reader_splitter_pipe_valid_source_payload_last_disable <= 1'd0;
        litepciedma_reader_splitter_pipe_valid_source_payload_user_id <= 8'd0;
        litepciecore_litepciedmareader_bufferizeendpoints_state <= 1'd0;
    end
    if (litepciedma_reader_data_fifo_syncfifo_re) begin
        litepciedma_reader_data_fifo_readable <= 1'd1;
    end else begin
        if (litepciedma_reader_data_fifo_re) begin
            litepciedma_reader_data_fifo_readable <= 1'd0;
        end
    end
    if (((litepciedma_reader_data_fifo_syncfifo_we & litepciedma_reader_data_fifo_syncfifo_writable) & (~litepciedma_reader_data_fifo_replace))) begin
        litepciedma_reader_data_fifo_produce <= (litepciedma_reader_data_fifo_produce + 1'd1);
    end
    if (litepciedma_reader_data_fifo_do_read) begin
        litepciedma_reader_data_fifo_consume <= (litepciedma_reader_data_fifo_consume + 1'd1);
    end
    if (((litepciedma_reader_data_fifo_syncfifo_we & litepciedma_reader_data_fifo_syncfifo_writable) & (~litepciedma_reader_data_fifo_replace))) begin
        if ((~litepciedma_reader_data_fifo_do_read)) begin
            litepciedma_reader_data_fifo_level0 <= (litepciedma_reader_data_fifo_level0 + 1'd1);
        end
    end else begin
        if (litepciedma_reader_data_fifo_do_read) begin
            litepciedma_reader_data_fifo_level0 <= (litepciedma_reader_data_fifo_level0 - 1'd1);
        end
    end
    if (litepciedma_reader_data_fifo_reset) begin
        litepciedma_reader_data_fifo_readable <= 1'd0;
        litepciedma_reader_data_fifo_level0 <= 12'd0;
        litepciedma_reader_data_fifo_produce <= 11'd0;
        litepciedma_reader_data_fifo_consume <= 11'd0;
    end
    litepciecore_litepciedmareader_fsm_state <= litepciecore_litepciedmareader_fsm_next_state;
    if ((litepciedma_synchronizer_mode == 1'd0)) begin
        litepciedma_synchronizer_synced <= 1'd0;
    end else begin
        if ((litepciedma_synchronizer_ready & (litepciedma_synchronizer_pps | litepciedma_synchronizer_bypass_storage))) begin
            if (((litepciedma_synchronizer_mode == 1'd1) & litepciedma_synchronizer_sink_valid)) begin
                litepciedma_synchronizer_synced <= 1'd1;
            end
            if ((litepciedma_synchronizer_mode == 2'd2)) begin
                litepciedma_synchronizer_synced <= 1'd1;
            end
        end
    end
    if ((litepciedma_buffering_reader_fifo_level1 < litepciedma_buffering_reader_fifo_level_min)) begin
        litepciedma_buffering_reader_fifo_level_min <= litepciedma_buffering_reader_fifo_level1;
    end
    if ((litepciedma_buffering_reader_fifo_status_re | (litepciedma_buffering_csrfield_level_mode0 == 1'd0))) begin
        litepciedma_buffering_reader_fifo_level_min <= 11'd2047;
    end
    if ((litepciedma_buffering_writer_fifo_level1 > litepciedma_buffering_writer_fifo_level_max)) begin
        litepciedma_buffering_writer_fifo_level_max <= litepciedma_buffering_writer_fifo_level1;
    end
    if ((litepciedma_buffering_writer_fifo_status_re | (litepciedma_buffering_csrfield_level_mode1 == 1'd0))) begin
        litepciedma_buffering_writer_fifo_level_max <= 1'd0;
    end
    if (litepciedma_buffering_reader_fifo_syncfifo_re) begin
        litepciedma_buffering_reader_fifo_readable <= 1'd1;
    end else begin
        if (litepciedma_buffering_reader_fifo_re) begin
            litepciedma_buffering_reader_fifo_readable <= 1'd0;
        end
    end
    if (((litepciedma_buffering_reader_fifo_syncfifo_we & litepciedma_buffering_reader_fifo_syncfifo_writable) & (~litepciedma_buffering_reader_fifo_replace))) begin
        litepciedma_buffering_reader_fifo_produce <= (litepciedma_buffering_reader_fifo_produce + 1'd1);
    end
    if (litepciedma_buffering_reader_fifo_do_read) begin
        litepciedma_buffering_reader_fifo_consume <= (litepciedma_buffering_reader_fifo_consume + 1'd1);
    end
    if (((litepciedma_buffering_reader_fifo_syncfifo_we & litepciedma_buffering_reader_fifo_syncfifo_writable) & (~litepciedma_buffering_reader_fifo_replace))) begin
        if ((~litepciedma_buffering_reader_fifo_do_read)) begin
            litepciedma_buffering_reader_fifo_level0 <= (litepciedma_buffering_reader_fifo_level0 + 1'd1);
        end
    end else begin
        if (litepciedma_buffering_reader_fifo_do_read) begin
            litepciedma_buffering_reader_fifo_level0 <= (litepciedma_buffering_reader_fifo_level0 - 1'd1);
        end
    end
    if (litepciedma_buffering_writer_fifo_syncfifo_re) begin
        litepciedma_buffering_writer_fifo_readable <= 1'd1;
    end else begin
        if (litepciedma_buffering_writer_fifo_re) begin
            litepciedma_buffering_writer_fifo_readable <= 1'd0;
        end
    end
    if (((litepciedma_buffering_writer_fifo_syncfifo_we & litepciedma_buffering_writer_fifo_syncfifo_writable) & (~litepciedma_buffering_writer_fifo_replace))) begin
        litepciedma_buffering_writer_fifo_produce <= (litepciedma_buffering_writer_fifo_produce + 1'd1);
    end
    if (litepciedma_buffering_writer_fifo_do_read) begin
        litepciedma_buffering_writer_fifo_consume <= (litepciedma_buffering_writer_fifo_consume + 1'd1);
    end
    if (((litepciedma_buffering_writer_fifo_syncfifo_we & litepciedma_buffering_writer_fifo_syncfifo_writable) & (~litepciedma_buffering_writer_fifo_replace))) begin
        if ((~litepciedma_buffering_writer_fifo_do_read)) begin
            litepciedma_buffering_writer_fifo_level0 <= (litepciedma_buffering_writer_fifo_level0 + 1'd1);
        end
    end else begin
        if (litepciedma_buffering_writer_fifo_do_read) begin
            litepciedma_buffering_writer_fifo_level0 <= (litepciedma_buffering_writer_fifo_level0 - 1'd1);
        end
    end
    if (litepciedma_writer_monitor_reset1) begin
        litepciedma_writer_monitor_count <= 1'd0;
        litepciedma_writer_monitor_count_latched <= 1'd0;
    end else begin
        if ((litepciedma_buffering_next_sink_valid & (~litepciedma_buffering_next_sink_ready))) begin
            if ((litepciedma_writer_monitor_count != 16'd65535)) begin
                litepciedma_writer_monitor_count <= (litepciedma_writer_monitor_count + 1'd1);
            end
        end
    end
    if (litepciedma_writer_monitor_latch1) begin
        litepciedma_writer_monitor_count_latched <= litepciedma_writer_monitor_count;
    end
    if (litepciedma_reader_monitor_reset1) begin
        litepciedma_reader_monitor_count <= 1'd0;
        litepciedma_reader_monitor_count_latched <= 1'd0;
    end else begin
        if (((~litepciedma_buffering_next_source_valid) & litepciedma_buffering_next_source_ready)) begin
            if ((litepciedma_reader_monitor_count != 16'd65535)) begin
                litepciedma_reader_monitor_count <= (litepciedma_reader_monitor_count + 1'd1);
            end
        end
    end
    if (litepciedma_reader_monitor_latch1) begin
        litepciedma_reader_monitor_count_latched <= litepciedma_reader_monitor_count;
    end
    if (((~bufferizeendpoints0_pipe_valid_source_valid) | bufferizeendpoints0_pipe_valid_source_ready)) begin
        bufferizeendpoints0_pipe_valid_source_valid <= bufferizeendpoints0_pipe_valid_sink_valid;
        bufferizeendpoints0_pipe_valid_source_first <= bufferizeendpoints0_pipe_valid_sink_first;
        bufferizeendpoints0_pipe_valid_source_last <= bufferizeendpoints0_pipe_valid_sink_last;
        bufferizeendpoints0_pipe_valid_source_payload_data <= bufferizeendpoints0_pipe_valid_sink_payload_data;
    end
    if (((~bufferizeendpoints1_pipe_valid_source_valid) | bufferizeendpoints1_pipe_valid_source_ready)) begin
        bufferizeendpoints1_pipe_valid_source_valid <= bufferizeendpoints1_pipe_valid_sink_valid;
        bufferizeendpoints1_pipe_valid_source_first <= bufferizeendpoints1_pipe_valid_sink_first;
        bufferizeendpoints1_pipe_valid_source_last <= bufferizeendpoints1_pipe_valid_sink_last;
        bufferizeendpoints1_pipe_valid_source_payload_data <= bufferizeendpoints1_pipe_valid_sink_payload_data;
    end
    pcie_msi_vector <= (pcie_msi_enable & ((pcie_msi_vector & (~pcie_msi_clear)) | pcie_msi_irqs));
    litepciecore_litepciemsix_state <= litepciecore_litepciemsix_next_state;
    pcie_ptm_sniffer_cdc_cdc_graycounter1_q_binary <= pcie_ptm_sniffer_cdc_cdc_graycounter1_q_next_binary;
    pcie_ptm_sniffer_cdc_cdc_graycounter1_q <= pcie_ptm_sniffer_cdc_cdc_graycounter1_q_next;
    litepciecore_ptmcapabilities_state <= litepciecore_ptmcapabilities_next_state;
    if (ptm_capabilities_dat_ptmcapabilities_next_value_ce) begin
        ptm_capabilities_dat <= ptm_capabilities_dat_ptmcapabilities_next_value;
    end
    if (ptm_requester_source_source_valid) begin
        ptm_requester_time1 <= ptm_requester_source_source_payload_time;
    end
    ptm_requester_cdc_graycounter1_q_binary <= ptm_requester_cdc_graycounter1_q_next_binary;
    ptm_requester_cdc_graycounter1_q <= ptm_requester_cdc_graycounter1_q_next;
    if (ptm_requester_wait) begin
        if ((~ptm_requester_done)) begin
            ptm_requester_count <= (ptm_requester_count - 1'd1);
        end
    end else begin
        ptm_requester_count <= 7'd125;
    end
    litepciecore_ptmrequester_state <= litepciecore_ptmrequester_next_state;
    if (ptm_requester_t1_ptmrequester_next_value_ce0) begin
        ptm_requester_t1 <= ptm_requester_t1_ptmrequester_next_value0;
    end
    if (ptm_requester_update_ptmrequester_next_value_ce1) begin
        ptm_requester_update <= ptm_requester_update_ptmrequester_next_value1;
    end
    if (ptm_requester_master_time_ptmrequester_next_value_ce2) begin
        ptm_requester_master_time <= ptm_requester_master_time_ptmrequester_next_value2;
    end
    if (ptm_requester_link_delay_ptmrequester_next_value_ce3) begin
        ptm_requester_link_delay <= ptm_requester_link_delay_ptmrequester_next_value3;
    end
    if (ptm_requester_t4_ptmrequester_next_value_ce4) begin
        ptm_requester_t4 <= ptm_requester_t4_ptmrequester_next_value4;
    end
    if (ptm_requester_reset) begin
        ptm_requester_update <= 1'd0;
        ptm_requester_master_time <= 64'd0;
        ptm_requester_link_delay <= 32'd0;
        ptm_requester_t1 <= 64'd0;
        ptm_requester_t4 <= 64'd0;
        litepciecore_ptmrequester_state <= 3'd0;
    end
    litepciecore_wishbone2csr_state <= litepciecore_wishbone2csr_next_state;
    interface0_bank_bus_dat_r <= 1'd0;
    if (csrbank0_sel) begin
        case (interface0_bank_bus_adr[8:0])
            1'd0: begin
                interface0_bank_bus_dat_r <= csrbank0_reset0_w;
            end
            1'd1: begin
                interface0_bank_bus_dat_r <= csrbank0_scratch0_w;
            end
            2'd2: begin
                interface0_bank_bus_dat_r <= csrbank0_bus_errors_w;
            end
        endcase
    end
    if (csrbank0_reset0_re) begin
        reset_storage[1:0] <= csrbank0_reset0_r;
    end
    reset_re <= csrbank0_reset0_re;
    if (csrbank0_scratch0_re) begin
        scratch_storage[31:0] <= csrbank0_scratch0_r;
    end
    scratch_re <= csrbank0_scratch0_re;
    bus_errors_re <= csrbank0_bus_errors_re;
    sram0_sel_r <= sram0_sel;
    interface1_bank_bus_dat_r <= 1'd0;
    if (csrbank1_sel) begin
        case (interface1_bank_bus_adr[8:0])
            1'd0: begin
                interface1_bank_bus_dat_r <= csrbank1_writer_enable0_w;
            end
            1'd1: begin
                interface1_bank_bus_dat_r <= csrbank1_writer_table_value1_w;
            end
            2'd2: begin
                interface1_bank_bus_dat_r <= csrbank1_writer_table_value0_w;
            end
            2'd3: begin
                interface1_bank_bus_dat_r <= csrbank1_writer_table_we0_w;
            end
            3'd4: begin
                interface1_bank_bus_dat_r <= csrbank1_writer_table_loop_prog_n0_w;
            end
            3'd5: begin
                interface1_bank_bus_dat_r <= csrbank1_writer_table_loop_status_w;
            end
            3'd6: begin
                interface1_bank_bus_dat_r <= csrbank1_writer_table_level_w;
            end
            3'd7: begin
                interface1_bank_bus_dat_r <= csrbank1_writer_table_reset0_w;
            end
            4'd8: begin
                interface1_bank_bus_dat_r <= csrbank1_reader_enable0_w;
            end
            4'd9: begin
                interface1_bank_bus_dat_r <= csrbank1_reader_table_value1_w;
            end
            4'd10: begin
                interface1_bank_bus_dat_r <= csrbank1_reader_table_value0_w;
            end
            4'd11: begin
                interface1_bank_bus_dat_r <= csrbank1_reader_table_we0_w;
            end
            4'd12: begin
                interface1_bank_bus_dat_r <= csrbank1_reader_table_loop_prog_n0_w;
            end
            4'd13: begin
                interface1_bank_bus_dat_r <= csrbank1_reader_table_loop_status_w;
            end
            4'd14: begin
                interface1_bank_bus_dat_r <= csrbank1_reader_table_level_w;
            end
            4'd15: begin
                interface1_bank_bus_dat_r <= csrbank1_reader_table_reset0_w;
            end
            5'd16: begin
                interface1_bank_bus_dat_r <= csrbank1_loopback_enable0_w;
            end
            5'd17: begin
                interface1_bank_bus_dat_r <= csrbank1_synchronizer_bypass0_w;
            end
            5'd18: begin
                interface1_bank_bus_dat_r <= csrbank1_synchronizer_enable0_w;
            end
            5'd19: begin
                interface1_bank_bus_dat_r <= csrbank1_buffering_reader_fifo_control0_w;
            end
            5'd20: begin
                interface1_bank_bus_dat_r <= csrbank1_buffering_reader_fifo_status_w;
            end
            5'd21: begin
                interface1_bank_bus_dat_r <= csrbank1_buffering_writer_fifo_control0_w;
            end
            5'd22: begin
                interface1_bank_bus_dat_r <= csrbank1_buffering_writer_fifo_status_w;
            end
            5'd23: begin
                interface1_bank_bus_dat_r <= litepciedma_writer_monitor_reset_reset_w;
            end
            5'd24: begin
                interface1_bank_bus_dat_r <= litepciedma_writer_monitor_latch_latch_w;
            end
            5'd25: begin
                interface1_bank_bus_dat_r <= csrbank1_writer_monitor_overflows_w;
            end
            5'd26: begin
                interface1_bank_bus_dat_r <= litepciedma_reader_monitor_reset_reset_w;
            end
            5'd27: begin
                interface1_bank_bus_dat_r <= litepciedma_reader_monitor_latch_latch_w;
            end
            5'd28: begin
                interface1_bank_bus_dat_r <= csrbank1_reader_monitor_underflows_w;
            end
        endcase
    end
    if (csrbank1_writer_enable0_re) begin
        litepciedma_writer_enable_storage[1:0] <= csrbank1_writer_enable0_r;
    end
    litepciedma_writer_enable_re <= csrbank1_writer_enable0_re;
    if (csrbank1_writer_table_value1_re) begin
        litepciedma_writer_table_value_storage[57:32] <= csrbank1_writer_table_value1_r;
    end
    if (csrbank1_writer_table_value0_re) begin
        litepciedma_writer_table_value_storage[31:0] <= csrbank1_writer_table_value0_r;
    end
    litepciedma_writer_table_value_re <= csrbank1_writer_table_value0_re;
    if (csrbank1_writer_table_we0_re) begin
        litepciedma_writer_table_we_storage[31:0] <= csrbank1_writer_table_we0_r;
    end
    litepciedma_writer_table_we_re <= csrbank1_writer_table_we0_re;
    if (csrbank1_writer_table_loop_prog_n0_re) begin
        litepciedma_writer_table_loop_prog_n_storage <= csrbank1_writer_table_loop_prog_n0_r;
    end
    litepciedma_writer_table_loop_prog_n_re <= csrbank1_writer_table_loop_prog_n0_re;
    litepciedma_writer_table_loop_status_re <= csrbank1_writer_table_loop_status_re;
    litepciedma_writer_table_level_re <= csrbank1_writer_table_level_re;
    if (csrbank1_writer_table_reset0_re) begin
        litepciedma_writer_table_reset_storage <= csrbank1_writer_table_reset0_r;
    end
    litepciedma_writer_table_reset_re <= csrbank1_writer_table_reset0_re;
    if (csrbank1_reader_enable0_re) begin
        litepciedma_reader_enable_storage[1:0] <= csrbank1_reader_enable0_r;
    end
    litepciedma_reader_enable_re <= csrbank1_reader_enable0_re;
    if (csrbank1_reader_table_value1_re) begin
        litepciedma_reader_table_value_storage[57:32] <= csrbank1_reader_table_value1_r;
    end
    if (csrbank1_reader_table_value0_re) begin
        litepciedma_reader_table_value_storage[31:0] <= csrbank1_reader_table_value0_r;
    end
    litepciedma_reader_table_value_re <= csrbank1_reader_table_value0_re;
    if (csrbank1_reader_table_we0_re) begin
        litepciedma_reader_table_we_storage[31:0] <= csrbank1_reader_table_we0_r;
    end
    litepciedma_reader_table_we_re <= csrbank1_reader_table_we0_re;
    if (csrbank1_reader_table_loop_prog_n0_re) begin
        litepciedma_reader_table_loop_prog_n_storage <= csrbank1_reader_table_loop_prog_n0_r;
    end
    litepciedma_reader_table_loop_prog_n_re <= csrbank1_reader_table_loop_prog_n0_re;
    litepciedma_reader_table_loop_status_re <= csrbank1_reader_table_loop_status_re;
    litepciedma_reader_table_level_re <= csrbank1_reader_table_level_re;
    if (csrbank1_reader_table_reset0_re) begin
        litepciedma_reader_table_reset_storage <= csrbank1_reader_table_reset0_r;
    end
    litepciedma_reader_table_reset_re <= csrbank1_reader_table_reset0_re;
    if (csrbank1_loopback_enable0_re) begin
        litepciedma_loopback_storage <= csrbank1_loopback_enable0_r;
    end
    litepciedma_loopback_re <= csrbank1_loopback_enable0_re;
    if (csrbank1_synchronizer_bypass0_re) begin
        litepciedma_synchronizer_bypass_storage <= csrbank1_synchronizer_bypass0_r;
    end
    litepciedma_synchronizer_bypass_re <= csrbank1_synchronizer_bypass0_re;
    if (csrbank1_synchronizer_enable0_re) begin
        litepciedma_synchronizer_enable_storage[1:0] <= csrbank1_synchronizer_enable0_r;
    end
    litepciedma_synchronizer_enable_re <= csrbank1_synchronizer_enable0_re;
    if (csrbank1_buffering_reader_fifo_control0_re) begin
        litepciedma_buffering_reader_fifo_control_storage[31:0] <= csrbank1_buffering_reader_fifo_control0_r;
    end
    litepciedma_buffering_reader_fifo_control_re <= csrbank1_buffering_reader_fifo_control0_re;
    litepciedma_buffering_reader_fifo_status_re <= csrbank1_buffering_reader_fifo_status_re;
    if (csrbank1_buffering_writer_fifo_control0_re) begin
        litepciedma_buffering_writer_fifo_control_storage[31:0] <= csrbank1_buffering_writer_fifo_control0_r;
    end
    litepciedma_buffering_writer_fifo_control_re <= csrbank1_buffering_writer_fifo_control0_re;
    litepciedma_buffering_writer_fifo_status_re <= csrbank1_buffering_writer_fifo_status_re;
    litepciedma_writer_monitor_re <= csrbank1_writer_monitor_overflows_re;
    litepciedma_reader_monitor_re <= csrbank1_reader_monitor_underflows_re;
    interface2_bank_bus_dat_r <= 1'd0;
    if (csrbank2_sel) begin
        case (interface2_bank_bus_adr[8:0])
            1'd0: begin
                interface2_bank_bus_dat_r <= csrbank2_phy_link_status_w;
            end
            1'd1: begin
                interface2_bank_bus_dat_r <= csrbank2_phy_msi_enable_w;
            end
            2'd2: begin
                interface2_bank_bus_dat_r <= csrbank2_phy_msix_enable_w;
            end
            2'd3: begin
                interface2_bank_bus_dat_r <= csrbank2_phy_bus_master_enable_w;
            end
            3'd4: begin
                interface2_bank_bus_dat_r <= csrbank2_phy_max_request_size_w;
            end
            3'd5: begin
                interface2_bank_bus_dat_r <= csrbank2_phy_max_payload_size_w;
            end
        endcase
    end
    s7pciephy_link_status_re <= csrbank2_phy_link_status_re;
    s7pciephy_msi_enable_re <= csrbank2_phy_msi_enable_re;
    s7pciephy_msix_enable_re <= csrbank2_phy_msix_enable_re;
    s7pciephy_bus_master_enable_re <= csrbank2_phy_bus_master_enable_re;
    s7pciephy_max_request_size_re <= csrbank2_phy_max_request_size_re;
    s7pciephy_max_payload_size_re <= csrbank2_phy_max_payload_size_re;
    sram1_sel_r <= sram1_sel;
    sram1_word_index <= interface1_sram_bus_adr[1:0];
    if (((sram1_sel & interface1_sram_bus_we) & (interface1_sram_bus_adr[1:0] == 1'd0))) begin
        sram1_wreg0 <= interface1_sram_bus_dat_w;
    end
    if (((sram1_sel & interface1_sram_bus_we) & (interface1_sram_bus_adr[1:0] == 1'd1))) begin
        sram1_wreg1 <= interface1_sram_bus_dat_w;
    end
    if (((sram1_sel & interface1_sram_bus_we) & (interface1_sram_bus_adr[1:0] == 2'd2))) begin
        sram1_wreg2 <= interface1_sram_bus_dat_w;
    end
    interface3_bank_bus_dat_r <= 1'd0;
    if (csrbank3_sel) begin
        case (interface3_bank_bus_adr[8:0])
            1'd0: begin
                interface3_bank_bus_dat_r <= csrbank3_enable1_w;
            end
            1'd1: begin
                interface3_bank_bus_dat_r <= csrbank3_enable0_w;
            end
            2'd2: begin
                interface3_bank_bus_dat_r <= csrbank3_pba1_w;
            end
            2'd3: begin
                interface3_bank_bus_dat_r <= csrbank3_pba0_w;
            end
        endcase
    end
    if (csrbank3_enable1_re) begin
        pcie_msi_enable_storage[63:32] <= csrbank3_enable1_r;
    end
    if (csrbank3_enable0_re) begin
        pcie_msi_enable_storage[31:0] <= csrbank3_enable0_r;
    end
    pcie_msi_enable_re <= csrbank3_enable0_re;
    pcie_msi_pba_re <= csrbank3_pba0_re;
    interface4_bank_bus_dat_r <= 1'd0;
    if (csrbank4_sel) begin
        case (interface4_bank_bus_adr[8:0])
            1'd0: begin
                interface4_bank_bus_dat_r <= csrbank2_phy_link_status_w;
            end
            1'd1: begin
                interface4_bank_bus_dat_r <= csrbank2_phy_msi_enable_w;
            end
            2'd2: begin
                interface4_bank_bus_dat_r <= csrbank2_phy_msix_enable_w;
            end
            2'd3: begin
                interface4_bank_bus_dat_r <= csrbank2_phy_bus_master_enable_w;
            end
            3'd4: begin
                interface4_bank_bus_dat_r <= csrbank2_phy_max_request_size_w;
            end
            3'd5: begin
                interface4_bank_bus_dat_r <= csrbank2_phy_max_payload_size_w;
            end
        endcase
    end
    interface5_bank_bus_dat_r <= 1'd0;
    if (csrbank5_sel) begin
        case (interface5_bank_bus_adr[8:0])
            1'd0: begin
                interface5_bank_bus_dat_r <= csrbank5_control0_w;
            end
            1'd1: begin
                interface5_bank_bus_dat_r <= csrbank5_status_w;
            end
            2'd2: begin
                interface5_bank_bus_dat_r <= csrbank5_phy_tx_delay_w;
            end
            2'd3: begin
                interface5_bank_bus_dat_r <= csrbank5_phy_rx_delay_w;
            end
            3'd4: begin
                interface5_bank_bus_dat_r <= csrbank5_master_time1_w;
            end
            3'd5: begin
                interface5_bank_bus_dat_r <= csrbank5_master_time0_w;
            end
            3'd6: begin
                interface5_bank_bus_dat_r <= csrbank5_link_delay_w;
            end
            3'd7: begin
                interface5_bank_bus_dat_r <= csrbank5_t1_time1_w;
            end
            4'd8: begin
                interface5_bank_bus_dat_r <= csrbank5_t1_time0_w;
            end
            4'd9: begin
                interface5_bank_bus_dat_r <= csrbank5_t4_time1_w;
            end
            4'd10: begin
                interface5_bank_bus_dat_r <= csrbank5_t4_time0_w;
            end
        endcase
    end
    if (csrbank5_control0_re) begin
        ptm_requester_control_storage[1:0] <= csrbank5_control0_r;
    end
    ptm_requester_control_re <= csrbank5_control0_re;
    ptm_requester_status_re <= csrbank5_status_re;
    ptm_requester_phy_tx_delay_re <= csrbank5_phy_tx_delay_re;
    ptm_requester_phy_rx_delay_re <= csrbank5_phy_rx_delay_re;
    ptm_requester_master_time_re <= csrbank5_master_time0_re;
    ptm_requester_link_delay_re <= csrbank5_link_delay_re;
    ptm_requester_t1_time_re <= csrbank5_t1_time0_re;
    ptm_requester_t4_time_re <= csrbank5_t4_time0_re;
    if (sys_rst) begin
        reset_storage <= 2'd0;
        reset_re <= 1'd0;
        scratch_storage <= 32'd305419896;
        scratch_re <= 1'd0;
        bus_errors_re <= 1'd0;
        bus_errors <= 32'd0;
        s7pciephy_link_status_re <= 1'd0;
        s7pciephy_msi_enable_re <= 1'd0;
        s7pciephy_msix_enable_re <= 1'd0;
        s7pciephy_bus_master_enable_re <= 1'd0;
        s7pciephy_max_request_size_re <= 1'd0;
        s7pciephy_max_payload_size_re <= 1'd0;
        s7pciephy_tx_datapath_pipe_valid_source_valid <= 1'd0;
        s7pciephy_tx_datapath_pipe_valid_source_payload_dat <= 64'd0;
        s7pciephy_tx_datapath_pipe_valid_source_payload_be <= 8'd0;
        s7pciephy_rx_datapath_pipe_valid_source_valid <= 1'd0;
        s7pciephy_rx_datapath_pipe_valid_source_payload_dat <= 64'd0;
        s7pciephy_rx_datapath_pipe_valid_source_payload_be <= 8'd0;
        depacketizer_header_extracter_source_payload_header <= 128'd0;
        depacketizer_header_extracter_first <= 1'd0;
        depacketizer_header_extracter_last <= 1'd0;
        depacketizer_header_extracter_count <= 1'd0;
        depacketizer_dispatcher_first <= 1'd1;
        depacketizer_dispatcher_ongoing1 <= 1'd0;
        depacketizer_dispatcher_sel_ongoing <= 3'd0;
        packetizer_grant <= 2'd0;
        packetizer_status0_first <= 1'd1;
        packetizer_status0_ongoing1 <= 1'd0;
        packetizer_status1_first <= 1'd1;
        packetizer_status1_ongoing1 <= 1'd0;
        packetizer_status2_first <= 1'd1;
        packetizer_status2_ongoing1 <= 1'd0;
        packetizer_header_inserter_3dws_count <= 1'd0;
        packetizer_header_inserter_4dws_count <= 1'd0;
        pcie_wishbone_master_sink_payload_req_id <= 16'd0;
        pcie_wishbone_master_sink_payload_cmp_id <= 16'd0;
        pcie_wishbone_master_sink_payload_adr <= 32'd0;
        pcie_wishbone_master_sink_payload_len <= 10'd0;
        pcie_wishbone_master_sink_payload_err <= 1'd0;
        pcie_wishbone_master_sink_payload_tag <= 8'd0;
        pcie_wishbone_master_sink_payload_dat <= 64'd0;
        cmd_done <= 1'd0;
        data_done <= 1'd0;
        data <= 32'd0;
        last_ar_aw_n <= 1'd0;
        litepciedma_writer_enable_storage <= 2'd0;
        litepciedma_writer_enable_re <= 1'd0;
        litepciedma_writer_table_value_re <= 1'd0;
        litepciedma_writer_table_we_storage <= 32'd0;
        litepciedma_writer_table_we_re <= 1'd0;
        litepciedma_writer_table_loop_prog_n_storage <= 1'd0;
        litepciedma_writer_table_loop_prog_n_re <= 1'd0;
        litepciedma_writer_table_index <= 16'd0;
        litepciedma_writer_table_count <= 16'd0;
        litepciedma_writer_table_loop_status_re <= 1'd0;
        litepciedma_writer_table_level_re <= 1'd0;
        litepciedma_writer_table_reset_storage <= 1'd0;
        litepciedma_writer_table_reset_re <= 1'd0;
        litepciedma_writer_table_table_sink_valid <= 1'd0;
        litepciedma_writer_table_table_sink_payload_address <= 32'd0;
        litepciedma_writer_table_table_sink_payload_length <= 24'd0;
        litepciedma_writer_table_table_sink_payload_irq_disable <= 1'd0;
        litepciedma_writer_table_table_sink_payload_last_disable <= 1'd0;
        litepciedma_writer_table_table_level <= 9'd0;
        litepciedma_writer_table_table_produce <= 8'd0;
        litepciedma_writer_table_table_consume <= 8'd0;
        litepciedma_writer_table_loop_first <= 1'd0;
        litepciedma_writer_splitter_desc_length <= 32'd0;
        litepciedma_writer_splitter_desc_offset <= 32'd0;
        litepciedma_writer_splitter_desc_id <= 32'd0;
        litepciedma_writer_data_fifo_readable <= 1'd0;
        litepciedma_writer_data_fifo_level0 <= 9'd0;
        litepciedma_writer_data_fifo_produce <= 8'd0;
        litepciedma_writer_data_fifo_consume <= 8'd0;
        litepciedma_writer_req_count <= 24'd0;
        litepciedma_reader_enable_storage <= 2'd0;
        litepciedma_reader_enable_re <= 1'd0;
        litepciedma_reader_table_value_re <= 1'd0;
        litepciedma_reader_table_we_storage <= 32'd0;
        litepciedma_reader_table_we_re <= 1'd0;
        litepciedma_reader_table_loop_prog_n_storage <= 1'd0;
        litepciedma_reader_table_loop_prog_n_re <= 1'd0;
        litepciedma_reader_table_index <= 16'd0;
        litepciedma_reader_table_count <= 16'd0;
        litepciedma_reader_table_loop_status_re <= 1'd0;
        litepciedma_reader_table_level_re <= 1'd0;
        litepciedma_reader_table_reset_storage <= 1'd0;
        litepciedma_reader_table_reset_re <= 1'd0;
        litepciedma_reader_table_table_sink_valid <= 1'd0;
        litepciedma_reader_table_table_sink_payload_address <= 32'd0;
        litepciedma_reader_table_table_sink_payload_length <= 24'd0;
        litepciedma_reader_table_table_sink_payload_irq_disable <= 1'd0;
        litepciedma_reader_table_table_sink_payload_last_disable <= 1'd0;
        litepciedma_reader_table_table_level <= 9'd0;
        litepciedma_reader_table_table_produce <= 8'd0;
        litepciedma_reader_table_table_consume <= 8'd0;
        litepciedma_reader_table_loop_first <= 1'd0;
        litepciedma_reader_splitter_desc_length <= 32'd0;
        litepciedma_reader_splitter_desc_offset <= 32'd0;
        litepciedma_reader_splitter_desc_id <= 32'd0;
        litepciedma_reader_splitter_pipe_valid_source_valid <= 1'd0;
        litepciedma_reader_splitter_pipe_valid_source_payload_address <= 32'd0;
        litepciedma_reader_splitter_pipe_valid_source_payload_length <= 24'd0;
        litepciedma_reader_splitter_pipe_valid_source_payload_irq_disable <= 1'd0;
        litepciedma_reader_splitter_pipe_valid_source_payload_last_disable <= 1'd0;
        litepciedma_reader_splitter_pipe_valid_source_payload_user_id <= 8'd0;
        litepciedma_reader_last_user_id <= 8'd255;
        litepciedma_reader_data_fifo_readable <= 1'd0;
        litepciedma_reader_data_fifo_level0 <= 12'd0;
        litepciedma_reader_data_fifo_produce <= 11'd0;
        litepciedma_reader_data_fifo_consume <= 11'd0;
        litepciedma_reader_pending_words <= 12'd0;
        litepciedma_loopback_storage <= 1'd0;
        litepciedma_loopback_re <= 1'd0;
        litepciedma_synchronizer_bypass_storage <= 1'd0;
        litepciedma_synchronizer_bypass_re <= 1'd0;
        litepciedma_synchronizer_enable_storage <= 2'd0;
        litepciedma_synchronizer_enable_re <= 1'd0;
        litepciedma_synchronizer_synced <= 1'd0;
        litepciedma_buffering_reader_fifo_control_storage <= 32'd8192;
        litepciedma_buffering_reader_fifo_control_re <= 1'd0;
        litepciedma_buffering_reader_fifo_status_re <= 1'd0;
        litepciedma_buffering_writer_fifo_control_storage <= 32'd8192;
        litepciedma_buffering_writer_fifo_control_re <= 1'd0;
        litepciedma_buffering_writer_fifo_status_re <= 1'd0;
        litepciedma_buffering_reader_fifo_readable <= 1'd0;
        litepciedma_buffering_reader_fifo_level0 <= 11'd0;
        litepciedma_buffering_reader_fifo_produce <= 10'd0;
        litepciedma_buffering_reader_fifo_consume <= 10'd0;
        litepciedma_buffering_reader_fifo_level_min <= 11'd0;
        litepciedma_buffering_writer_fifo_readable <= 1'd0;
        litepciedma_buffering_writer_fifo_level0 <= 11'd0;
        litepciedma_buffering_writer_fifo_produce <= 10'd0;
        litepciedma_buffering_writer_fifo_consume <= 10'd0;
        litepciedma_buffering_writer_fifo_level_max <= 11'd0;
        litepciedma_writer_monitor_re <= 1'd0;
        litepciedma_writer_monitor_count <= 16'd0;
        litepciedma_writer_monitor_count_latched <= 16'd0;
        litepciedma_reader_monitor_re <= 1'd0;
        litepciedma_reader_monitor_count <= 16'd0;
        litepciedma_reader_monitor_count_latched <= 16'd0;
        bufferizeendpoints0_pipe_valid_source_valid <= 1'd0;
        bufferizeendpoints0_pipe_valid_source_payload_data <= 64'd0;
        bufferizeendpoints1_pipe_valid_source_valid <= 1'd0;
        bufferizeendpoints1_pipe_valid_source_payload_data <= 64'd0;
        pcie_msi_enable_storage <= 64'd0;
        pcie_msi_enable_re <= 1'd0;
        pcie_msi_pba_re <= 1'd0;
        pcie_msi_vector <= 64'd0;
        pcie_ptm_sniffer_cdc_cdc_graycounter1_q <= 3'd0;
        pcie_ptm_sniffer_cdc_cdc_graycounter1_q_binary <= 3'd0;
        ptm_capabilities_dat <= 32'd0;
        ptm_requester_update <= 1'd0;
        ptm_requester_master_time <= 64'd0;
        ptm_requester_link_delay <= 32'd0;
        ptm_requester_t1 <= 64'd0;
        ptm_requester_t4 <= 64'd0;
        ptm_requester_control_storage <= 2'd1;
        ptm_requester_control_re <= 1'd0;
        ptm_requester_status_re <= 1'd0;
        ptm_requester_phy_tx_delay_re <= 1'd0;
        ptm_requester_phy_rx_delay_re <= 1'd0;
        ptm_requester_master_time_re <= 1'd0;
        ptm_requester_link_delay_re <= 1'd0;
        ptm_requester_t1_time_re <= 1'd0;
        ptm_requester_t4_time_re <= 1'd0;
        ptm_requester_cdc_graycounter1_q <= 3'd0;
        ptm_requester_cdc_graycounter1_q_binary <= 3'd0;
        ptm_requester_time1 <= 64'd0;
        ptm_requester_count <= 7'd125;
        slave_sel_r <= 2'd0;
        count <= 20'd1000000;
        sram0_sel_r <= 1'd0;
        sram1_sel_r <= 1'd0;
        litepciecore_litepcieendpoint_state <= 2'd0;
        litepciecore_litepcieendpoint_litepcietlpheaderinserter64b3dws_state <= 1'd0;
        litepciecore_litepcieendpoint_litepcietlpheaderinserter64b4dws_state <= 1'd0;
        litepciecore_litepcieendpoint_first <= 1'd1;
        litepciecore_litepcieendpoint_ongoing1 <= 1'd0;
        litepciecore_litepcieendpoint_sel_ongoing <= 2'd0;
        litepciecore_litepcieendpoint_grant <= 1'd0;
        litepciecore_litepcieendpoint_status0_first <= 1'd1;
        litepciecore_litepcieendpoint_status0_ongoing1 <= 1'd0;
        litepciecore_litepcieendpoint_status1_first <= 1'd1;
        litepciecore_litepcieendpoint_status1_ongoing1 <= 1'd0;
        litepciecore_litepcieendpoint_tag_queue_readable <= 1'd0;
        litepciecore_litepcieendpoint_tag_queue_level0 <= 4'd0;
        litepciecore_litepcieendpoint_tag_queue_produce <= 3'd0;
        litepciecore_litepcieendpoint_tag_queue_consume <= 3'd0;
        litepciecore_litepcieendpoint_req_queue_readable <= 1'd0;
        litepciecore_litepcieendpoint_req_queue_level0 <= 4'd0;
        litepciecore_litepcieendpoint_req_queue_produce <= 3'd0;
        litepciecore_litepcieendpoint_req_queue_consume <= 3'd0;
        litepciecore_litepcieendpoint_syncfifo0_readable <= 1'd0;
        litepciecore_litepcieendpoint_syncfifo0_level0 <= 9'd0;
        litepciecore_litepcieendpoint_syncfifo0_produce <= 8'd0;
        litepciecore_litepcieendpoint_syncfifo0_consume <= 8'd0;
        litepciecore_litepcieendpoint_syncfifo1_readable <= 1'd0;
        litepciecore_litepcieendpoint_syncfifo1_level0 <= 9'd0;
        litepciecore_litepcieendpoint_syncfifo1_produce <= 8'd0;
        litepciecore_litepcieendpoint_syncfifo1_consume <= 8'd0;
        litepciecore_litepcieendpoint_syncfifo2_readable <= 1'd0;
        litepciecore_litepcieendpoint_syncfifo2_level0 <= 9'd0;
        litepciecore_litepcieendpoint_syncfifo2_produce <= 8'd0;
        litepciecore_litepcieendpoint_syncfifo2_consume <= 8'd0;
        litepciecore_litepcieendpoint_syncfifo3_readable <= 1'd0;
        litepciecore_litepcieendpoint_syncfifo3_level0 <= 9'd0;
        litepciecore_litepcieendpoint_syncfifo3_produce <= 8'd0;
        litepciecore_litepcieendpoint_syncfifo3_consume <= 8'd0;
        litepciecore_litepcieendpoint_syncfifo4_readable <= 1'd0;
        litepciecore_litepcieendpoint_syncfifo4_level0 <= 9'd0;
        litepciecore_litepcieendpoint_syncfifo4_produce <= 8'd0;
        litepciecore_litepcieendpoint_syncfifo4_consume <= 8'd0;
        litepciecore_litepcieendpoint_syncfifo5_readable <= 1'd0;
        litepciecore_litepcieendpoint_syncfifo5_level0 <= 9'd0;
        litepciecore_litepcieendpoint_syncfifo5_produce <= 8'd0;
        litepciecore_litepcieendpoint_syncfifo5_consume <= 8'd0;
        litepciecore_litepcieendpoint_syncfifo6_readable <= 1'd0;
        litepciecore_litepcieendpoint_syncfifo6_level0 <= 9'd0;
        litepciecore_litepcieendpoint_syncfifo6_produce <= 8'd0;
        litepciecore_litepcieendpoint_syncfifo6_consume <= 8'd0;
        litepciecore_litepcieendpoint_syncfifo7_readable <= 1'd0;
        litepciecore_litepcieendpoint_syncfifo7_level0 <= 9'd0;
        litepciecore_litepcieendpoint_syncfifo7_produce <= 8'd0;
        litepciecore_litepcieendpoint_syncfifo7_consume <= 8'd0;
        litepciecore_litepcieendpoint_fill_tag <= 3'd0;
        litepciecore_litepcieendpoint_arbiter0_grant <= 2'd0;
        litepciecore_litepcieendpoint_arbiter0_status0_first <= 1'd1;
        litepciecore_litepcieendpoint_arbiter0_status0_ongoing1 <= 1'd0;
        litepciecore_litepcieendpoint_arbiter0_status1_first <= 1'd1;
        litepciecore_litepcieendpoint_arbiter0_status1_ongoing1 <= 1'd0;
        litepciecore_litepcieendpoint_arbiter0_status2_first <= 1'd1;
        litepciecore_litepcieendpoint_arbiter0_status2_ongoing1 <= 1'd0;
        litepciecore_litepcieendpoint_dispatcher0_first <= 1'd1;
        litepciecore_litepcieendpoint_dispatcher0_ongoing1 <= 1'd0;
        litepciecore_litepcieendpoint_dispatcher0_sel_ongoing <= 3'd0;
        litepciecore_litepcieendpoint_dispatcher1_first <= 1'd1;
        litepciecore_litepcieendpoint_dispatcher1_ongoing1 <= 1'd0;
        litepciecore_litepcieendpoint_dispatcher1_sel_ongoing <= 1'd0;
        litepciecore_litepcieendpoint_arbiter1_grant <= 1'd0;
        litepciecore_litepcieendpoint_arbiter1_status3_first <= 1'd1;
        litepciecore_litepcieendpoint_arbiter1_status3_ongoing1 <= 1'd0;
        litepciecore_litepcieendpoint_arbiter1_status4_first <= 1'd1;
        litepciecore_litepcieendpoint_arbiter1_status4_ongoing1 <= 1'd0;
        litepciecore_litepcieendpoint_fsm0_state <= 2'd0;
        litepciecore_litepcieendpoint_fsm1_state <= 2'd0;
        litepciecore_litepciewishbonemaster_state <= 2'd0;
        litepciecore_wishbone2axilite_state <= 2'd0;
        litepciecore_axilite2wishbone_state <= 3'd0;
        litepciecore_litepciewishboneslave_state <= 2'd0;
        litepciecore_litepciedmawriter_resetinserter_state <= 1'd0;
        litepciecore_litepciedmawriter_fsm_state <= 1'd0;
        litepciecore_litepciedmareader_bufferizeendpoints_state <= 1'd0;
        litepciecore_litepciedmareader_fsm_state <= 1'd0;
        litepciecore_litepciemsix_state <= 1'd0;
        litepciecore_ptmcapabilities_state <= 2'd0;
        litepciecore_ptmrequester_state <= 3'd0;
        litepciecore_wishbone2csr_state <= 1'd0;
    end
    xilinxmultiregimpl6_regs0 <= s7pciephy_command[2];
    xilinxmultiregimpl6_regs1 <= xilinxmultiregimpl6_regs0;
    xilinxmultiregimpl7_regs0 <= s7pciephy_max_request_size;
    xilinxmultiregimpl7_regs1 <= xilinxmultiregimpl7_regs0;
    xilinxmultiregimpl8_regs0 <= s7pciephy_max_payload_size;
    xilinxmultiregimpl8_regs1 <= xilinxmultiregimpl8_regs0;
    xilinxmultiregimpl10_regs0 <= litepciedma_writer_monitor_count_latched;
    xilinxmultiregimpl10_regs1 <= xilinxmultiregimpl10_regs0;
    xilinxmultiregimpl11_regs0 <= litepciedma_reader_monitor_count_latched;
    xilinxmultiregimpl11_regs1 <= xilinxmultiregimpl11_regs0;
    xilinxmultiregimpl14_regs0 <= pcie_ptm_sniffer_cdc_cdc_graycounter0_q;
    xilinxmultiregimpl14_regs1 <= xilinxmultiregimpl14_regs0;
    xilinxmultiregimpl16_regs0 <= ptm_requester_cdc_graycounter0_q;
    xilinxmultiregimpl16_regs1 <= xilinxmultiregimpl16_regs0;
end

always @(posedge time_clk) begin
    ptm_requester_cdc_graycounter0_q_binary <= ptm_requester_cdc_graycounter0_q_next_binary;
    ptm_requester_cdc_graycounter0_q <= ptm_requester_cdc_graycounter0_q_next;
    if (time_rst) begin
        ptm_requester_cdc_graycounter0_q <= 3'd0;
        ptm_requester_cdc_graycounter0_q_binary <= 3'd0;
    end
    xilinxmultiregimpl17_regs0 <= ptm_requester_cdc_graycounter1_q;
    xilinxmultiregimpl17_regs1 <= xilinxmultiregimpl17_regs0;
end

always @(posedge to140100636556256_clk) begin
    s7pciephy_rx_datapath_cdc_cdc_graycounter1_q_binary <= s7pciephy_rx_datapath_cdc_cdc_graycounter1_q_next_binary;
    s7pciephy_rx_datapath_cdc_cdc_graycounter1_q <= s7pciephy_rx_datapath_cdc_cdc_graycounter1_q_next;
    if (to140100636556256_rst) begin
        s7pciephy_rx_datapath_cdc_cdc_graycounter1_q <= 5'd0;
        s7pciephy_rx_datapath_cdc_cdc_graycounter1_q_binary <= 5'd0;
    end
    xilinxmultiregimpl2_regs0 <= s7pciephy_rx_datapath_cdc_cdc_graycounter0_q;
    xilinxmultiregimpl2_regs1 <= xilinxmultiregimpl2_regs0;
end

always @(posedge to140100636878112_clk) begin
    s7pciephy_msi_cdc_cdc_graycounter1_q_binary <= s7pciephy_msi_cdc_cdc_graycounter1_q_next_binary;
    s7pciephy_msi_cdc_cdc_graycounter1_q <= s7pciephy_msi_cdc_cdc_graycounter1_q_next;
    if (to140100636878112_rst) begin
        s7pciephy_msi_cdc_cdc_graycounter1_q <= 3'd0;
        s7pciephy_msi_cdc_cdc_graycounter1_q_binary <= 3'd0;
    end
    xilinxmultiregimpl4_regs0 <= s7pciephy_msi_cdc_cdc_graycounter0_q;
    xilinxmultiregimpl4_regs1 <= xilinxmultiregimpl4_regs0;
end

always @(posedge to140100637018048_clk) begin
    s7pciephy_tx_datapath_cdc_cdc_graycounter1_q_binary <= s7pciephy_tx_datapath_cdc_cdc_graycounter1_q_next_binary;
    s7pciephy_tx_datapath_cdc_cdc_graycounter1_q <= s7pciephy_tx_datapath_cdc_cdc_graycounter1_q_next;
    if (to140100637018048_rst) begin
        s7pciephy_tx_datapath_cdc_cdc_graycounter1_q <= 5'd0;
        s7pciephy_tx_datapath_cdc_cdc_graycounter1_q_binary <= 5'd0;
    end
    xilinxmultiregimpl0_regs0 <= s7pciephy_tx_datapath_cdc_cdc_graycounter0_q;
    xilinxmultiregimpl0_regs1 <= xilinxmultiregimpl0_regs0;
end


//------------------------------------------------------------------------------
// Specialized Logic
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// Memory mem: 45-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: ---- | 
reg [7:0] mem[0:44];
initial begin
	$readmemh("litepcie_core_mem.init", mem);
end
reg [5:0] mem_adr0;
always @(posedge sys_clk) begin
	mem_adr0 <= sram0_adr;
end
assign sram0_dat_r = mem[mem_adr0];


IBUFDS_GTE2 IBUFDS_GTE2(
	.CEB(1'd0),
	.I(pcie_clk_p),
	.IB(pcie_clk_n),
	.O(s7pciephy_pcie_refclk)
);

//------------------------------------------------------------------------------
// Memory storage: 16-words x 74-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 74 
// Port 1 | Read: Sync  | Write: ---- | 
reg [73:0] storage[0:15];
reg [73:0] storage_dat0;
reg [73:0] storage_dat1;
always @(posedge from140100637018048_clk) begin
	if (s7pciephy_tx_datapath_cdc_cdc_wrport_we)
		storage[s7pciephy_tx_datapath_cdc_cdc_wrport_adr] <= s7pciephy_tx_datapath_cdc_cdc_wrport_dat_w;
	storage_dat0 <= storage[s7pciephy_tx_datapath_cdc_cdc_wrport_adr];
end
always @(posedge to140100637018048_clk) begin
	storage_dat1 <= storage[s7pciephy_tx_datapath_cdc_cdc_rdport_adr];
end
assign s7pciephy_tx_datapath_cdc_cdc_wrport_dat_r = storage_dat0;
assign s7pciephy_tx_datapath_cdc_cdc_rdport_dat_r = storage_dat1;


//------------------------------------------------------------------------------
// Memory storage_1: 16-words x 74-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 74 
// Port 1 | Read: Sync  | Write: ---- | 
reg [73:0] storage_1[0:15];
reg [73:0] storage_1_dat0;
reg [73:0] storage_1_dat1;
always @(posedge from140100636556256_clk) begin
	if (s7pciephy_rx_datapath_cdc_cdc_wrport_we)
		storage_1[s7pciephy_rx_datapath_cdc_cdc_wrport_adr] <= s7pciephy_rx_datapath_cdc_cdc_wrport_dat_w;
	storage_1_dat0 <= storage_1[s7pciephy_rx_datapath_cdc_cdc_wrport_adr];
end
always @(posedge to140100636556256_clk) begin
	storage_1_dat1 <= storage_1[s7pciephy_rx_datapath_cdc_cdc_rdport_adr];
end
assign s7pciephy_rx_datapath_cdc_cdc_wrport_dat_r = storage_1_dat0;
assign s7pciephy_rx_datapath_cdc_cdc_rdport_dat_r = storage_1_dat1;


//------------------------------------------------------------------------------
// Memory storage_2: 4-words x 10-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 10 
// Port 1 | Read: Sync  | Write: ---- | 
reg [9:0] storage_2[0:3];
reg [9:0] storage_2_dat0;
reg [9:0] storage_2_dat1;
always @(posedge from140100636878112_clk) begin
	if (s7pciephy_msi_cdc_cdc_wrport_we)
		storage_2[s7pciephy_msi_cdc_cdc_wrport_adr] <= s7pciephy_msi_cdc_cdc_wrport_dat_w;
	storage_2_dat0 <= storage_2[s7pciephy_msi_cdc_cdc_wrport_adr];
end
always @(posedge to140100636878112_clk) begin
	storage_2_dat1 <= storage_2[s7pciephy_msi_cdc_cdc_rdport_adr];
end
assign s7pciephy_msi_cdc_cdc_wrport_dat_r = storage_2_dat0;
assign s7pciephy_msi_cdc_cdc_rdport_dat_r = storage_2_dat1;


BUFG BUFG(
	.I(s7pciephy_pipe_txoutclk),
	.O(s7pciephy_pipe_txoutclk_bufg)
);

BUFG BUFG_1(
	.I(s7pciephy_clkout0),
	.O(s7pciephy_clkout_buf0)
);

BUFG BUFG_2(
	.I(s7pciephy_clkout1),
	.O(s7pciephy_clkout_buf1)
);

BUFG BUFG_3(
	.I(s7pciephy_clkout2),
	.O(s7pciephy_clkout_buf2)
);

BUFG BUFG_4(
	.I(s7pciephy_clkout3),
	.O(s7pciephy_clkout_buf3)
);

BUFGCTRL BUFGCTRL(
	.CE0(1'd1),
	.CE1(1'd1),
	.I0(clk125_clk),
	.I1(clk250_clk),
	.S0((s7pciephy_pclk_sel == 1'd0)),
	.S1((s7pciephy_pclk_sel == 1'd1)),
	.O(pclk_clk)
);

//------------------------------------------------------------------------------
// Memory storage_3: 256-words x 60-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 60 
// Port 1 | Read: Async | Write: ---- | 
reg [59:0] storage_3[0:255];
reg [59:0] storage_3_dat0;
always @(posedge sys_clk) begin
	if (litepciedma_writer_table_table_wrport_we)
		storage_3[litepciedma_writer_table_table_wrport_adr] <= litepciedma_writer_table_table_wrport_dat_w;
	storage_3_dat0 <= storage_3[litepciedma_writer_table_table_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign litepciedma_writer_table_table_wrport_dat_r = storage_3_dat0;
assign litepciedma_writer_table_table_rdport_dat_r = storage_3[litepciedma_writer_table_table_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_4: 256-words x 66-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 66 
// Port 1 | Read: Sync  | Write: ---- | 
reg [65:0] storage_4[0:255];
reg [65:0] storage_4_dat0;
reg [65:0] storage_4_dat1;
always @(posedge sys_clk) begin
	if (litepciedma_writer_data_fifo_wrport_we)
		storage_4[litepciedma_writer_data_fifo_wrport_adr] <= litepciedma_writer_data_fifo_wrport_dat_w;
	storage_4_dat0 <= storage_4[litepciedma_writer_data_fifo_wrport_adr];
end
always @(posedge sys_clk) begin
	if (litepciedma_writer_data_fifo_rdport_re)
		storage_4_dat1 <= storage_4[litepciedma_writer_data_fifo_rdport_adr];
end
assign litepciedma_writer_data_fifo_wrport_dat_r = storage_4_dat0;
assign litepciedma_writer_data_fifo_rdport_dat_r = storage_4_dat1;


//------------------------------------------------------------------------------
// Memory storage_5: 256-words x 60-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 60 
// Port 1 | Read: Async | Write: ---- | 
reg [59:0] storage_5[0:255];
reg [59:0] storage_5_dat0;
always @(posedge sys_clk) begin
	if (litepciedma_reader_table_table_wrport_we)
		storage_5[litepciedma_reader_table_table_wrport_adr] <= litepciedma_reader_table_table_wrport_dat_w;
	storage_5_dat0 <= storage_5[litepciedma_reader_table_table_wrport_adr];
end
always @(posedge sys_clk) begin
end
assign litepciedma_reader_table_table_wrport_dat_r = storage_5_dat0;
assign litepciedma_reader_table_table_rdport_dat_r = storage_5[litepciedma_reader_table_table_rdport_adr];


//------------------------------------------------------------------------------
// Memory storage_6: 2048-words x 66-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 66 
// Port 1 | Read: Sync  | Write: ---- | 
reg [65:0] storage_6[0:2047];
reg [65:0] storage_6_dat0;
reg [65:0] storage_6_dat1;
always @(posedge sys_clk) begin
	if (litepciedma_reader_data_fifo_wrport_we)
		storage_6[litepciedma_reader_data_fifo_wrport_adr] <= litepciedma_reader_data_fifo_wrport_dat_w;
	storage_6_dat0 <= storage_6[litepciedma_reader_data_fifo_wrport_adr];
end
always @(posedge sys_clk) begin
	if (litepciedma_reader_data_fifo_rdport_re)
		storage_6_dat1 <= storage_6[litepciedma_reader_data_fifo_rdport_adr];
end
assign litepciedma_reader_data_fifo_wrport_dat_r = storage_6_dat0;
assign litepciedma_reader_data_fifo_rdport_dat_r = storage_6_dat1;


//------------------------------------------------------------------------------
// Memory storage_7: 1024-words x 66-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 66 
// Port 1 | Read: Sync  | Write: ---- | 
reg [65:0] storage_7[0:1023];
reg [65:0] storage_7_dat0;
reg [65:0] storage_7_dat1;
always @(posedge sys_clk) begin
	if (litepciedma_buffering_reader_fifo_wrport_we)
		storage_7[litepciedma_buffering_reader_fifo_wrport_adr] <= litepciedma_buffering_reader_fifo_wrport_dat_w;
	storage_7_dat0 <= storage_7[litepciedma_buffering_reader_fifo_wrport_adr];
end
always @(posedge sys_clk) begin
	if (litepciedma_buffering_reader_fifo_rdport_re)
		storage_7_dat1 <= storage_7[litepciedma_buffering_reader_fifo_rdport_adr];
end
assign litepciedma_buffering_reader_fifo_wrport_dat_r = storage_7_dat0;
assign litepciedma_buffering_reader_fifo_rdport_dat_r = storage_7_dat1;


//------------------------------------------------------------------------------
// Memory storage_8: 1024-words x 66-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 66 
// Port 1 | Read: Sync  | Write: ---- | 
reg [65:0] storage_8[0:1023];
reg [65:0] storage_8_dat0;
reg [65:0] storage_8_dat1;
always @(posedge sys_clk) begin
	if (litepciedma_buffering_writer_fifo_wrport_we)
		storage_8[litepciedma_buffering_writer_fifo_wrport_adr] <= litepciedma_buffering_writer_fifo_wrport_dat_w;
	storage_8_dat0 <= storage_8[litepciedma_buffering_writer_fifo_wrport_adr];
end
always @(posedge sys_clk) begin
	if (litepciedma_buffering_writer_fifo_rdport_re)
		storage_8_dat1 <= storage_8[litepciedma_buffering_writer_fifo_rdport_adr];
end
assign litepciedma_buffering_writer_fifo_wrport_dat_r = storage_8_dat0;
assign litepciedma_buffering_writer_fifo_rdport_dat_r = storage_8_dat1;


//------------------------------------------------------------------------------
// Memory table_1: 64-words x 128-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: ---- | 
// Port 1 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 128 
reg [127:0] table_1[0:63];
reg [5:0] table_1_adr0;
reg [5:0] table_1_adr1;
always @(posedge sys_clk) begin
	if (pcie_msi_table_port_re)
		table_1_adr0 <= pcie_msi_table_port_adr;
end
always @(posedge sys_clk) begin
	if (sram1_we)
		table_1[sram1_adr] <= sram1_dat_w;
	table_1_adr1 <= sram1_adr;
end
assign pcie_msi_table_port_dat_r = table_1[table_1_adr0];
assign sram1_dat_r = table_1[table_1_adr1];


pcie_ptm_sniffer_tap pcie_ptm_sniffer_tap(
	.clk_in(pclk_clk),
	.rst_n_in(1'd1),
	.rx_ctl_in(rx_ctl),
	.rx_data_in(rx_data),
	.clk_out(sniffer_clk_1),
	.rst_n_out(sniffer_rst_n),
	.rx_ctl_out(sniffer_rx_ctl),
	.rx_data_out(sniffer_rx_data)
);

//------------------------------------------------------------------------------
// Memory storage_9: 8-words x 38-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 38 
// Port 1 | Read: Sync  | Write: ---- | 
reg [37:0] storage_9[0:7];
reg [2:0] storage_9_adr0;
reg [2:0] storage_9_adr1;
always @(posedge sniffer_clk) begin
	if (pcie_ptm_sniffer_rawdatapath_cdc_wrport_we)
		storage_9[pcie_ptm_sniffer_rawdatapath_cdc_wrport_adr] <= pcie_ptm_sniffer_rawdatapath_cdc_wrport_dat_w;
	storage_9_adr0 <= pcie_ptm_sniffer_rawdatapath_cdc_wrport_adr;
end
always @(posedge sniffer_clk) begin
	storage_9_adr1 <= pcie_ptm_sniffer_rawdatapath_cdc_rdport_adr;
end
assign pcie_ptm_sniffer_rawdatapath_cdc_wrport_dat_r = storage_9[storage_9_adr0];
assign pcie_ptm_sniffer_rawdatapath_cdc_rdport_dat_r = storage_9[storage_9_adr1];


//------------------------------------------------------------------------------
// Memory storage_10: 4-words x 38-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 38 
// Port 1 | Read: Sync  | Write: ---- | 
reg [37:0] storage_10[0:3];
reg [37:0] storage_10_dat0;
reg [37:0] storage_10_dat1;
always @(posedge sniffer_clk) begin
	if (pcie_ptm_sniffer_tlpfilterformater_fifo_wrport_we)
		storage_10[pcie_ptm_sniffer_tlpfilterformater_fifo_wrport_adr] <= pcie_ptm_sniffer_tlpfilterformater_fifo_wrport_dat_w;
	storage_10_dat0 <= storage_10[pcie_ptm_sniffer_tlpfilterformater_fifo_wrport_adr];
end
always @(posedge sniffer_clk) begin
	if (pcie_ptm_sniffer_tlpfilterformater_fifo_rdport_re)
		storage_10_dat1 <= storage_10[pcie_ptm_sniffer_tlpfilterformater_fifo_rdport_adr];
end
assign pcie_ptm_sniffer_tlpfilterformater_fifo_wrport_dat_r = storage_10_dat0;
assign pcie_ptm_sniffer_tlpfilterformater_fifo_rdport_dat_r = storage_10_dat1;


//------------------------------------------------------------------------------
// Memory storage_11: 4-words x 106-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 106 
// Port 1 | Read: Sync  | Write: ---- | 
reg [105:0] storage_11[0:3];
reg [105:0] storage_11_dat0;
reg [105:0] storage_11_dat1;
always @(posedge sniffer_clk) begin
	if (pcie_ptm_sniffer_cdc_cdc_wrport_we)
		storage_11[pcie_ptm_sniffer_cdc_cdc_wrport_adr] <= pcie_ptm_sniffer_cdc_cdc_wrport_dat_w;
	storage_11_dat0 <= storage_11[pcie_ptm_sniffer_cdc_cdc_wrport_adr];
end
always @(posedge sys_clk) begin
	storage_11_dat1 <= storage_11[pcie_ptm_sniffer_cdc_cdc_rdport_adr];
end
assign pcie_ptm_sniffer_cdc_cdc_wrport_dat_r = storage_11_dat0;
assign pcie_ptm_sniffer_cdc_cdc_rdport_dat_r = storage_11_dat1;


//------------------------------------------------------------------------------
// Memory mem_1: 3-words x 32-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 32 
// Port 1 | Read: Async | Write: ---- | 
// Port 2 | Read: Async | Write: ---- | 
reg [31:0] mem_1[0:2];
initial begin
	$readmemh("litepcie_core_mem_1.init", mem_1);
end
reg [1:0] mem_1_adr0;
always @(posedge sys_clk) begin
	if (ptm_capabilities_mem_wr_port_we)
		mem_1[ptm_capabilities_mem_wr_port_adr] <= ptm_capabilities_mem_wr_port_dat_w;
	mem_1_adr0 <= ptm_capabilities_mem_wr_port_adr;
end
always @(posedge sys_clk) begin
end
always @(posedge sys_clk) begin
end
assign ptm_capabilities_mem_wr_port_dat_r = mem_1[mem_1_adr0];
assign ptm_capabilities_mem_rd_port_dat_r = mem_1[ptm_capabilities_mem_rd_port_adr];
assign ptm_capabilities_mem_ctrl_port_dat_r = mem_1[ptm_capabilities_mem_ctrl_port_adr];


//------------------------------------------------------------------------------
// Memory storage_12: 4-words x 66-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 66 
// Port 1 | Read: Sync  | Write: ---- | 
reg [65:0] storage_12[0:3];
reg [65:0] storage_12_dat0;
reg [65:0] storage_12_dat1;
always @(posedge time_clk) begin
	if (ptm_requester_cdc_wrport_we)
		storage_12[ptm_requester_cdc_wrport_adr] <= ptm_requester_cdc_wrport_dat_w;
	storage_12_dat0 <= storage_12[ptm_requester_cdc_wrport_adr];
end
always @(posedge sys_clk) begin
	storage_12_dat1 <= storage_12[ptm_requester_cdc_rdport_adr];
end
assign ptm_requester_cdc_wrport_dat_r = storage_12_dat0;
assign ptm_requester_cdc_rdport_dat_r = storage_12_dat1;


FDCE FDCE(
	.C(s7pciephy_clkin),
	.CE(1'd1),
	.CLR(1'd0),
	.D(s7pciephy_reset),
	.Q(litepciecore_reset0)
);

FDCE FDCE_1(
	.C(s7pciephy_clkin),
	.CE(1'd1),
	.CLR(1'd0),
	.D(litepciecore_reset0),
	.Q(litepciecore_reset1)
);

FDCE FDCE_2(
	.C(s7pciephy_clkin),
	.CE(1'd1),
	.CLR(1'd0),
	.D(litepciecore_reset1),
	.Q(litepciecore_reset2)
);

FDCE FDCE_3(
	.C(s7pciephy_clkin),
	.CE(1'd1),
	.CLR(1'd0),
	.D(litepciecore_reset2),
	.Q(litepciecore_reset3)
);

FDCE FDCE_4(
	.C(s7pciephy_clkin),
	.CE(1'd1),
	.CLR(1'd0),
	.D(litepciecore_reset3),
	.Q(litepciecore_reset4)
);

FDCE FDCE_5(
	.C(s7pciephy_clkin),
	.CE(1'd1),
	.CLR(1'd0),
	.D(litepciecore_reset4),
	.Q(litepciecore_reset5)
);

FDCE FDCE_6(
	.C(s7pciephy_clkin),
	.CE(1'd1),
	.CLR(1'd0),
	.D(litepciecore_reset5),
	.Q(litepciecore_reset6)
);

FDCE FDCE_7(
	.C(s7pciephy_clkin),
	.CE(1'd1),
	.CLR(1'd0),
	.D(litepciecore_reset6),
	.Q(litepciecore_reset7)
);

MMCME2_ADV #(
	.BANDWIDTH("OPTIMIZED"),
	.CLKFBOUT_MULT_F(4'd10),
	.CLKIN1_PERIOD(10.0),
	.CLKOUT0_DIVIDE_F(4'd8),
	.CLKOUT0_PHASE(1'd0),
	.CLKOUT1_DIVIDE(3'd4),
	.CLKOUT1_PHASE(1'd0),
	.CLKOUT2_DIVIDE(4'd8),
	.CLKOUT2_PHASE(1'd0),
	.CLKOUT3_DIVIDE(4'd8),
	.CLKOUT3_PHASE(1'd0),
	.DIVCLK_DIVIDE(1'd1),
	.REF_JITTER1(0.01)
) MMCME2_ADV (
	.CLKFBIN(litepciecore_mmcm_fb),
	.CLKIN1(s7pciephy_clkin),
	.PWRDWN(s7pciephy_power_down),
	.RST(litepciecore_reset7),
	.CLKFBOUT(litepciecore_mmcm_fb),
	.CLKOUT0(s7pciephy_clkout0),
	.CLKOUT1(s7pciephy_clkout1),
	.CLKOUT2(s7pciephy_clkout2),
	.CLKOUT3(s7pciephy_clkout3),
	.LOCKED(s7pciephy_locked)
);

pcie_s7 pcie_s7(
	.cfg_aer_interrupt_msgnum(1'd0),
	.cfg_ds_bus_number(1'd0),
	.cfg_ds_device_number(1'd0),
	.cfg_ds_function_number(1'd0),
	.cfg_dsn(1'd0),
	.cfg_err_acs(1'd0),
	.cfg_err_aer_headerlog(1'd0),
	.cfg_err_atomic_egress_blocked(1'd0),
	.cfg_err_cor(1'd0),
	.cfg_err_cpl_abort(1'd0),
	.cfg_err_cpl_timeout(1'd0),
	.cfg_err_cpl_unexpect(1'd0),
	.cfg_err_ecrc(1'd0),
	.cfg_err_internal_cor(1'd0),
	.cfg_err_internal_uncor(1'd0),
	.cfg_err_locked(1'd0),
	.cfg_err_malformed(1'd0),
	.cfg_err_mc_blocked(1'd0),
	.cfg_err_norecovery(1'd0),
	.cfg_err_poisoned(1'd0),
	.cfg_err_posted(1'd0),
	.cfg_err_tlp_cpl_header(1'd0),
	.cfg_err_ur(1'd0),
	.cfg_interrupt(s7pciephy_msi_cdc_source_source_valid),
	.cfg_interrupt_assert(1'd0),
	.cfg_interrupt_di(s7pciephy_msi_cdc_source_source_payload_dat),
	.cfg_interrupt_stat(1'd0),
	.cfg_mgmt_byte_en(1'd0),
	.cfg_mgmt_di(1'd0),
	.cfg_mgmt_dwaddr(1'd0),
	.cfg_mgmt_rd_en(1'd0),
	.cfg_mgmt_wr_en(1'd0),
	.cfg_mgmt_wr_readonly(1'd0),
	.cfg_mgmt_wr_rw1c_as_rw(1'd0),
	.cfg_pciecap_interrupt_msgnum(1'd0),
	.cfg_pm_force_state(1'd0),
	.cfg_pm_force_state_en(1'd0),
	.cfg_pm_halt_aspm_l0s(1'd0),
	.cfg_pm_halt_aspm_l1(1'd0),
	.cfg_pm_send_pme_to(1'd0),
	.cfg_pm_wake(1'd0),
	.cfg_trn_pending(1'd0),
	.cfg_turnoff_ok(1'd0),
	.fc_sel(1'd0),
	.m_axis_rx_tready(s7pciephy_rx_datapath_sink_sink_ready),
	.pci_exp_rxn(pcie_rx_n),
	.pci_exp_rxp(pcie_rx_p),
	.pcie_drp_addr(1'd0),
	.pcie_drp_clk(1'd1),
	.pcie_drp_di(1'd0),
	.pcie_drp_en(1'd0),
	.pcie_drp_we(1'd0),
	.pipe_dclk_in(clk125_clk),
	.pipe_mmcm_lock_in(s7pciephy_locked),
	.pipe_mmcm_rst_n(1'd1),
	.pipe_oobclk_in(pclk_clk),
	.pipe_pclk_in(pclk_clk),
	.pipe_rxoutclk_in(1'd0),
	.pipe_rxusrclk_in(pclk_clk),
	.pipe_userclk1_in(userclk1_clk),
	.pipe_userclk2_in(userclk2_clk),
	.pl_directed_link_auton(1'd0),
	.pl_directed_link_change(1'd0),
	.pl_directed_link_speed(1'd0),
	.pl_directed_link_width(1'd0),
	.pl_downstream_deemph_source(1'd0),
	.pl_transmit_hot_rst(1'd0),
	.pl_upstream_prefer_deemph(1'd1),
	.rx_np_ok(1'd1),
	.rx_np_req(1'd1),
	.s_axis_tx_tdata(s7pciephy_tx_datapath_source_source_payload_dat),
	.s_axis_tx_tkeep(s7pciephy_tx_datapath_source_source_payload_be),
	.s_axis_tx_tlast(s7pciephy_tx_datapath_source_source_last),
	.s_axis_tx_tuser(1'd0),
	.s_axis_tx_tvalid(s7pciephy_tx_datapath_source_source_valid),
	.sys_clk(s7pciephy_pcie_refclk),
	.sys_rst_n(s7pciephy_pcie_rst_n),
	.tx_cfg_gnt(1'd1),
	.cfg_aer_ecrc_check_en(s7pciephy16),
	.cfg_aer_ecrc_gen_en(s7pciephy17),
	.cfg_aer_rooterr_corr_err_received(s7pciephy41),
	.cfg_aer_rooterr_corr_err_reporting_en(s7pciephy38),
	.cfg_aer_rooterr_fatal_err_received(s7pciephy43),
	.cfg_aer_rooterr_fatal_err_reporting_en(s7pciephy40),
	.cfg_aer_rooterr_non_fatal_err_received(s7pciephy42),
	.cfg_aer_rooterr_non_fatal_err_reporting_en(s7pciephy39),
	.cfg_bridge_serr_en(s7pciephy32),
	.cfg_bus_number(s7pciephy_bus_number),
	.cfg_command(s7pciephy_command),
	.cfg_dcommand(s7pciephy_dcommand),
	.cfg_dcommand2(s7pciephy25),
	.cfg_device_number(s7pciephy_device_number),
	.cfg_dstatus(s7pciephy22),
	.cfg_err_aer_headerlog_set(s7pciephy15),
	.cfg_err_cpl_rdy(s7pciephy14),
	.cfg_function_number(s7pciephy_function_number),
	.cfg_interrupt_do(s7pciephy18),
	.cfg_interrupt_mmenable(s7pciephy19),
	.cfg_interrupt_msienable(s7pciephy_msi_enable_status),
	.cfg_interrupt_msixenable(s7pciephy_msix_enable_status),
	.cfg_interrupt_msixfm(s7pciephy20),
	.cfg_interrupt_rdy(s7pciephy_msi_cdc_source_source_ready),
	.cfg_lcommand(s7pciephy24),
	.cfg_lstatus(s7pciephy23),
	.cfg_mgmt_do(s7pciephy12),
	.cfg_mgmt_rd_wr_done(s7pciephy13),
	.cfg_msg_data(s7pciephy46),
	.cfg_msg_received(s7pciephy45),
	.cfg_msg_received_assert_int_a(s7pciephy54),
	.cfg_msg_received_assert_int_b(s7pciephy55),
	.cfg_msg_received_assert_int_c(s7pciephy56),
	.cfg_msg_received_assert_int_d(s7pciephy57),
	.cfg_msg_received_deassert_int_a(s7pciephy58),
	.cfg_msg_received_deassert_int_b(s7pciephy59),
	.cfg_msg_received_deassert_int_c(s7pciephy60),
	.cfg_msg_received_deassert_int_d(s7pciephy61),
	.cfg_msg_received_err_cor(s7pciephy49),
	.cfg_msg_received_err_fatal(s7pciephy51),
	.cfg_msg_received_err_non_fatal(s7pciephy50),
	.cfg_msg_received_pm_as_nak(s7pciephy47),
	.cfg_msg_received_pm_pme(s7pciephy52),
	.cfg_msg_received_pme_to_ack(s7pciephy53),
	.cfg_msg_received_setslotpowerlimit(s7pciephy48),
	.cfg_pcie_link_state(s7pciephy26),
	.cfg_pmcsr_pme_en(s7pciephy28),
	.cfg_pmcsr_pme_status(s7pciephy30),
	.cfg_pmcsr_powerstate(s7pciephy29),
	.cfg_received_func_lvl_rst(s7pciephy31),
	.cfg_root_control_pme_int_en(s7pciephy37),
	.cfg_root_control_syserr_corr_err_en(s7pciephy34),
	.cfg_root_control_syserr_fatal_err_en(s7pciephy36),
	.cfg_root_control_syserr_non_fatal_err_en(s7pciephy35),
	.cfg_slot_control_electromech_il_ctl_pulse(s7pciephy33),
	.cfg_status(s7pciephy21),
	.cfg_to_turnoff(s7pciephy27),
	.cfg_vc_tcvc_map(s7pciephy44),
	.fc_cpld(s7pciephy6),
	.fc_cplh(s7pciephy7),
	.fc_npd(s7pciephy8),
	.fc_nph(s7pciephy9),
	.fc_pd(s7pciephy10),
	.fc_ph(s7pciephy11),
	.m_axis_rx_tdata(s7pciephy_rx_datapath_sink_sink_payload_dat),
	.m_axis_rx_tkeep(s7pciephy_rx_datapath_sink_sink_payload_be),
	.m_axis_rx_tlast(s7pciephy_m_axis_rx_tlast),
	.m_axis_rx_tuser(s7pciephy_m_axis_rx_tuser),
	.m_axis_rx_tvalid(s7pciephy_rx_datapath_sink_sink_valid),
	.pci_exp_txn(pcie_tx_n),
	.pci_exp_txp(pcie_tx_p),
	.pcie_drp_do(s7pciephy73),
	.pcie_drp_rdy(s7pciephy72),
	.pipe_gen3_out(s7pciephy1),
	.pipe_pclk_sel_out(s7pciephy_pipe_pclk_sel),
	.pipe_rxoutclk_out(s7pciephy0),
	.pipe_txoutclk_out(s7pciephy_pipe_txoutclk),
	.pl_directed_change_done(s7pciephy70),
	.pl_initial_link_width(s7pciephy69),
	.pl_lane_reversal_mode(s7pciephy62),
	.pl_link_gen2_cap(s7pciephy67),
	.pl_link_partner_gen2_supported(s7pciephy68),
	.pl_link_upcfg_cap(s7pciephy66),
	.pl_ltssm_state(s7pciephy_csrfield_ltssm),
	.pl_phy_lnk_up(s7pciephy63),
	.pl_received_hot_rst(s7pciephy71),
	.pl_rx_pm_state(s7pciephy65),
	.pl_sel_lnk_rate(s7pciephy_csrfield_rate),
	.pl_sel_lnk_width(s7pciephy_csrfield_width),
	.pl_tx_pm_state(s7pciephy64),
	.s_axis_tx_tready(s7pciephy_tx_datapath_source_source_ready),
	.tx_buf_av(s7pciephy3),
	.tx_cfg_req(s7pciephy5),
	.tx_err_drop(s7pciephy4),
	.user_app_rdy(s7pciephy2),
	.user_clk_out(pcie_clk),
	.user_lnk_up(s7pciephy_csrfield_status),
	.user_reset_out(pcie_rst)
);

//------------------------------------------------------------------------------
// Memory storage_13: 8-words x 5-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 5 
// Port 1 | Read: Sync  | Write: ---- | 
reg [4:0] storage_13[0:7];
reg [4:0] storage_13_dat0;
reg [4:0] storage_13_dat1;
always @(posedge sys_clk) begin
	if (litepciecore_litepcieendpoint_tag_queue_wrport_we)
		storage_13[litepciecore_litepcieendpoint_tag_queue_wrport_adr] <= litepciecore_litepcieendpoint_tag_queue_wrport_dat_w;
	storage_13_dat0 <= storage_13[litepciecore_litepcieendpoint_tag_queue_wrport_adr];
end
always @(posedge sys_clk) begin
	if (litepciecore_litepcieendpoint_tag_queue_rdport_re)
		storage_13_dat1 <= storage_13[litepciecore_litepcieendpoint_tag_queue_rdport_adr];
end
assign litepciecore_litepcieendpoint_tag_queue_wrport_dat_r = storage_13_dat0;
assign litepciecore_litepcieendpoint_tag_queue_rdport_dat_r = storage_13_dat1;


//------------------------------------------------------------------------------
// Memory storage_14: 8-words x 21-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 21 
// Port 1 | Read: Sync  | Write: ---- | 
reg [20:0] storage_14[0:7];
reg [20:0] storage_14_dat0;
reg [20:0] storage_14_dat1;
always @(posedge sys_clk) begin
	if (litepciecore_litepcieendpoint_req_queue_wrport_we)
		storage_14[litepciecore_litepcieendpoint_req_queue_wrport_adr] <= litepciecore_litepcieendpoint_req_queue_wrport_dat_w;
	storage_14_dat0 <= storage_14[litepciecore_litepcieendpoint_req_queue_wrport_adr];
end
always @(posedge sys_clk) begin
	if (litepciecore_litepcieendpoint_req_queue_rdport_re)
		storage_14_dat1 <= storage_14[litepciecore_litepcieendpoint_req_queue_rdport_adr];
end
assign litepciecore_litepcieendpoint_req_queue_wrport_dat_r = storage_14_dat0;
assign litepciecore_litepcieendpoint_req_queue_rdport_dat_r = storage_14_dat1;


//------------------------------------------------------------------------------
// Memory storage_15: 256-words x 166-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 166 
// Port 1 | Read: Sync  | Write: ---- | 
reg [165:0] storage_15[0:255];
reg [165:0] storage_15_dat0;
reg [165:0] storage_15_dat1;
always @(posedge sys_clk) begin
	if (litepciecore_litepcieendpoint_syncfifo0_wrport_we)
		storage_15[litepciecore_litepcieendpoint_syncfifo0_wrport_adr] <= litepciecore_litepcieendpoint_syncfifo0_wrport_dat_w;
	storage_15_dat0 <= storage_15[litepciecore_litepcieendpoint_syncfifo0_wrport_adr];
end
always @(posedge sys_clk) begin
	if (litepciecore_litepcieendpoint_syncfifo0_rdport_re)
		storage_15_dat1 <= storage_15[litepciecore_litepcieendpoint_syncfifo0_rdport_adr];
end
assign litepciecore_litepcieendpoint_syncfifo0_wrport_dat_r = storage_15_dat0;
assign litepciecore_litepcieendpoint_syncfifo0_rdport_dat_r = storage_15_dat1;


//------------------------------------------------------------------------------
// Memory storage_16: 256-words x 166-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 166 
// Port 1 | Read: Sync  | Write: ---- | 
reg [165:0] storage_16[0:255];
reg [165:0] storage_16_dat0;
reg [165:0] storage_16_dat1;
always @(posedge sys_clk) begin
	if (litepciecore_litepcieendpoint_syncfifo1_wrport_we)
		storage_16[litepciecore_litepcieendpoint_syncfifo1_wrport_adr] <= litepciecore_litepcieendpoint_syncfifo1_wrport_dat_w;
	storage_16_dat0 <= storage_16[litepciecore_litepcieendpoint_syncfifo1_wrport_adr];
end
always @(posedge sys_clk) begin
	if (litepciecore_litepcieendpoint_syncfifo1_rdport_re)
		storage_16_dat1 <= storage_16[litepciecore_litepcieendpoint_syncfifo1_rdport_adr];
end
assign litepciecore_litepcieendpoint_syncfifo1_wrport_dat_r = storage_16_dat0;
assign litepciecore_litepcieendpoint_syncfifo1_rdport_dat_r = storage_16_dat1;


//------------------------------------------------------------------------------
// Memory storage_17: 256-words x 166-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 166 
// Port 1 | Read: Sync  | Write: ---- | 
reg [165:0] storage_17[0:255];
reg [165:0] storage_17_dat0;
reg [165:0] storage_17_dat1;
always @(posedge sys_clk) begin
	if (litepciecore_litepcieendpoint_syncfifo2_wrport_we)
		storage_17[litepciecore_litepcieendpoint_syncfifo2_wrport_adr] <= litepciecore_litepcieendpoint_syncfifo2_wrport_dat_w;
	storage_17_dat0 <= storage_17[litepciecore_litepcieendpoint_syncfifo2_wrport_adr];
end
always @(posedge sys_clk) begin
	if (litepciecore_litepcieendpoint_syncfifo2_rdport_re)
		storage_17_dat1 <= storage_17[litepciecore_litepcieendpoint_syncfifo2_rdport_adr];
end
assign litepciecore_litepcieendpoint_syncfifo2_wrport_dat_r = storage_17_dat0;
assign litepciecore_litepcieendpoint_syncfifo2_rdport_dat_r = storage_17_dat1;


//------------------------------------------------------------------------------
// Memory storage_18: 256-words x 166-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 166 
// Port 1 | Read: Sync  | Write: ---- | 
reg [165:0] storage_18[0:255];
reg [165:0] storage_18_dat0;
reg [165:0] storage_18_dat1;
always @(posedge sys_clk) begin
	if (litepciecore_litepcieendpoint_syncfifo3_wrport_we)
		storage_18[litepciecore_litepcieendpoint_syncfifo3_wrport_adr] <= litepciecore_litepcieendpoint_syncfifo3_wrport_dat_w;
	storage_18_dat0 <= storage_18[litepciecore_litepcieendpoint_syncfifo3_wrport_adr];
end
always @(posedge sys_clk) begin
	if (litepciecore_litepcieendpoint_syncfifo3_rdport_re)
		storage_18_dat1 <= storage_18[litepciecore_litepcieendpoint_syncfifo3_rdport_adr];
end
assign litepciecore_litepcieendpoint_syncfifo3_wrport_dat_r = storage_18_dat0;
assign litepciecore_litepcieendpoint_syncfifo3_rdport_dat_r = storage_18_dat1;


//------------------------------------------------------------------------------
// Memory storage_19: 256-words x 166-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 166 
// Port 1 | Read: Sync  | Write: ---- | 
reg [165:0] storage_19[0:255];
reg [165:0] storage_19_dat0;
reg [165:0] storage_19_dat1;
always @(posedge sys_clk) begin
	if (litepciecore_litepcieendpoint_syncfifo4_wrport_we)
		storage_19[litepciecore_litepcieendpoint_syncfifo4_wrport_adr] <= litepciecore_litepcieendpoint_syncfifo4_wrport_dat_w;
	storage_19_dat0 <= storage_19[litepciecore_litepcieendpoint_syncfifo4_wrport_adr];
end
always @(posedge sys_clk) begin
	if (litepciecore_litepcieendpoint_syncfifo4_rdport_re)
		storage_19_dat1 <= storage_19[litepciecore_litepcieendpoint_syncfifo4_rdport_adr];
end
assign litepciecore_litepcieendpoint_syncfifo4_wrport_dat_r = storage_19_dat0;
assign litepciecore_litepcieendpoint_syncfifo4_rdport_dat_r = storage_19_dat1;


//------------------------------------------------------------------------------
// Memory storage_20: 256-words x 166-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 166 
// Port 1 | Read: Sync  | Write: ---- | 
reg [165:0] storage_20[0:255];
reg [165:0] storage_20_dat0;
reg [165:0] storage_20_dat1;
always @(posedge sys_clk) begin
	if (litepciecore_litepcieendpoint_syncfifo5_wrport_we)
		storage_20[litepciecore_litepcieendpoint_syncfifo5_wrport_adr] <= litepciecore_litepcieendpoint_syncfifo5_wrport_dat_w;
	storage_20_dat0 <= storage_20[litepciecore_litepcieendpoint_syncfifo5_wrport_adr];
end
always @(posedge sys_clk) begin
	if (litepciecore_litepcieendpoint_syncfifo5_rdport_re)
		storage_20_dat1 <= storage_20[litepciecore_litepcieendpoint_syncfifo5_rdport_adr];
end
assign litepciecore_litepcieendpoint_syncfifo5_wrport_dat_r = storage_20_dat0;
assign litepciecore_litepcieendpoint_syncfifo5_rdport_dat_r = storage_20_dat1;


//------------------------------------------------------------------------------
// Memory storage_21: 256-words x 166-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 166 
// Port 1 | Read: Sync  | Write: ---- | 
reg [165:0] storage_21[0:255];
reg [165:0] storage_21_dat0;
reg [165:0] storage_21_dat1;
always @(posedge sys_clk) begin
	if (litepciecore_litepcieendpoint_syncfifo6_wrport_we)
		storage_21[litepciecore_litepcieendpoint_syncfifo6_wrport_adr] <= litepciecore_litepcieendpoint_syncfifo6_wrport_dat_w;
	storage_21_dat0 <= storage_21[litepciecore_litepcieendpoint_syncfifo6_wrport_adr];
end
always @(posedge sys_clk) begin
	if (litepciecore_litepcieendpoint_syncfifo6_rdport_re)
		storage_21_dat1 <= storage_21[litepciecore_litepcieendpoint_syncfifo6_rdport_adr];
end
assign litepciecore_litepcieendpoint_syncfifo6_wrport_dat_r = storage_21_dat0;
assign litepciecore_litepcieendpoint_syncfifo6_rdport_dat_r = storage_21_dat1;


//------------------------------------------------------------------------------
// Memory storage_22: 256-words x 166-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 166 
// Port 1 | Read: Sync  | Write: ---- | 
reg [165:0] storage_22[0:255];
reg [165:0] storage_22_dat0;
reg [165:0] storage_22_dat1;
always @(posedge sys_clk) begin
	if (litepciecore_litepcieendpoint_syncfifo7_wrport_we)
		storage_22[litepciecore_litepcieendpoint_syncfifo7_wrport_adr] <= litepciecore_litepcieendpoint_syncfifo7_wrport_dat_w;
	storage_22_dat0 <= storage_22[litepciecore_litepcieendpoint_syncfifo7_wrport_adr];
end
always @(posedge sys_clk) begin
	if (litepciecore_litepcieendpoint_syncfifo7_rdport_re)
		storage_22_dat1 <= storage_22[litepciecore_litepcieendpoint_syncfifo7_rdport_adr];
end
assign litepciecore_litepcieendpoint_syncfifo7_wrport_dat_r = storage_22_dat0;
assign litepciecore_litepcieendpoint_syncfifo7_rdport_dat_r = storage_22_dat1;


(* ars_ff1 = "true", async_reg = "true" *)
FDPE #(
	.INIT(1'd1)
) FDPE (
	.C(from140100637018048_clk),
	.CE(1'd1),
	.D(1'd0),
	.PRE(s7pciephy_tx_datapath_cdc_cd_rst),
	.Q(xilinxasyncresetsynchronizerimpl0_rst_meta)
);

(* ars_ff2 = "true", async_reg = "true" *)
FDPE #(
	.INIT(1'd1)
) FDPE_1 (
	.C(from140100637018048_clk),
	.CE(1'd1),
	.D(xilinxasyncresetsynchronizerimpl0_rst_meta),
	.PRE(s7pciephy_tx_datapath_cdc_cd_rst),
	.Q(from140100637018048_rst)
);

(* ars_ff1 = "true", async_reg = "true" *)
FDPE #(
	.INIT(1'd1)
) FDPE_2 (
	.C(to140100637018048_clk),
	.CE(1'd1),
	.D(1'd0),
	.PRE(s7pciephy_tx_datapath_cdc_cd_rst),
	.Q(xilinxasyncresetsynchronizerimpl1_rst_meta)
);

(* ars_ff2 = "true", async_reg = "true" *)
FDPE #(
	.INIT(1'd1)
) FDPE_3 (
	.C(to140100637018048_clk),
	.CE(1'd1),
	.D(xilinxasyncresetsynchronizerimpl1_rst_meta),
	.PRE(s7pciephy_tx_datapath_cdc_cd_rst),
	.Q(to140100637018048_rst)
);

(* ars_ff1 = "true", async_reg = "true" *)
FDPE #(
	.INIT(1'd1)
) FDPE_4 (
	.C(from140100636556256_clk),
	.CE(1'd1),
	.D(1'd0),
	.PRE(s7pciephy_rx_datapath_cdc_cd_rst),
	.Q(xilinxasyncresetsynchronizerimpl2_rst_meta)
);

(* ars_ff2 = "true", async_reg = "true" *)
FDPE #(
	.INIT(1'd1)
) FDPE_5 (
	.C(from140100636556256_clk),
	.CE(1'd1),
	.D(xilinxasyncresetsynchronizerimpl2_rst_meta),
	.PRE(s7pciephy_rx_datapath_cdc_cd_rst),
	.Q(from140100636556256_rst)
);

(* ars_ff1 = "true", async_reg = "true" *)
FDPE #(
	.INIT(1'd1)
) FDPE_6 (
	.C(to140100636556256_clk),
	.CE(1'd1),
	.D(1'd0),
	.PRE(s7pciephy_rx_datapath_cdc_cd_rst),
	.Q(xilinxasyncresetsynchronizerimpl3_rst_meta)
);

(* ars_ff2 = "true", async_reg = "true" *)
FDPE #(
	.INIT(1'd1)
) FDPE_7 (
	.C(to140100636556256_clk),
	.CE(1'd1),
	.D(xilinxasyncresetsynchronizerimpl3_rst_meta),
	.PRE(s7pciephy_rx_datapath_cdc_cd_rst),
	.Q(to140100636556256_rst)
);

(* ars_ff1 = "true", async_reg = "true" *)
FDPE #(
	.INIT(1'd1)
) FDPE_8 (
	.C(from140100636878112_clk),
	.CE(1'd1),
	.D(1'd0),
	.PRE(s7pciephy_msi_cdc_cd_rst),
	.Q(xilinxasyncresetsynchronizerimpl4_rst_meta)
);

(* ars_ff2 = "true", async_reg = "true" *)
FDPE #(
	.INIT(1'd1)
) FDPE_9 (
	.C(from140100636878112_clk),
	.CE(1'd1),
	.D(xilinxasyncresetsynchronizerimpl4_rst_meta),
	.PRE(s7pciephy_msi_cdc_cd_rst),
	.Q(from140100636878112_rst)
);

(* ars_ff1 = "true", async_reg = "true" *)
FDPE #(
	.INIT(1'd1)
) FDPE_10 (
	.C(to140100636878112_clk),
	.CE(1'd1),
	.D(1'd0),
	.PRE(s7pciephy_msi_cdc_cd_rst),
	.Q(xilinxasyncresetsynchronizerimpl5_rst_meta)
);

(* ars_ff2 = "true", async_reg = "true" *)
FDPE #(
	.INIT(1'd1)
) FDPE_11 (
	.C(to140100636878112_clk),
	.CE(1'd1),
	.D(xilinxasyncresetsynchronizerimpl5_rst_meta),
	.PRE(s7pciephy_msi_cdc_cd_rst),
	.Q(to140100636878112_rst)
);

(* ars_ff1 = "true", async_reg = "true" *)
FDPE #(
	.INIT(1'd1)
) FDPE_12 (
	.C(clk125_clk),
	.CE(1'd1),
	.D(1'd0),
	.PRE(xilinxasyncresetsynchronizerimpl6),
	.Q(xilinxasyncresetsynchronizerimpl6_rst_meta)
);

(* ars_ff2 = "true", async_reg = "true" *)
FDPE #(
	.INIT(1'd1)
) FDPE_13 (
	.C(clk125_clk),
	.CE(1'd1),
	.D(xilinxasyncresetsynchronizerimpl6_rst_meta),
	.PRE(xilinxasyncresetsynchronizerimpl6),
	.Q(clk125_rst)
);

(* ars_ff1 = "true", async_reg = "true" *)
FDPE #(
	.INIT(1'd1)
) FDPE_14 (
	.C(clk250_clk),
	.CE(1'd1),
	.D(1'd0),
	.PRE(xilinxasyncresetsynchronizerimpl7),
	.Q(xilinxasyncresetsynchronizerimpl7_rst_meta)
);

(* ars_ff2 = "true", async_reg = "true" *)
FDPE #(
	.INIT(1'd1)
) FDPE_15 (
	.C(clk250_clk),
	.CE(1'd1),
	.D(xilinxasyncresetsynchronizerimpl7_rst_meta),
	.PRE(xilinxasyncresetsynchronizerimpl7),
	.Q(clk250_rst)
);

(* ars_ff1 = "true", async_reg = "true" *)
FDPE #(
	.INIT(1'd1)
) FDPE_16 (
	.C(userclk1_clk),
	.CE(1'd1),
	.D(1'd0),
	.PRE(xilinxasyncresetsynchronizerimpl8),
	.Q(xilinxasyncresetsynchronizerimpl8_rst_meta)
);

(* ars_ff2 = "true", async_reg = "true" *)
FDPE #(
	.INIT(1'd1)
) FDPE_17 (
	.C(userclk1_clk),
	.CE(1'd1),
	.D(xilinxasyncresetsynchronizerimpl8_rst_meta),
	.PRE(xilinxasyncresetsynchronizerimpl8),
	.Q(userclk1_rst)
);

(* ars_ff1 = "true", async_reg = "true" *)
FDPE #(
	.INIT(1'd1)
) FDPE_18 (
	.C(userclk2_clk),
	.CE(1'd1),
	.D(1'd0),
	.PRE(xilinxasyncresetsynchronizerimpl9),
	.Q(xilinxasyncresetsynchronizerimpl9_rst_meta)
);

(* ars_ff2 = "true", async_reg = "true" *)
FDPE #(
	.INIT(1'd1)
) FDPE_19 (
	.C(userclk2_clk),
	.CE(1'd1),
	.D(xilinxasyncresetsynchronizerimpl9_rst_meta),
	.PRE(xilinxasyncresetsynchronizerimpl9),
	.Q(userclk2_rst)
);

endmodule

// -----------------------------------------------------------------------------
//  Auto-Generated by LiteX on 2023-10-04 16:35:32.
//------------------------------------------------------------------------------
